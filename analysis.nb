(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    418878,       8788]
NotebookOptionsPosition[    404984,       8577]
NotebookOutlinePosition[    405433,       8595]
CellTagsIndexPosition[    405390,       8592]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellLabel->
  "In[343]:=",ExpressionUUID->"b439fc87-7e7f-426f-925f-dfb43408fe62"],

Cell[CellGroupData[{

Cell["Floquet analysis for the island-mainland model", "Title",
 CellChangeTimes->{{3.9210856050791616`*^9, 
  3.921085627431939*^9}},ExpressionUUID->"d837a55e-5704-4434-aafb-\
ca2c834ea3d5"],

Cell[CellGroupData[{

Cell["Model", "Chapter",
 CellChangeTimes->{{3.921085640090231*^9, 
  3.9210856406354837`*^9}},ExpressionUUID->"fc62509c-5876-420f-8cca-\
3626f42208c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"p_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"p", 
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bA", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["n", "XA"]}], ")"}]}], "-", 
      RowBox[{"ba", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["n", "Xa"]}], ")"}]}]}], ")"}]}], "-", 
   RowBox[{"p", 
    FractionBox["M", "n"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", 
   RowBox[{"p_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"bA", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["n", "XA"]}], ")"}], "p"}], "+", 
      RowBox[{"ba", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["n", "Xa"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}]}], "-", "d"}], ")"}], "n"}], "+", 
   "M"}]}]}], "Input",
 CellChangeTimes->{{3.921073552086191*^9, 3.921073630874084*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"fd486219-eb59-4648-b03c-c545fe441dba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "When ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["p", "TI"], "^"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\hat{p}=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fc0c2b0a-a46c-4cba-87a5-447658c7ba8d"],
 ", solve for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{N}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7ef8f1c6-375b-4f3f-a38a-7940d195bb9e"]
}], "Chapter",
 CellChangeTimes->{{3.9210857071543837`*^9, 
  3.921085730541788*^9}},ExpressionUUID->"92ce7847-7f0a-47f2-91a7-\
443e53e2c257"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"n", "'"}], "[", "t", "]"}], "==", 
         RowBox[{"f2", "[", 
          RowBox[{"0", ",", 
           RowBox[{"n", "[", "t", "]"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"n", "[", "0", "]"}], "==", "n0"}]}], "}"}], ",", 
      RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.921085762543572*^9, 3.921085777842314*^9}, {
  3.9276478569504423`*^9, 3.927647858282987*^9}, {3.927647939757389*^9, 
  3.9276479450503283`*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"e7a16314-d3f6-4161-8422-7a01534baf6e"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 365, 21, 
   22566838477650574505, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.921085779627068*^9, 3.921091234853443*^9, 
  3.923053676855309*^9, 3.927647863730513*^9, 3.927648066843554*^9},
 CellLabel->
  "During evaluation of \
In[365]:=",ExpressionUUID->"9f9733dd-ee98-452f-9f94-27a4cbe51c8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "ba"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"ba", "-", "d"}], ")"}], " ", "Xa"}], "+", 
      RowBox[{
       SqrtBox["Xa"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", "ba", " ", "M"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]], " ", 
       RowBox[{"Tanh", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", "ba", " ", "M"}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
          RowBox[{"2", " ", 
           SqrtBox["Xa"]}]], "+", 
         RowBox[{"ArcTanh", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "ba", " ", "n0"}], "-", 
            RowBox[{"ba", " ", "Xa"}], "+", 
            RowBox[{"d", " ", "Xa"}]}], 
           RowBox[{
            SqrtBox["Xa"], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"4", " ", "ba", " ", "M"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}]], 
          "]"}]}], "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.921085781202977*^9, 3.921091236403943*^9, 
  3.923053678438775*^9, 3.9276478653765306`*^9, 3.927648068396268*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"21e35bea-c6df-438a-a766-7ef23577f371"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TrigToExp", "[", 
   RowBox[{
    RowBox[{"n", "[", "t", "]"}], "/.", "temp"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.927647870802758*^9, 3.927647905423716*^9}, {
  3.9276479521438026`*^9, 3.9276479531291847`*^9}, {3.927648008723114*^9, 
  3.927648010449049*^9}, {3.927648050897841*^9, 3.927648083186286*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"c479251f-6be7-4547-86c0-70c198aa1ebd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", "ba", " ", "M"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
       SqrtBox["Xa"]]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ba", "-", "d"}], ")"}], " ", "n0"}]}], ")"}], " ", "Xa"}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "ba"}], "+", "d"}], ")"}], " ", "n0"}]}], ")"}], " ", 
     "Xa"}], "+", 
    RowBox[{"n0", " ", 
     SqrtBox["Xa"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "ba", " ", "M"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", "ba", " ", "M"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
       SqrtBox["Xa"]]], " ", "n0", " ", 
     SqrtBox["Xa"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "ba", " ", "M"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}]}], ")"}], 
  "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", "ba", " ", "M"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
         SqrtBox["Xa"]]]}], ")"}], " ", "Xa"}], "-", 
    RowBox[{"ba", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", "ba", " ", "M"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
         SqrtBox["Xa"]]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "n0"}], "+", "Xa"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", "ba", " ", "M"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
         SqrtBox["Xa"]]]}], ")"}], " ", 
     SqrtBox["Xa"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "ba", " ", "M"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.9276480841703672`*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"7a5c9ff2-bc7c-4f5f-9bb3-4f2ef7ef40d2"]
}, Open  ]],

Cell[TextData[{
 "Rewrite ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["N", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat{N}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1d5f3c1c-bb4c-458e-bce7-53dc9153cc40"],
 " in a  simplified form:"
}], "Text",
 CellChangeTimes->{{3.921085843865353*^9, 
  3.9210858629994507`*^9}},ExpressionUUID->"a3359c16-c447-4993-a1fd-\
98b695702811"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"c1", "=", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "ba", " ", "M"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]], 
     SqrtBox["Xa"]]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"c2", "=", 
    RowBox[{
     SqrtBox["Xa"], " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "ba", " ", "M"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.920136465780945*^9, 3.920136501750864*^9}, {
  3.92013653340415*^9, 3.920136588193022*^9}, {3.921085840597299*^9, 
  3.921085841462927*^9}},ExpressionUUID->"8423208b-071b-4fa0-a29d-\
cd59fd0ac818"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nhatsimp", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"c1", " ", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ba", "-", "d"}], ")"}], " ", "n0"}]}], ")"}], " ", "Xa"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "M"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "ba"}], "+", "d"}], ")"}], " ", "n0"}]}], ")"}], " ",
        "Xa"}], "+", 
      RowBox[{"n0", " ", "c2"}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"c1", " ", "t"}]], " ", "n0", " ", "c2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"c1", " ", "t"}]]}], ")"}], " ", "Xa"}], "-", 
      RowBox[{"ba", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"c1", " ", "t"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "n0"}], "+", "Xa"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"c1", " ", "t"}]]}], ")"}], " ", "c2"}]}], ")"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.920136474513955*^9, 3.920136521954537*^9}, 
   3.920136763400322*^9},
 CellLabel->
  "In[482]:=",ExpressionUUID->"8539b252-8a54-41f8-921a-7a6038872157"],

Cell[TextData[{
 "Find ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["N", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
     "N_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "abe8ed4f-fef9-44f8-b167-c2f747cc864c"],
 " such that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["N", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat{N}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "19a96a57-54ab-46d0-8cf5-2f8b4d149a65"],
 " is periodic:"
}], "Text",
 CellChangeTimes->{{3.9210858819881487`*^9, 
  3.92108590055532*^9}},ExpressionUUID->"e4c94ac5-855d-4800-9e2a-\
8419c0996cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n0sol", "=", 
   RowBox[{"TrigToExp", "[", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Delta]"}], ")"}], 
          RowBox[{"nhatsimp", "[", 
           RowBox[{"2", "\[Pi]"}], "]"}]}], "==", 
         RowBox[{"nhatsimp", "[", "0", "]"}]}], ",", "n0"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.920136619378469*^9, 3.920136677313072*^9}, {
  3.921086101889245*^9, 3.9210861074762583`*^9}},
 CellLabel->
  "In[483]:=",ExpressionUUID->"04b38e2c-d3cf-415c-bd02-a21de5888c8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsol", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", "ba", " ", "M"}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
          SqrtBox["Xa"]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ba", "-", "d"}], ")"}], " ", "n0"}]}], ")"}], " ", 
        "Xa"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "M"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "ba"}], "+", "d"}], ")"}], " ", "n0"}]}], ")"}], 
        " ", "Xa"}], "+", 
       RowBox[{"n0", " ", 
        SqrtBox["Xa"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", "ba", " ", "M"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", "ba", " ", "M"}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
          SqrtBox["Xa"]]], " ", "n0", " ", 
        SqrtBox["Xa"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", "ba", " ", "M"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}]}], ")"}],
      "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"4", " ", "ba", " ", "M"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
            SqrtBox["Xa"]]]}], ")"}], " ", "Xa"}], "-", 
       RowBox[{"ba", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"4", " ", "ba", " ", "M"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
            SqrtBox["Xa"]]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "n0"}], "+", "Xa"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"4", " ", "ba", " ", "M"}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}], 
            SqrtBox["Xa"]]]}], ")"}], " ", 
        SqrtBox["Xa"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", "ba", " ", "M"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}]}], 
      ")"}]}], "/.", "n0sol"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c1", "->", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", "ba", " ", "M"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]], 
       SqrtBox["Xa"]]}], ",", 
     RowBox[{"c2", "->", 
      RowBox[{
       SqrtBox["Xa"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", "ba", " ", "M"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"ba", "-", "d"}], ")"}], "2"], " ", "Xa"}]}]]}]}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.927648158608131*^9, 3.927648175683011*^9}},
 CellLabel->
  "In[484]:=",ExpressionUUID->"9f9cf0fb-1b23-431c-8667-a3eb5af5d883"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Floquet Multiplier 1", "Chapter",
 CellChangeTimes->{{3.9210870535503798`*^9, 
  3.921087057958145*^9}},ExpressionUUID->"fed83916-2527-4b55-b2ed-\
f9fe2bb888fd"],

Cell[TextData[{
 "The first Floquet multiplier is given by: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Rho]", "1"], "\[LongEqual]", "exp", 
         RowBox[{"[", 
           RowBox[{
             SubsuperscriptBox["\[Integral]", "0", 
              RowBox[{"2", "\[Pi]"}]], 
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox[
                  StyleBox["b", "TI"], 
                  StyleBox["A", "TI"]], 
                 RowBox[{"(", 
                   RowBox[{"1", "-", 
                    FractionBox[
                    OverscriptBox[
                    StyleBox["N", "TI"], "^"], 
                    SubscriptBox[
                    StyleBox["X", "TI"], 
                    StyleBox["A", "TI"]]]}], ")"}], "-", 
                 SubscriptBox[
                  StyleBox["b", "TI"], 
                  StyleBox["a", "TI"]], 
                 RowBox[{"(", 
                   RowBox[{"1", "-", 
                    FractionBox[
                    OverscriptBox[
                    StyleBox["N", "TI"], "^"], 
                    SubscriptBox[
                    StyleBox["X", "TI"], 
                    StyleBox["a", "TI"]]]}], ")"}], "-", 
                 FractionBox[
                  StyleBox["M", "TI"], 
                  OverscriptBox[
                   StyleBox["N", "TI"], "^"]]}], ")"}], 
             StyleBox["d", "TI"], 
             StyleBox["t", "TI"]}], "]"}]}], TraditionalForm], "errors" -> {},
      "input" -> 
     "\\rho_1 = \\exp \\left [ \\int_0^{2\\pi} \\left (b_A \\left (1 - \
\\frac{\\hat{N}}{X_A} \\right) - b_a \\left (1 - \\frac{\\hat{N}}{X_a} \
\\right ) - \\frac{M}{\\hat{N} } \\right ) dt \\right ]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "83935b64-f2ec-49cb-b82f-26f1c346ab4e"],
 ".\nFor this to be less than one, we need only that the exponent be \
negative, so we look only at the integral:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Lambda]", "1"], "\[LongEqual]", 
         SubsuperscriptBox["\[Integral]", "0", 
          RowBox[{"2", "\[Pi]"}]], 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["b", "TI"], 
              StyleBox["A", "TI"]], 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 FractionBox[
                  OverscriptBox[
                   StyleBox["N", "TI"], "^"], 
                  SubscriptBox[
                   StyleBox["X", "TI"], 
                   StyleBox["A", "TI"]]]}], ")"}], "-", 
             SubscriptBox[
              StyleBox["b", "TI"], 
              StyleBox["a", "TI"]], 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 FractionBox[
                  OverscriptBox[
                   StyleBox["N", "TI"], "^"], 
                  SubscriptBox[
                   StyleBox["X", "TI"], 
                   StyleBox["a", "TI"]]]}], ")"}], "-", 
             FractionBox[
              StyleBox["M", "TI"], 
              OverscriptBox[
               StyleBox["N", "TI"], "^"]]}], ")"}], 
         StyleBox["d", "TI"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\lambda_1 = \\int_0^{2\\pi} \\left (b_A \\left (1 - \
\\frac{\\hat{N}}{X_A} \\right) - b_a \\left (1 - \\frac{\\hat{N}}{X_a} \
\\right ) - \\frac{M}{\\hat{N} } \\right ) dt", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9c6f6622-ab7e-4c25-9135-33410f89ed93"]
}], "Text",
 CellChangeTimes->{{3.92108710805789*^9, 3.921087122383356*^9}, 
   3.9210872674262533`*^9, {3.921087467494123*^9, 
   3.921087516052005*^9}},ExpressionUUID->"49457624-eb07-45e2-9b99-\
8381f7aec87c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lam1", "[", "pars_", "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"bA", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"nsol", "[", "t", "]"}], "XA"]}], ")"}]}], "-", 
      RowBox[{"ba", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"nsol", "[", "t", "]"}], "Xa"]}], ")"}]}], "-", 
      FractionBox["M", 
       RowBox[{"nsol", "[", "t", "]"}]]}], "/.", "pars"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.921087546351137*^9, 3.921087634438402*^9}, 
   3.9210887942362413`*^9, 3.921091288323471*^9},
 CellLabel->
  "In[377]:=",ExpressionUUID->"47a899ff-c173-423c-b615-9813e5eeaacc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bA", "\[Rule]", "0.25"}], ",", 
     RowBox[{"ba", "\[Rule]", "0.2"}], ",", 
     RowBox[{"XA", "\[Rule]", "5000"}], ",", 
     RowBox[{"Xa", "\[Rule]", "10000"}], ",", 
     RowBox[{"M", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.65"}], ",", 
     RowBox[{"d", "\[Rule]", "0.05"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.895326561122921*^9, 3.895326591299097*^9}, {
   3.89532991967481*^9, 3.8953299198002357`*^9}, {3.895329959504386*^9, 
   3.895329964003036*^9}, {3.895330125285099*^9, 3.8953301254114523`*^9}, {
   3.895330270298958*^9, 3.8953302709322443`*^9}, {3.895331627680162*^9, 
   3.895331634474052*^9}, 3.895332431594252*^9, {3.9019743261440477`*^9, 
   3.901974336400179*^9}, {3.9210878044868507`*^9, 3.921087836283002*^9}, {
   3.921088776435309*^9, 3.921088783620048*^9}, {3.9210896919932623`*^9, 
   3.921089710580037*^9}, {3.9210912943847857`*^9, 3.921091305025188*^9}, {
   3.922815009900666*^9, 3.922815039277268*^9}, {3.923053696605935*^9, 
   3.923053698022393*^9}},
 CellLabel->
  "In[378]:=",ExpressionUUID->"a14fc6e2-69ef-455f-b28f-2b721527da8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lam1", "[", "pars", "]"}]], "Input",
 CellChangeTimes->{{3.9210887871978407`*^9, 3.921088789532713*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"f4029505-9acc-4f26-8afe-c884d6ee9f46"],

Cell[BoxData["0.1880002090876791`"], "Output",
 CellChangeTimes->{{3.921088790916233*^9, 3.921088798944623*^9}, 
   3.921091275845289*^9, {3.9210913096775017`*^9, 3.921091315442078*^9}, 
   3.92253950128701*^9, 3.922545512920623*^9, {3.9228149999136953`*^9, 
   3.922815043056438*^9}, 3.923053702318215*^9, 3.9276482598538733`*^9},
 CellLabel->
  "Out[379]=",ExpressionUUID->"35a4be88-da31-49f8-8ed5-1016f44644be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability plot", "Subsection",
 CellChangeTimes->{{3.922546161328821*^9, 
  3.922546164084306*^9}},ExpressionUUID->"8240f7f9-062e-4ea4-85dd-\
8e8de27a9fb6"],

Cell[TextData[{
 "Parameters: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "0.25"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_A = 0.25", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cac7d98a-381c-463c-b78e-4357b0652e9b"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "0.2"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_a = 0.2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b1b064cb-87fe-4d8d-947e-b9f270069b7d"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "500"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_A = 500", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ba68125b-0f4d-49be-9286-f918fabb6201"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "1000"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_a = 1000", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "660beef2-25a9-4262-8600-c272124ad183"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "M=1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8c0f2309-5cca-4845-bfb0-f389e962ff77"]
}], "Text",
 CellChangeTimes->{{3.922539592980373*^9, 3.922539624226914*^9}, {
  3.927651206430498*^9, 
  3.927651209208054*^9}},ExpressionUUID->"6244888f-b148-4114-8d88-\
5f0a1f3753aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BA", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coords", "=", 
   RowBox[{"MeshCoordinates", "[", 
    RowBox[{"DiscretizeRegion", "[", 
     RowBox[{
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0", "<", "d", "<", "Ba"}], "&&", 
         RowBox[{"0", "<", "delt", "<", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], "\[Pi]", 
             RowBox[{"(", 
              RowBox[{"BA", "-", "d"}], ")"}]}], "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "delt"}], "}"}]}], "]"}], ",", 
      RowBox[{"AccuracyGoal", "->", "5"}], ",", " ", 
      RowBox[{"MaxCellMeasure", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Length\>\"", "->", ".01"}], "}"}]}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.921167243622669*^9, 3.921167249249854*^9}, {
   3.92133630950488*^9, 3.9213363107910748`*^9}, 3.922539527650947*^9, {
   3.922539636340589*^9, 3.9225396591996*^9}, {3.922539755858296*^9, 
   3.922539774891981*^9}, 3.923053714778186*^9, {3.92305409288302*^9, 
   3.923054100149547*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"0e0d031f-13d8-4a61-9188-59e7ffaeeb5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<coarse_coords.csv\>\"", ",", "coords", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.923069909511744*^9, 3.923069942893401*^9}, {
  3.9276516317624817`*^9, 3.927651631894796*^9}, {3.9276541546422358`*^9, 
  3.927654155882051*^9}},ExpressionUUID->"5f8a0f98-0ee9-4b70-ae25-\
5b7857458135"],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#2", ",", "#", ",", 
       RowBox[{"lam1", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bA", "->", "BA"}], ",", 
          RowBox[{"ba", "->", "Ba"}], ",", 
          RowBox[{"XA", "->", "5000"}], ",", 
          RowBox[{"Xa", "->", "10000"}], ",", 
          RowBox[{"M", "->", "1"}], ",", 
          RowBox[{"d", "->", "#"}], ",", 
          RowBox[{"\[Delta]", "->", "#2"}]}], "}"}], "]"}]}], "}"}], "&"}], "@@@",
     "coords"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9210922158519583`*^9, 3.921092263485045*^9}, {
   3.921156976430944*^9, 3.92115698286734*^9}, 3.92115791622745*^9, {
   3.921166458682123*^9, 3.921166460313891*^9}, {3.922539672444496*^9, 
   3.9225396912225237`*^9}, {3.923053719216043*^9, 3.923053721081677*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"91ba99f9-4812-4fb1-90bc-cd0fa0aeb335"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<stability_lam1_data.csv\>\"", ",", "temp", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.905444478461689*^9, 3.905444498300126*^9}, {
   3.90544547160609*^9, 3.905445472436706*^9}, {3.922545090737355*^9, 
   3.922545112130269*^9}, {3.922546013515697*^9, 3.9225460469993477`*^9}, 
   3.9225461306407537`*^9, {3.922549277455926*^9, 3.922549278772768*^9}, {
   3.923059318643421*^9, 3.923059324527233*^9}, {3.9254814118637943`*^9, 
   3.925481413995071*^9}},ExpressionUUID->"c52b0590-4e37-4be0-abb1-\
2c3939a337c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Floquet Multiplier 2", "Chapter",
 CellChangeTimes->{{3.921086145547453*^9, 
  3.921086152332574*^9}},ExpressionUUID->"e0e23302-d7d9-411c-b7e8-\
6b9fd817765e"],

Cell[TextData[{
 "The second Floquet multiplier is given by: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Rho]", "2"], "\[LongEqual]", 
         RowBox[{"(", 
           RowBox[{"1", "-", "\[Delta]"}], ")"}], "exp", 
         RowBox[{"[", 
           RowBox[{
             SubsuperscriptBox["\[Integral]", "0", 
              RowBox[{"2", "\[Pi]"}]], 
             RowBox[{"(", 
               RowBox[{
                 SubscriptBox[
                  StyleBox["b", "TI"], 
                  StyleBox["a", "TI"]], "-", 
                 StyleBox["d", "TI"], "-", "2", 
                 FractionBox[
                  SubscriptBox[
                   StyleBox["b", "TI"], 
                   StyleBox["a", "TI"]], 
                  SubscriptBox[
                   StyleBox["X", "TI"], 
                   StyleBox["a", "TI"]]], 
                 OverscriptBox[
                  StyleBox["N", "TI"], "^"]}], ")"}], 
             StyleBox["d", "TI"], 
             StyleBox["t", "TI"]}], "]"}]}], TraditionalForm], "errors" -> {},
      "input" -> 
     "\\rho_2 = (1-\\delta) \\exp \\left [ \\int_0^{2\\pi} \\left ( b_a - d - \
2 \\frac{b_a}{X_a} \\hat{N} \\right ) dt \\right ]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6d8c0fab-3593-4025-a7f2-4cda10507058"]
}], "Text",
 CellChangeTimes->{{3.921086160636003*^9, 3.921086175718453*^9}, {
  3.921086293920463*^9, 
  3.921086297918624*^9}},ExpressionUUID->"b734ab4d-ef39-4933-b064-\
6b24acca97b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rho2", "[", 
   RowBox[{"delt_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "delt"}], ")"}], 
   RowBox[{"Exp", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ba", "-", "d", "-", 
         RowBox[{"2", 
          FractionBox["ba", "Xa"], 
          RowBox[{"nsol", "[", "t", "]"}]}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", "->", "delt"}], "}"}]}], "/.", "pars"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.921086418073299*^9, 3.9210864694663258`*^9}, {
  3.9210865221372213`*^9, 3.921086527489173*^9}, {3.921086653197844*^9, 
  3.921086697464047*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"3fc1c102-814d-40a0-bb01-1f2ab1464c6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"rho2", "[", 
    RowBox[{"\[Delta]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ba", "->", "0.4"}], ",", 
       RowBox[{"Xa", "->", "10000"}], ",", 
       RowBox[{"d", "->", "0.2"}], ",", 
       RowBox[{"M", "->", "1"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.921086393304316*^9, 3.921086399987541*^9}, {
   3.921086714285962*^9, 3.921086734850593*^9}, 3.921086982314999*^9, 
   3.925481898810961*^9},
 CellLabel->
  "In[388]:=",ExpressionUUID->"0e9df3c1-fb40-47e3-8d61-e51112b3745e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Delta]$$ = 0.462, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Delta]$$], 0, 1}}, Typeset`size$$ = {
    94., {1., 13.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Delta]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`rho2[$CellContext`\[Delta]$$, {$CellContext`ba -> 
         0.4, $CellContext`Xa -> 10000, $CellContext`d -> 0.2, $CellContext`M -> 
         1}], "Specifications" :> {{$CellContext`\[Delta]$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{366., {77., 86.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9276518363324623`*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"ccfe818a-4231-41a3-bb00-06597b4a66c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"rho2", "[", 
    RowBox[{"\[Delta]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ba", "->", "0.2"}], ",", 
       RowBox[{"Xa", "->", "10000"}], ",", 
       RowBox[{"d", "->", "0.05"}], ",", 
       RowBox[{"M", "->", "0.5"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.921086871813773*^9, 3.921086884155917*^9}, {
   3.921086923111116*^9, 3.921086951149132*^9}, {3.922546187683144*^9, 
   3.9225462088625307`*^9}, 3.925481949304373*^9},
 CellLabel->
  "In[389]:=",ExpressionUUID->"98a9dbdd-5e01-44e0-950d-5af1b08dbb2e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Delta]$$ = 0.66, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Delta]$$], 0, 1}}, Typeset`size$$ = {
    94., {1., 13.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Delta]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`rho2[$CellContext`\[Delta]$$, {$CellContext`ba -> 
         0.2, $CellContext`Xa -> 10000, $CellContext`d -> 
         0.05, $CellContext`M -> 0.5}], 
      "Specifications" :> {{$CellContext`\[Delta]$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{366., {77., 86.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.92765184537951*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"acb993d4-b616-4aa1-bb05-17895aefd27c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#2", ",", "#", ",", 
       RowBox[{"rho2", "[", 
        RowBox[{"#2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ba", "->", "0.2"}], ",", 
           RowBox[{"Xa", "->", "10000"}], ",", 
           RowBox[{"d", "->", "#"}], ",", 
           RowBox[{"M", "->", "1"}]}], "}"}]}], "]"}]}], "}"}], "&"}], "@@@", 
    "coords"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.922546245518486*^9, 3.922546310055727*^9}, 
   3.9254819569216413`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"c4989769-fd74-4340-a1b4-d81b6e4cb2b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<stability_rho2_data.csv\>\"", ",", "temp2", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.922549305941925*^9, 3.922549309603963*^9}, 
   3.9254814812720537`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"dcbf21bd-c9a0-4507-bc54-72bad6f3ffbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"temp2", ",", 
   RowBox[{"PlotLegends", "->", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"RegionFunction", "->", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "\[Pi]", 
           RowBox[{"(", 
            RowBox[{"BA", "-", "y"}], ")"}]}], "]"}]}], ">", "x"}], "&&", 
       RowBox[{"z", "<", "1"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "True"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "->", 
    RowBox[{"Directive", "[", "Black", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*TemplateBox[<|\"boxes\" -> FormBox[\"\[Delta]\", \
TraditionalForm], \"errors\" -> {}, \"input\" -> \"\\\\delta\", \"state\" -> \
\"Boxes\"|>,\"TeXAssistantTemplate\"]\)\>\"", ",", "15"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\!\(\*TemplateBox[<|\"boxes\" -> FormBox[
StyleBox[\"d\", \"TI\"], TraditionalForm], \"errors\" -> {}, \"input\" -> \"d\
\", \"state\" -> \"Boxes\"|>,\"TeXAssistantTemplate\"]\)\>\"", ",", "15"}], 
       "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "->", 
    RowBox[{"ColorData", "[", "\"\<GrayTones\>\"", "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{
  3.9225491807189817`*^9, {3.922549240503497*^9, 3.922549251357341*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"88ff2ffb-e033-4c14-94aa-59adf406c6e0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxcmHdUz3/Y/0URoSHJKCJlJNIuelZo2ESDCA0plTIiLUo77b333nsPKpKQ
SPuzK4pKO+n3/p37vvuewz/O47w+79e4rue1ErhlcdFw+bJly6y2Llv2//9f
+hd4mJGpn6bwf2itYqru/8wJ/8dcNpzP9Z4FLPHQebP+SaWoJSYFGPCrPEtY
4lMOXGf8bqYucYlJ7dMepawl5tgv/WUDZ94SN+54eVf2WcES2/LQV+iNFS2x
2NojEc43S5d4gCngcPqn8iWOmh56+0GpaokvjijenMyrWWLnsVO26zjrlljv
7rTqDvX6JZYbiN8g/uzVEm+8dbb/RNnrJR7tmU3XHmtY4matpEeme5uWOKnt
vLL9zTdL7Hjmzzq/sLdoaVy3cvcqZ/yfff+HA5f4cDq3e8ma6H/WE5fYQcZP
9Sdr2j+/z17i8XWnDRVd8v75vnCJkx0+JK92K/5nv7Il1h67ONjmXvHP/tVL
7CL2g7v1RO0/59Utsd73zKL8xvp/zn+9xLIJ5pohqg3/3Kdxibl0D00/fdP0
z/3eLvEw93jIDfXmf+77bokb3hfInGhu+ef+rUsc4/Kwc++pD/+85+MSV8Zs
PbqK8fGf931a4r22tt5PhNr+ee9/HKzd2/vD6PM/729f4uWSCqLXU9r/sceX
JbbgjLH/OPDlH/t8XeKekcVW5T0d/9jrP1ZvvrG9yPjbP/brXOKi5DoL4bTO
f+zZtcQ7nXbWhg11/WPf7iX20XPiWLuv5x97/8d/5Gk37E16/7F/3xIb857I
G03v+8cf/Uv8ZSKJSf9H/z/+IS1xnPGKtO9BpH/89R93fBX/tEuK/I///uP1
Jwxmdb+S//EnZYmPFwQKBD+i/OPf/9hGoEH9Aw/1H3//x3k+k5asJdR//E9b
4oGF3eFKWv/x/+jhP+a/q1lvM/0f/48+6Et8qcvle0HIf/w/evmPPdRKuEak
Gf/o5z+uKx6QE/r2H/+PngaWeFqQV1/v8X/8P/r6jw8EqHmG8g7+o7f/2IDp
ScGn0v/4f/Q3tMQLQyV2oqVOePa/+fB/OGCJ//QFVJ4IjPpnPWGJbWm7+eSS
U//5fdYSVw0vy96jlPfP9wVLfHTA/IzEweJ/9itd4kpyzzD4Kv7Zv2qJ+c13
Nyax1P5zXt0SXzPtCcqwrf/n/FdLHGUcYJj3+/U/92lc4h7Dk5IlJk3/3O/N
Em/TZ2KpIr/9577vllj3Rml7vXbLP/d/v8QR1ywS33xo/ec9H5fY7MAGudsJ
/3GTTKbXhNwARozfRmZQA5F/dLGrXW4Qc3etBwozXMD9p/l3cMcg3AyfO+Z7
PkDQ3IzTiNEAWoMeJrYvROHt7zCLRc1B8Aw2nZv19QXLU/1kjZlB/NGbDbA9
Yo56BfNhu8BBPL1gb52aYAeegzp9c3YD+NnQbJl/Mw6Xnq/yOJowgL/V2y17
8yJhZXjW+rniAAySa5N6ueIhfvnUm+sbBtEWtTEk/YE/nFYEpBwuGsR3ll1i
29Od0XlMMN0sn1jXtGV6b2aFr/S7d175DoLVckThMrc2fjQlax+4O4iVK3nu
dUy/wAf9Nft35AxA6+5vexjGwpPt1RGTtgHc7hzwDn4XgTK7IyaXZYn3ejzn
GGkPQMXrchdzj0GsSfIy8jHwwryQscVJ00HclP0g8vv3Q1RkX/qSrDiIbdSf
fRH6xlhbeNXoytwAhJk6CjJ/hcBP+e+p6pODGJVVmC7RtMNuL17zS4kDMGqQ
VxfW9EL1Q5l8t/wB7J59KUq3CkJ+65Omx18GcIPjdaGTQAgcNJ6ni4gzkNpj
0R6xLQ4uspGng7cNYK3yHffgh4koC2uzYetjgP7H14KVIwpeAxROH9YBhArn
Vx1kjcP2VA++F1oDuLUt/aVdSwKWdzDrqFgPYINw5LcVRgH49Obl9QEDBhpk
1b6c7ElG0sUxn+tiA3DyrNt5ujQKe5gyTzucGcAJ75isswVh+K7QHLi4agAP
N1EnnnyMRP+3fqf8nQNgNWP5+mg2FFVTnZX6nxm4bvW2yYruhQ1Xn5j6LR/A
aQeBcI3P/vC4f6Rj9xgDtLWkLzkLITD4JcCvHMcAN59tI59+MI5t1b9wpYmB
T7MeiRxxoQjJd3jY2MGADD0lm7ciAFNnDGSkghj4dpuWafgqBrcTt8OpmAGN
oMl7UZujMPlG4YH8WwbiL3C1vc2Ix5rYvJanYQNQ6+pzWnfVH3u+ro2e0R4A
xUInVkHbCTvO1WyWdSD0lsE4cG9jGNSTLmpP2DMQ8K28Rr4/DbtzqvZ6UxhQ
W3/Jj0SLxSqZp2bOvxlwz4rPvPYgAQ9GPJiPf2BAid2h3gHJGNC8Zu5K2Nex
bd2Rnf6eWN2kotrsN4ALWfk17RlPIcV+i71SfQAXv9J4GB4vke7HE/qNYwA2
OWespB86wcmKq+yPxABW1v9UZXVzwZxGrs9rmQGUnb59esOnh7hz6K294a0B
qO5ZUZDIZYUCZSvqR0If/P0SwZzW6VC2aNpHG2cgdJX+I4ETKZguXDj/PIQB
0RV6guGtieDp2HrncDphr0Il4UaNVKxxW2PF1j6Aj6EFOlpujnBWFMwyix2A
KP1Iaq/sdcxNXPPkm2dApXNXQtFXT/hSPeu4zxH+ut9zZ5N/JuSTxp54ajEg
F+gRs6iUBuOvChaJZQzErmqWWxWUiIG3r6vaYhkwS5KSO6ERj4Tumyz8dxg4
YGypFLoqHpwifI+jPBgwvaGirrAqBeyXt2wSyR3Am3s6ynuMnHDqZ+CX/coM
yNdmff9wIRG/2yUPGB9kwCNrNc8N9RRcT7pa+iiMjuRqsZ8nCtIQ1t0RlEbU
S6ahPV9aVNKwYiHtyHJOBnaa0a9brUtD1nMvuS33GBAyuRfb/yQR28t/vubT
oII+qsqZ/TcPO90bxzjnenFo4cre0evV8Ijcb/+lZwDBHiq+5M8+0LuSFcdX
OYDRC1cM3572Q7n0x8sHVg1C+JG8kuAxN5xevUGte+MgVAKU9ha2PEas9REl
j9EBlGjmiz1KN0LAj1eJ7toMOGte6npaGYa9VpzdHZoM/Apscp7bHYPvjX+3
Xupi4OYuqZekBVu8sBYSGyfih7fZxG5AygISEd2jm3IJ/b+wexrsYQ5eg1e6
83pEfnjTf/7rC1eEv1ydPuXAQMZsnE8yp83SuqfLGmkNewOsui6SSSP0csok
nt80yRasykl3M8MYGPnFFPdV1gMcty2u7C9gYGX4pbUMpucoDe97dErnv9//
Ecl408fOwF3zVfyZM3dAnvSXqK+hw9AlS9rU1AM+ijpxAfN0xA5svbxo+gIC
aWL3+hh0WCkUeK3KfATK//7eVZKaaNdpiPuGTH+/v6TDToMR20x2IPRSyC5W
R8fb/+V1rXEBnA8Ie6jfYbdU9cd02jH1lXmE3i6tn2Z19EMEx06ftDk6BLdV
N+xpDUbDDVfRqf0M7GGOWd/I8ETzhq0W8jYM7JeQczq2JwTsLrcPWH6nY3nv
612rq3xh4HJZ6vkGBi5R/NiEDf3RYKiSlrmPAUPJ9Pb0ihCUSX5kWB5iQDZo
qsBpMhLvaCNbLhH6IlMzfn/njQVTtH69J2EPmVsPzpv1xeCtjLSv7CwdUPLT
a3oVgdduePdykQ7OLaquFxYSwPW0Ud84hg5VHq3iZaRQhDEVPpyYoUO6TlxO
ujwZ87+Ph7x5SwftbVtMo1cExHuSWR5l0uE0w1mgEZGIz/furrMi1p0m64VI
M8kYPHFx7/EzDJyREdko7xsIk6246rudgalHpFMcokmIMnBsCamk4+JMc51I
RAAaBF4HSuTQsTtTOLBoIRYsG5T/6Hylw9+7TOKmDRFf9zY2PiPuF1T70evO
lhR8WPHSRGAXHRNF3OK94glY5bHzE7cRHRUVy56o+CSC88w5Df1aOjI5hs1L
ddNg89Jmv2IJHTbulFPpItlIy9ZjVOTRUaQUze2Zl4GHN42yy43p+M72KNg/
JAtMs3SKpB8dHZ5edS+PZsE1qMGvzZkOlZKdf889yUXDlIaImSUdyke3frNe
9IWRwx65mwF08LcwWb/6FQDFZUNFfGcZaFZr/Ha33gfnXw9ZXf1C2H+f28bT
W0NwibV13vsTHTw7GEF7eeIhw7JRJ9Sdjr3GF1VX5MWj84LcjlB7OhYb9rgf
douGk+btqvP6dKQ2SCjpcYdiYOzK63eidLCaUk27PuSC1V773CFiffDggrd0
dh6yyN7ZXtp0VCsyF967lAvll7sNLWTpEL/ScyJubz7MUqWf7Big4eAVG2kd
7nwoXFW7aiFGh/f1nQMsagW4KyR64Cc7HWKf/uY1PszH6mtSV5FER+SJ7vVW
0nnY9fCoHRLoKHaM4ut3j8KhKPm6dw50PMr4nHxOIxwXXY+S+IdpuFfSmJYY
4QvH9yLn7I/Q8XH9dI9lQzTECwtLK3XpaF3+MWw6Mg6nHvm9ZyXmDYr8EZFX
dxLAMb7jkfcBOmRsuWrpF1Ox0DZfy32M8O8Jt74RtmQ4GK9nPWhA5NPad03b
W1PhLyRkcZewh0iessK2TH9iX9Vcrmt0rLjRs9kxOhK6OvkPY5UJ/TQFs/Rf
ysDXh0rXvcTpePZX4TKzSTZOztwpNBqhoY372qRzbA56NWyKhLjpMFjDE0nr
zEHYxHWDZSvpOLvF+qKOSB7EE/WZhZfTsYlj1HD8TQaifqyemCT0mO8923XB
PBNjYu9aix/RYT/Ny39nVwZYPCbmeDTouBOwMvrqxwDUVqkWn1jHgFu4n5mt
ehZ8fRByoJ+Oyl7ziYO+mbg9lWoXRqIj8YoPSfdeDkT+njkmVE3H5xeFtx3U
chHrPvzGkY+BzWGT+vsVczA6/p2f3YkKlZaPdfFRRZCbsNu4UrkPSdbkvzdY
69BYbRObZEHHSRs7tvgZEySUjQ2fJN6/99cFc36d55D7prFH6yYRH8LBLjKF
z7D1yGLlMzU6dLJkOY6R7yPT9dZa9+10aCWbUn99NIC6esgXz580yK9582K1
hyOOzJB9rE8T62+59xvGe6K7lo80bUvEJ6+0nmiiG4p2rt9tyEXsr+64wZ/0
FFmTnUUN6wn7TjFTEhzdURZj46QaTsNk0ZC1pHIBsrw9zrP/oCE7mv1malgB
+ocHzD+/puGssWDZ/Z/58D9J/dIdQcNg1xoxrtBc1DeNcl0vpeFQyvLvA1KF
OPEqp94omQYV+veSTz/zMK6rseh+noafzqJ+vJQ8/Pngc1z5KQ2uDzU+1RzL
x+6hhcVxYt1tINHF+lohJgNlPlyxpGH8foznMfcC8JxcHZFuQwO30nRW+XAh
nA7szujXpqFaR4ohGFyEbaWPJAvW09C4b41TrmkRtmwVl9pxmAauibSJJLli
SJ8bP2FJ8DNN5Ssp64qQFPnmwy1WGu4q7tyqNZqPDPFsTbGNNBx4zxRFEi7E
9W0SnRsaqXA5tcHL+FQh2rYsXl0zQkWm1tZLDBoRn9d+IL6Oin1zr/mF2vKw
drmS6oNWKvxEbn9gXlOAwLIMEUkvKobsRhSfsxXA9LvbxtGPNKRu7NtTm0bM
R7kHo+se0zH8Ybf345JkpJGasxMP06HWdMGwvyEUFLPiGFFmOkx3bzlSIB4M
ruqVpw2aaVhzdO3HOZtgmHq+mr8wSMPogkeOWF4YAq9Z8FJZ6NB+ndCGJzHo
9Fr2PoXIH7lVXMFpreG4tzvpyS5PGm5keL4/W+SGhOHl/s5EvNSvzvgbNhuL
cqm96xOLaVj7VGALr7IvXiZPqW/5TIOUzQOZ6AQ3hIqd2jJdToP08RHjKcEn
kKww04o1paFvm8yAfmAINrcwnSoNo6H2d/ehXaeCkLt/ddD1+zTkDN1r9Izy
w8LM588WwTS06xztyUqLxO2UtJo2aRrO8Kv4+lCcsKvjkUfCdRp6HobeMbvm
Dp4vrr79hP+ZRl1uq7s9hsoAc6m0MA2Hl8uOlagFgE+4R9bgFA1Pfnt8+L7J
D5G/Kyz0e2l4o3H2gupec3Q+PtLClUODIEutJSPsBc6HNV8vJt7Xd7HJYbVR
OC41fyj5ME8l5l0qk+3nJDQee5WUFk/DpY6H09K6ydiz6erdjWo0LGP9qPnk
731coWw+L37wv7/PWDHd+bPAS0PI8xfSHv0PoZDBVMnTT0WE7rmYkz8fYGyA
fjiVeG/IsOD8tSpLfKCL8s+CBr4zw7bXtOLQYFJF2tNFw7cU/7xAg4Sl7/9v
f8EHQ8JzL6n4LsUx3xzhBGP3E/NZ+jQMVw3mfZuPQibNQi+NsF9886l3Q51h
UGB9GpxoT8TPM6mFxs/x+FhQLXjKgIi3Iur688fi8CXu8MSPBRokj/9WbZeK
h2g/82BaLhV2z0y2b91sjV3/ex61z3XoAvMtlH/GNi11GmZT9Fo1aoJADyz/
GZ9ExV0zWrjbZAQks59xlGXRUCI5Ovf8bBz6SIsBrok0vBPJZtN5n4D0qt1n
XdtoYDv1zPPLzjiE8Fjm/f/4YekPXaWzLwytXb69FhtoSEwW0H+bFgKugypO
IpFUMKvYpck4lWBxbufjktt9UKwf/rRtWT1UKum71SOJfv5PlbG+8Uuck+TQ
2/iOBrG5nyqlPbloyffdOE34232eKk46lIlfOWKC/oReU24efx+3IgefNY9d
7yLsHcRrWuHEm4VS41Wvf5KpEFL9unmophg1j0ScB0apSHU64MnbXQIpukH6
FSI/DB+hrumJLIYT3Vj4GoWK0ebrt37qFiHBVf+tfAEVfBo45ZBdBDa6zavT
r6gwOXBePOF5Cd4pPgg44E6F67fbTur78tDyV/EG9REVxXNpNaSd+QiY79Nz
iKai/GoG8w+ufHQ9kxG+2UKsj+xal0zUr3ubg1Y/LaFC/+PAn0vjOVj7yUGK
sp2KwSrhZzziaVh+dvkyowwqmFQlNssv5ELgGPvPHStoaBDK2FbonAvyg4Fd
gmpU6A4LlhRezMb7zb2NyZ1EvnKJr8+pysX6WD5sGqZC5GxEruRYHlanPg2x
HaCiRzpipWRNNvRaXbzXqdLwJyl5yml1JuLHIvN3bCP8LWpjmMuejd1FYcFF
hP6ET9NuJ5vnIl7wXiP3WhoihRU3C42lYZ+gjpD5diJe9SKbAjPzoMz/iLv+
Dg0zOYoe111z8VP+YfWlnTT47WMaWyTq96ffv9jmpqhYrK/Sb1HORH1/2f4m
ZxrGbpQuE9ufjfTudN7ZizR4zZddys7LxpiOwg5uWxrMo3acfRmajuvnR/Ue
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
W5/Y8R4YqjGZxb2qxIPq2/Lzf3rx3VYzkne+CFE/DEw4ZnrBNsTC5alRhqK0
2+7RkkR+rUlszDlQjvOr64Onl/Xh52i+wVBKCdyy+I/Hj/aAomR5PMa5BCIH
NilP6vdgedK3Oywq5TDzOmdoytWNqK1nwqj91YhSv5IvlNaLmS8vzI73FSOl
0x/NR3uQFtrtVF+bj6K+FzEyz3ogqtZ+P/lWBYqfHDBoK+kh5i6OnU/Pl6Pk
iJvXsvJuMDs7HjHsrgZX8OSTUYceBDJuGqnpFMEkKfhsM2cPqFYu0Ws6qzF3
fsM4B70bzzKeyk18J/ROS7EOie/B29w9kQZFxRAeVdYVONsLUZmf4s1XC7CB
YR7ks78H1x1Fs7gOVqEm/aabIlsvhv9kRa49UYSB+E8BcQG9yJr3dhecKkSn
0Mgjh8YeVPxlGvHOL8LUjVUpx8R7EcWUoHvSqxhFrTdb+DR60V14NF/aqQgP
T1pQjxzox7BG2asr1HLksHU7eWzqRUYMx/StwXo8kzaZ4dXqxf6zr1hKZeox
prxDb7NrD6w7HR64D9cjaF/93UijXuyoc0vio9fjtP3J7hKRXow/1yzNFqyD
aJy8Ju0DkS84h3w45V5B2H+vrfeeXhyPOe92oroOOnXvU3xf9eD+xWHBySe1
mEgZI++K7cEah9Hd5hM1kDKWHv3c2ouqv+t0dQ1rsLIjOdfzTS8OLKuIYrKr
xTm28eblN/vwWyqQ/Wh0HvZObX5R/70PG0Mfb0zRqYDEVcGIM469+MmxdWWs
Vh228R09Y0zY48hfDwVmq1p0ZWolWVN7UcJX/95qPB8tbN9t8qJ70XxaJPtT
ZgG+xmU1fRnvxeqga3eMHhbCVHmv0d6BPgy5zx4LbC8EJxvb/aeXCD65IPX3
XgHWCb691uHVh9W6nrTblcXg85hgfyPfh13LYmcevinG+SGf9Q43+uC9ejR6
XrgIrZ7hLNf29mG8h/egsVU+tiwmG5KSe/FYMPXR7/5sKL2K8fvT0QuHCDfJ
oW15oOuOvgz26sWc2EEDl135GNr1WDaoswd72zqDKxm5iL79VTWWsO8w51xD
HjUP6is5V1427sXdY3SZwoxcZN+qNNlV3gNLN8ZX5jf5mGQy995VRcSf6ta5
HQqF2H381NpRll4I1N0fZprMR5zIxuVHnxJ6j1fw1/QswPcwdS3p9j685rFJ
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
00/TQl1oGCiNluudQ+iDI3fepoZTIbgYU3D/MhEP6cKZQxuomDIK3XVDkoP1
HQ3Pv16gIXPZ3OTqPBYM3aT8peZzEcFddsRrmIGWluXzLrtwIUivktQh9Jzu
+vO2sgR+bX3qZXWD0Ps+KfZGjmt5iHH0On6nj445H99vD2riITFP1Cv/nQHe
oNwbliYP4YFG6oHKTBRk/XML6iDwtncp408KE67drP0qHhxkHTC9IpbDRMTO
NbEMO4I3Ym/XPlNiwm/m5uuhxByUxiQX/c5lYrR8clYsl4kyH1q+fyOh580M
In3VOUibs7Q77BIdZ+NP6nQYceAS8yE6bRGhtw93TRVIM3DfzHysMImJit9F
GyQI3cH4eNTtmRwL4cU9ro/jqLilVE66spSOAJvvz1J5PATSnWcffE1BYuG0
ncPpPJivfHajcy+xXtf5a6RiwpdoJqkozWDBY+OjMV1tGhIy/u1EJANBPj0l
d5V5GJlhWxJrTYMdIy+gKZyGCtXd+x+ZMnFvx5ezaf50tK67M7CGmN8DncuS
zu6jIgKHBVucCb520Gy0f0LDp9xQkXwxAyNOPv6z6DTYxA4umu1LR3Rf3/iP
BzQCXyzOuMwn9qf7dyt1PuHDev+uqc6kw32iIbd+jIqeWTv0bQi8VEjb/m/V
bCo6wjONTugyEEnZlK7pT8VEsP+XyBY6JraEhuwb5sLCUP/TzkV00K6ltF14
zYPN2VUbKj7SsFDq+MXhpxxcb0y1HPOgoc9qXf/HQwTfnfx85QqbBl9LwZHf
m4h+eTP7L/MrDdlxmTmJAVykP+W4TD9Mw22Xfvr6OxykNpKDDKZocJ5RdeVW
CcEPwRNvFm+kYlFtQMQDQlcGxede4x+i4d5EQ8jLJVw8OHvvaloNFSc4fvmb
m7lISXB2OiekYt8KvQTTEB725RfvvZBJBann7+NDLDb2fNotMs4n49cM28OZ
W3k4bhgYuGYRFfuNjl8cf8lFjFy47nEdMoyzVZU1yFxCB7mena1HwZqIgKxW
Lg93rtLjBZtpOJm76ul0lgCj02mks0T9Fh/6aXCHxUcIJ1Vj0oeGw0nzIguT
6KgqeV5IU2ViQODbPPyQhxXfT4vmBdPx7VFx46QLG7auH8+2zKPj5raNmQoE
fvUkyThN5NKhkP844lAmGxk9fNc3DYTenh57rPMhMccZE9/MZlBRPtqlFFzD
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
jIlz8t6UICHoELOXwVAiNtapGvumtEPPiMriOBULV67BtM4QMppuGfT5aqRi
ZHBkz+PcTpwK/l3lvFKAh4GKKZkWVJR2ypqFnSpG4TdWhwI6PtZUODSEtBZg
4OU9M6Z/XdB01jYjqBTi8sfDN+IDujFgc0h2jLsEmUEuQ+Ja7ZDnsfycNX0L
nr1q8WKybTiu/tbevvsumK4PPfUXacd7iX+fLgr64p/5yRFLKglXJ8/9cuTy
B4nYe2UbHW+w/XjSelopxLMTxX6fp6LyjTvjuZpKsNUSOLonqUj/cNPhpU0Z
3hVu9OFa6kTy25hWHt0K+L40ZuSj443FWb3fzipFUPiclVsSRsOp1kKfjaoE
5IsKFW7N7kLC9K3j+5IJuBx/I1jRowthzg3R2yuL0cpWGh5j2QUFam0YqbMc
nDpGWefoOonyO+fU7fxSxLjI6m917sb4WKqIe1k5bB5FvFOb7QKri7oE78dS
RD+IYjLho6GejTdMkK0EisfMv29LpqEn6PMdc1o5cu2cOHXp+BAW4GB8SaQS
2Ty163es0XBEiSWFya4SS6fmX6jn0rB4Zf+98FdVEFe5ObL6gAqtAaGOTewV
mJ4WX7o2ROcnitGxo3T/z5S/u5PqSMODzSGmDpRKfPsX/10qhoYye441xg1E
3BzZKGsj3IU+w6St/CHV0Nl0Z8h5uBvEf71OfzZUQkvvYzZPfzecuHbnv/ld
ik+k+ueldB2nNKZ8oyC6EqSKKwU6e7oRKMiuoN0chkmBHTSj2F4Ua/esi+Kt
g3xNp87WXY8xPWavx06uwW/2couJ9sf45G1VzOJciy16c9e+qD1Bm/xlV/dB
Ioye/zR6MP4Et/Qf/DA+TcRqrJX78toT/Dt9QzLapQavbMp1nic8RsCBbhUn
KhEcfnXan1Wf4NHPtgaNbzVo8j774eydDuTYX1EhNhChWdMzoCRPgZ3blVdB
1USEEC/y+5WTcXQpajLhZzXuLq/yWJZ3QDzkyZay0VqsU989suzegaG+OabY
HfXoe3RD0JixA8UxOrGquxuht+4h28cHHYiJ05bjvtQA1pt/5PflduCyy+uE
N4mNcC87ej9MtBOd4lt+Poipg9XPy5syj9P5RIjJTtCvBsFHxCMjRymQ8n3r
3StQi5MR3zcL+Xai2u3vh9jz1ai9z9FgfoKK9utXxvqNqpHFY8iVfbMTV/f/
9vakViLQhmtd8j0qJGVvDmqbEFFze/e9pxc7UK3oNtl+qBLF45FP4z93wEPT
3TOPpxKdTV/9pKo7UJLG33+9ie7jt697GCXagZ4hlv1aG+tA+3KhPuwlBUxH
9AV0J4gY/L0r6jtTB8bakkc9/lYhRlXUrorcAYHTpeqqiVU4f+jL3nhVCg5Y
TMomT1VhHfnVe0vvDnRdtyM2JFXj6JsriokpFKR1zuwyflaNwJMlFW1FFPit
bnU90VgJcvymP8WfyPi823PxclIlho017m/RI4PUWBYqzlCOZAfLrFM8ZNyU
Wti2I7AE1+f7e8/xUTDq8Cit4kgtHo8aFk4XkjFpGPpAQrsG2ixm+rJOZJxe
ZOl471WLkQ2eqZWGFExqfemRU6/DMYND1M/pnbh3ly9Xy5+IGQXfrzMLdPwb
OBs/blMJH+1qrSv042cqbqiJb65EZmoo67lpMpSTXK6VHC1FdtfQ+CupDtTM
97f0FRbDXujwzvGYDgSvBQVdvFaGha4nHBqpFGz1djY3OFiKnj2941pfKVDw
eLPJ3KwcFlmvtZ5HUMArcMxJ5mwRXgdWebcKdGKk1U9PXKwU/eNMY05nO8C/
PKZU95EAn3qLtHNDFMTp+bb7rOThmXrs97pLFIzLsbiHkQi49fDzutdvOjD8
9tAGYZYiBGxe+2JLX9+qwYB8A5l8FNwNuhYzSkXcs9KV6Mp2zOc5bg/1oSE/
XmTbxqMknOZqJBxYoiIxLDZGIJkEUspApvFgPeK6RN6o+3XgRoa/9FxuA6IZ
wrPXLVAgrPPRfgtTHdhOCMnvcKTgXFfer16ZeoTd4g0RotdxRWrBsNvZWiiO
e6TKp3SAuDC11TS8DqGCbxg07DvA511SM3m4DvFRuqUrjJ24/Ns0W1yJCMqP
/v5X5lRcjf1gMTdbg/KvrXbDfZ3gOu02KMbTgNXXi8FFT+m6augv+Sqa8Lxy
IvzaVCeqRLYNJ31owLsiVe7D0lScshbY5/67Hoc2Dd/Y192JxP0CBUphjeit
5eyVp+NgtrqGkHFEE7gOJCpI76Vhl16idcqWJrSpxPpa03mWI1rvo2geGSUX
uO6mJbVCa1Xl33u3dtiKjZdHCbfh8nXZs60Sbdi+Pd2WfLUdR8InW+v72mBW
2GZUGNcCgWZxgtPXNgyv/NC4dIiET06iWzZyt8HEZ0aQtNqKua+t3691tuJ0
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
ZxrbalqJ1TORT02O5uDzCc8XNpFV6O29v/g5ORsXzXmPs9LXiyPeo22FOw+5
57LP65wqwncDl+RNW+ORHe4hd6q0GK+LZGQZHbOhlZH2qvBSJZI0md390zMh
YsfBL/ukDMtnNDdsWJ8N/Y6j0UyfS+AltHn90twjjDadE/9mWYAGDT7bSud0
WLg+bG0MLQKLt7u/THYGeLtHNxR2ElAfetHXTSgHTd/6Pj75VAoDhZGIjyoE
jFUOnPC6XI4XLsei9j/JhbJrSf2GuhIEfS2TDZzIRf/s/tvnzxQjJssn34qP
ANdPf1WRWgiZwETGHNcypJvHIPlaCZ6cM7NZUirGXZWPg+FFFXASun/eRZ6A
+WWzKqGblci543Hs0aMiPFJfWJisrcS5bS7X3Ol4w3N/i2BTRiUKqN85//ZW
QPRyUKR6RCXU62Lkf7jm4e/uFT7O68VoEW0ZP2wWBXuJTMEbKQQoBKUOpM/6
IoX8+N+fuUKknVpy/94cBI/Sw5kSssUIkz979UeYJxSF7eRtGwngfZlD1NYJ
x8syqiBlOgu9x5wfsCqG4EX4lhsbiblofxD2RO9DOP6q7WTdezsTCxl3eI4U
pMCRj7hzzTAHcTxT/MtL8Rgbes3z9UgB/iaMq28/noTrilP/DqrnQTvRTWvt
VCrOb++u3b0uB+EKOax1PinYtEks8jh7NmyJ6jxsVjk4v8IcalScg08eTIuV
QZkw3ndl4pRTJk48KzBKC8mE+9in9qnZXPT0NWR20Oe1/xz4krsmCvInMjn8
8tPBMFdgxx6Xgxt1BwmM9gUg6alevjyfhBlH4wrXjHRcHyvTtQjKQfHuPN9b
VXk4Msa1uvdOGmjrB0qzRAmwoJxrEJ3Jw0WWSgZ1ZgIE7qZ+T9LPwrzczr+B
Owk4uOQjSHuTj78jsWOPpel5nP+p9lsuA23/biR+bCkGWZrzSrcWAf6/ws/o
TBWgQ+tpomhGIb6ZKztuiyyCslrwi33mWdiX9ubW9aRCHBV9ouseloNXjMKn
zS/Q6+SJRrTwXCqiSq0itaJywFRhr/qLqQgzsacjPPNzUfzQ/+/toCqs8C2E
5dQUovpkxzcfvXIoHavMFR2m1+XD3F+2reXQ2G5a+5mucwpHFcRprSXY99o+
bCi/DL057FVv3hehNjxZTImuCwh+ymYcDaVYDH3MFhVShSnuCpmeTcVg28T8
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
7I3KGppMg0gu0h2NGHfHT5Ed18zvDcCj8mhNut1NFP7zP6t0YAC5EDt/z8wF
f7TuKJfoDUDhysZnsn4BOMIo7VGRMAKhY9YEIcZOlH9zeWLpMYpkgQhii0cH
jOO5lWqPTELerEM/4GMLis7v1P6oM4HqB0I7FFLasflK+w9j1gn4Vu/dY0T3
N/1jrRoCz8cgpgQ+gQkKlj85lpkEjYGtLUztL13fBthslF+mjsJHKkXqZ1gH
FgnPCfzGI6hRUk3eYUDH96HrqqqFQ3h3zYWDV5GKJ5+TAtPsBhEu6FLZ/5aK
hHbnyN6h1/T+a7J9ta8Ldr7htGrr17iaIcz2+XoXfv1NmJz5/grS2jsJLnT+
HDdprmm2e4Xq98LN6VrdoJnOSNX4vMClPP12Ad4esD3N61vjm0Y4k52F8A4C
eke+2A9xzUDMOfz4nZMp+MoVvFmDZxbGg69i+yJvo3Rxl1mCwCzGiV5Paiav
YEn/Ucyq1CwYNI/8v99PZx1/+9VQZgZDipO3t8olgXgmfeeurzPQKLJ6drHM
HUMHuRznhmaQaLXze27RAxjuyyZw3p6BcH7dyPaBGOjxTYqQjWbgrNOnVVsf
h4NBM46e/2bg/3RPTdqyK1RM496ZxU5jt6O7ryS973isI396eE3jwcXF3Dxq
DgY81z3teDEN5u/+pv20DPjeM0zbKjuNqcq+z1uk8nGldCrjsuAMvCkSMl8C
EmEwy8q8lziDLP7Il2+KQhEttazV2D0Dce2wedpIIH7v30/dTZpGf+MJTZHc
LKQszwUtFE9Dn8q+8btTNgxnf4TIzExD6MNWNfl1j6BpfkR4XmMGpVkHDlaY
JGCh59E30qMZSM2d/LyFrkufRkrL9ATP4NKwC3s73ScmqlIeHVidBsO9DYYn
tqXhaUXfuuAL0+DYfdvBbyQPyXv2bz9+cxpNDJYybH9ywfBj9wCtawpX0smn
KEuFKC/8bbnoOYX5Rt11XbF03F5Yf8cyaQqnJJs/2ecXQ+rBmzyd4Sm8PmvB
lTlTAPsXwQ1s+6dwTWgh9aBcOWZuNLWIsExD7+PMm2mfAvCSv9cLzk+B4Yze
/B3bQtSF3nJjKJuCSJr3buLbIrxUT0xktJrCwWDLQdn5Ulz8IH5sSX0KReHb
dnoMleGd6JAiweMjAh4r2x9nqIanzYcu2puPeHrr6zBjzP9D2XvHc/298f9S
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
KOTyLxmkDWJNqcciO4tSiLZwSlufG8SnfA7jVp0ytKVH0uQte1C9yCg692Ql
sigXvUqqe9Bv3aEcJVaJPT0Ltpmz7QgTFL8fp1AD/4vcVX1DPeDKdzR5SvSk
PuehtVGTXaANlz7Yvb0Kax4fuyd5sQsJhiGzmv5VODJ8n9lPpQt2tu728pFV
CKYUtUc870Zng+4HkYlKFLgtPn3BrhtPIp18rHiqsHxGzX11XCdKN25+eGr8
f/9v3eOC1ec60XTL8p0hfzXqRW4f1SP9T6qLOuUgowo7fDbtfrGmE7+uyKuN
76pG1AarWZfFnRhRsLmgd6waq49wbH1x7yP6tc/f5LSrhlKZm+Eq0oPmiQ//
vhNbjf7FCrYypzpQyfSjVWdbDWRnqzZ4xreD5ibIxW1Ug/6nrh4H9rRDVnLt
syuRpL9RoAWdDWjHmkN2by2sSH0075rLMiU83G/L95i3FhOfMh4nJrYi5Uxw
4T6dWghz5LubnGiGQ6a2W4BeHSbkwgt9J5vBv+Ow5q9ddRDt7JI+p90G0Zzz
yqdZaxE829IUKNIKVXbqt0/htTBJcl8yHz0I7cvz53W+l/7THzcN/rDav5UC
HbuOO86mRbiUiDfeh4bAW3vvSh1bKdp61sU9+z0IxbNuxUxXS/Gi0ixE8G0f
eGboNnOCFaj02vxtT0gvOvcal59IqvjnfujkZOOve4d7UK91SXaLSyV6hPOm
qxzIefOHdl+xq0J8O5ussnIn+q7rH3shXA0xqc6OMxvasahWqakzsQaXf4/V
Wha240HC5T939WqwRrFxvL67FSW/S9IblGrRHXAo0fVoK94YOHAUeNSiPMbi
jqleMz7/imN0nK/75z5Gsvr5xoo5Gl4O1ooYyGX9c59YUd598dDuYYgtO9Wl
tej1P/fjAgMl2ke+juD57fCD3mz2/9zHOwTWTfasGsWdx9a2L3abwy3t2tom
+VHoPhJUHqKrI1ju8JN7piNo0c7vum/k9899vcJPic9hPkT/53sEi8VE/fP+
35IXjpqGjoDF/N4R51mvf+7D7zc/EzFiG4G9tH5oVHEIuu32n2MUjqC05GBa
orI7dL+t+s5aTHjN+OBpuy0ShWNrf8T1DkPv96p9MfqvYJjefXyj/Ag+Hcqx
Nvv5Eu7jIfYGOsNQ8D5aXjsZ88999z31M5/FXRlQoTWtHpxKQuJqk9T6twxs
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
0wKHJ4RPu5Q6HZ+T/tMmRDZmkvSfg7Zrj4QTPcJ6sexWJekH/+4vW+Qu1Gwn
+sIhjkvIivR3f/NKdP3d15cJj8wnVwo5/F94JMW1deIa0RfeHVlm6kRf/M2X
v3mRuHm2corwSzWHVxGEXywpbjZP+YbQ8YVp8PPDUiTKT7/ivzkAJnMtdmsy
/9nVBZdppD+JKqJPjJL+xD+9N0roRTdSJXS25fL9m89/9wt/5/Pf+fYjZbtn
B+HJWOKT746EJ2t7kjJdSH6ximh9WUfy64B37jNbkg/V1ZtCPkvV4kdIslYf
0bfz573XJRN9ez3Q5pUi0edbKnaHriP1W93v9zKQeso6O7z4f/XUVSPyw6wK
BU6mldy2pF/mOl4RPEj271HYsvES2X9D/KkpS7J/betPCYseleIuVXmGk9T3
tTWPXnwj9V3/tPhCKdEzm9WYRcpIP1UvoeHsQPhoP9K/4SrhY0SUi3UyWb8Z
36fUYLL+2YZVFtdIf7J4sx/7PtKfTAaxDq4i63mwxnizI1mPS1SM+c1uGnyr
Jqd2sWVjwJv7x9HeEbSZFMuOs7tA+8Nc8/P//fuoRKFjub0BONAkrc/6eBi2
62fWtW2JwUnpfoedJH/WmCyeeC3khzts2vOqJN5PWSU8rX4RjDfqHoekyHw2
xVOH2XldsOtg3vaxuWH06Z4fMNwfDn5BaoI5mT9wy+2auf4AyLs8rhp7NIyR
Oe47f7bGQJf9dkYByYc4rqK9dJIPE7kd1qqknk8wxwlx+yZg9H2h8lIS/6GD
X6tMSb0uPXQ5c+EsHR/Ps0aby2eif+nz64MkH9ay7xJgN0pH/3qRnTdIPljs
/53oYpMGIaEbfwpJ/TebcJc4L/IG4wm7nh8k32Pb8IGZfPI9JJKNNP0u0MDi
b7G2oi0H2x72hd0mdo3p45fH2nOQ9sNf9RzR26ufHj35gOjtZDvzs7zv+1Ea
W/hxJKIcyk8rJYyJ7W8Z+S6V2BRqgcgm7T4U5Nv5vrevQGj6dh9Noq8zFDct
eUn09TG2QL6VhymwTW8+upfEh372tfVupF6zfXSTciH1etdN49LthKcqYWm3
vxGeWkrFzhSRfNC1pVmuJ/18lOtT4Sukfm5I2zN4nNRPrjipwZeEnyf26Igc
J/wMyKmdFS7oxIcLNT+ESH0STORsSyP9XEv/OpurpJ/bs3g05RvJF1OHH25b
Sb6wXTy1Kono1/izVU4hRL/yVfCwHyX1SINRK8gg9UjN5Wc6B+FxsuKWGrbg
GtR/v1LqTfpf3+qxrVtJ/2u+ELPwnPA5YJR+Zy3h88VdWZQyUj8a7V/bSJP6
Ybv3wanVpN4cqLx+6QypN3/3mxs1V7E6knzu/ZZOP0byWaT4U9U5Uj/HlzZt
aSL1U/nE1oj2//Xj3qfkmMj7rn8bmmYTaYWw+7JWbjL/3/2l0u9MxXtEz+7K
LHFvzo/7p588h5qeJGI3LrUy2V5ni0sudoUHib4tLHxe7N5uiv/XfjIgtf1p
A/FnfROznn0SBaNtZb8MSfyOnQniWPBOQMN3/mcDJP6mbJhP8hP9+Xe/uHlr
x9EPRH9tU6YmTZ94+0+/mLjj/QZFwofwTa8MWggf6nd9T7Qkfr6laa/iCa//
7g81U9qWviP6TWHtN75+oi+NSr2/nyHx+CtdSzWHxONrj0ebhUn9TeNg7C8i
3//vfvCei2HQO6LnHu95vIJC9GTG2W9rzhO9yLma7VYW0Yt/93+VTt8qdIk9
Jc4nxUnsakvWkiQSz8zd73nlSTyL6WR2epF4HZyUcOIl8crToXMmn/DMcuOJ
azKEZ6X6LknBRM+NFX5oWUn0nPOR9uh0orcaMj3sN8r8v/dvmnbLdCMJ721b
2YSV3/zbr81q/VjnTeJ71tFQ4QOJ7y/81gcCCT9NIr7fWU/4uf278XZ9Eq+u
Wx6rypJ4DWg/GShP9E9ttuNlEP1z33H+TCzPR2wU2vbclf5/ft/49VY7Z37f
J/DefMLQQ6sLKl7PjYQ106BxqiVM41Argh/LxAl8jkCC5vJi5RddmFV6eMIr
JPu/5+vlFYqOdSaB+9HxVDe5DogO/6wXZc3/z3/t27Xr7Vy5/9n9jrnGo7bF
/9km08cEe43L8eGoZp5IUCs45CB7fj/pj/gPpexQbMEnWcNndZ1p/43PHItz
y/5QA5+6ybVsUR24RxPwvOVQjrUnA3T3uZRD6fNceJdMLZIHamOYz5dhu1d6
e8/+ctx8w1xQv5PEhUfMys6Yclgykt330JOxf+9U0bkllQjdxmXr8y2b1Ffj
wrmpKmgpzfDdcS/AytQv9grcBdC9nqfbW2KGyX6lw52K9oj8QvN/eSQCzgz3
WSUOEwhcMvR4NxkJkUc8jdHT8bCS4i2XWWaJ01MnXSrSahAt9Vi7pK8Hxud9
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
/B/eEkoI
     "], {{{
        RGBColor[0.1, 0.1, 0.1], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{5166, 3818, 6848}, {6815, 27, 5172}, {23, 3814, 
           3815}, {6845, 3814, 6847}, {6825, 27, 6815}, {6849, 3818, 5166}, {
           6834, 27, 6825}, {6824, 3782, 6835}, {1, 23, 3815}, {6838, 26, 
           6856}, {3814, 23, 3811}, {6844, 3811, 6843}, {6826, 3809, 6840}, {
           24, 25, 3809}, {6840, 3809, 6839}, {24, 3811, 23}, {6842, 3809, 
           6826}, {3815, 3817, 1}, {3815, 3818, 3817}, {5167, 3842, 6855}}], 
          
          PolygonBox[{{6855, 3842, 26, 6838}, {5147, 3817, 3818, 6849}, {6835,
            3782, 27, 6834}, {6843, 3811, 24, 6841}, {6856, 26, 3782, 6824}, {
           6848, 3818, 3815, 6846}, {6837, 25, 3842, 5167}, {6847, 3814, 3811,
            6844}, {6846, 3815, 3814, 6845}, {6841, 24, 3809, 6842}, {6839, 
           3809, 25, 6837}}]}]}, {
        RGBColor[
        0.16233343978375236`, 0.1730407530265452, 0.18390171693538657`], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwlk0tLlVEUhhch3dSt6fEczyqIRtEkLe1C0dXwB0QWRQ1qUEqQFEHQNNIy
ukAQZFlpWhbZnU5ZknbB7s3KUWVWBP2BJkHP4h088Hx77/Xttddee86O1vV7
JplZIxTBqJt9S2ZfoSZjdpvvAt4Ol/B/ebObZWblpWbO9xso43sGvMUH4F5S
zI1weIkXMd+PN0A7sYdgNX4fbiXFRGzBtfcXeIhfg+6kf9zFl8FOYrfCYvwc
dDC3Gc7j5TBaYjYOJXi9a+12WOraM/beB2vw167cHxF/Bz/F+dqKzVrhOF7J
2AT/+gUZfJErdhescuUYuf6A664aRa3OBFEbVy5jUIFfgG1JNYxa5l21jJwj
98pqs6apZhugAl/iyr0R6vAaOFysHE8SP8yaoWmKidhG5jtLVeN1UXvGBpnf
y/oX+Bhj89g7Bx/wla6zNMMK/GrObPcUsxbow98xNrdMMZ/wv1mzhfRJHWSY
n0+P/OE80UMjrpiIbYZevConj5gsnqnW2TZBFd6Tk8ee/Xhy1SpqPh3/6Mo1
euw9nnXdxU/4js9m/8mmHD+7xmKuie9x/Dl7tHD2AjUYwSdccxujBq6xmIsa
PqvWncfdH4B2vJM1W5LurAu/7Lrb09CHL3DdTQMMsL6b766knuzB00ytPQu9
fF+Eg0k9Hb19xTUXMRFbz3lmmdbE2uE4T1KNo9a1GfVqvJl4O7WuvaMnojde
ud5avOEH+FP4nfSPIfwEOe4vVk8cxY/k1RtRozZ8ras20UPRS8fyqkXEdOCP
o8ZJ/3wSubveXtQoarXc1UvxRuOtxpuItxExg/h/CoSj8Q==
           "]]}]}, {
        RGBColor[
        0.2527944579765259, 0.2775792280242203, 0.29986953818051504`], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
OQUZ
           "]], 
          PolygonBox[CompressedData["
1:eJwllltsVVUQhpel9HrO6YW2e+9VIRBfUJAgIJaIGlCiIBqpCibijaAmihrj
o4mamKBcwh0FChShtOXSVuViMSqGogkKKnfRBzGaqA8aTRCQq9+f/+HP+des
mdmzZq2ZOUNmvdT8YlEIYRUoBleyEFpzIawB/8ErkhDO9A9hVmkIFxtC+Dvz
3iJwDl5oDKGnCvtCCJtjCOOQHc+HcAI8zvoS6w3otoOr8KPIBqE/BByHn0E2
Gdvd7BdF+5TvXlDM+os0hL7yEF6tDGEhe2XI+tjbCErh14AtOX/jH/ZXsL4P
f1NBCXwBaIZvZX8evA2d9ypCOIm/6+HzkQViuYrOl/AazltdEkIK6uDbkNWz
Xwu+hreAmeg+CjbCR4IJnHUSGAVfi80McvUwaIEvQbYj5zMuheeQXSafR0Al
fCAYpW+BWvhMxYyvDtDC2bcS40Fi/RBsga9m/0f8zcDfu/C50bHrjDrrkejc
DgTH4Gfx2YSv8aCv3jaynQ5WwWu5vz3o7gI1jb4j3ZXewAX43ei0YnuI729n
nbH+gb1ToBLekTm2naATPhVZF/o94F54FT534HsnqIY/hWwhtn+x/xi8AE6w
Pgzy8ANgd8E5V+6vJf5icnMdaITfhGwytneB0fDPyVFzGb+8kQu8z0nyn3cM
U6JjVuzK4Tb4EvB6pe9sMbwDn89wV3NAO3wjeA4+HZ/1qXOm3E3gmYzA3/ug
l/h2gZ5oiB8A25Ur7B/BfjL26+C3IpuO/Qu6A3g3+LjgM34Az6Mzu9RvQG/h
ILKhnB1ROAm/PzqXuoNm+PrEb2saWA3fQ4ytnL0bZKzPcqY/0D0NZqO/DEwp
+A3qLVahP4XYOqupHXh35lrYTE18mrrmVHuyWQ5vz3y3qhnVzpA6ekLwmxnQ
6Jwpd8pZJ3xknXOhM+qsi5ENZ28E6CaXdyJ7mdjeACn8ezCgymc+EV3jqvU3
wTz4fmQXC67RPvgV/N1I/MPAJfgnxLy+3DnoTX0mna2J/VLtYXOU8xwDNfC9
yHrKbTM885vR2/kM7GNvQ+Jepzu5xF5Jal9jQX/4QmRDyxzD1cQ5V+71RvVW
c6nvRm8gDx+EbDR7Y8Bg+ApwC3vjwEp4Xeq39iCogXcQ45qCe2pbtI1sx6B/
jm/fkPmuuvjmsMw2slUN1MKXJfatnC+Ct0f3KvmU7wd0p3nXiGrlbXzsLXeP
3Y/98sTfUoyKNUT3WvXYf9E9HN1bdCf74Juie79q4p3onqLeoh65Fp4mrt0S
kCSucdX6aVCr9xjN1VNy8HJ0Bpe4B6sXq8eo1+gOI/yr6F6cgkPwssS9VDNK
s2oAaFCvAA1ao/NRzj2mQr0c/JazrA4+LLq2J4Kh8Gmq57xzNE76iX1lYFPi
maLZohlUrvxFzxbNnJXwX+SD2JrBz9FvTm9PPXsd/HyDZ4tiVKxViXOjmaDZ
oBmiWaIe16XZGD0LFNM98PHU15jgHClX30bnQjX0DfxX8FCVY0jgSxLXnmbS
UuUmOjblQLm4GczJuyYnwG8Hz+ctuyO6Z6l3SXZb9IzQrFBP/y56Zml26Y0P
JLZFmWv3FTBf/w9S90L1nFXo/hQ9C/Qf4FR0TpXbZ4mvWrUR3dufBE3RPUK9
4jX1/Ggd6apnt8H7Uteu3vBcvvdE9H8PzVDNUs0YzRr9J5kFv5y4d2gmnocv
yByrZsJb8D8z907NKM2qftH/TX5H9jR8YnQsyrFyXZy6N4wGRalrUrWpHqNe
IxvZqierN/dLraseclG1Fn1WzYix8P8BHXFEeA==
           "]]}]}, {
        RGBColor[0.3353680134705382, 0.36963594293421775`, 0.393078558742864], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
fLs/FzjH5IJX5cxrx74dwduR8+9Hf6xH3ZjfEX76blvfV6TjLth2dMJeOifv
WiVqvHuozfh7YwfPle7uyETNbhf22TnTenR7O3fQ39rsf9ok8c3F35o2Z2Ke
cbgO5XrUVWprCm/tdMQcl+XCT9dIYt9m1Ema8Gyb8iI2z3bB8dhW4rkaGuuT
itjD+2zGJryETfC8muAyno/JOZyjOKZ3bGBau2FbL8rF+rWZY/mL5zq228Q9
9j7Dyf2vJN9djf/egy9fih35nDV+30xseBA7IhX4L1iPnP/5HOa3v8ueTn3A
tZuz6c/7bbeWzdPEbI7dzKdy+NaeszZHfsbrZ8fDjnUc/3wIfd+T2ywnzncN
ybGm47+h7GOc3cvCN7cuCzz5eKo0iXWDxYfGfBfz97H27Gv5HNK6wwJNSzWs
FW15WfDgEHxozj7e7wA67PvzMbKw3PfBN+tfe87nPV7CRyxmrmss1rND7Gn8
rnO53lWjLHIqy8X2vhwds37MKQmdfBz7WhtfulHvdXU37s9G67pBffxYM/J0
99sX2qfn503Mhv+7kLjlPPyhn1tQX7UvrQ/OelUiRqmgRjaWfdzflPqPfbFt
VBPusn1Zc2jIx0kN8N/2a55j39eD2MLQnhhjEL6+nNjDfY5HjGMYeN5Ab33X
MvjxUuL9muhZZ+yG7cf/0dqGTCf2mJYNedVg3QPZ2OfBbNDdCDpqitac4OSC
OHMzeDoYXzCbPasjl8XYHd/xZdRjbJeaMM93Yw2yXgdY5quxZRuxS7WZX4pP
teyfKAk78xL4S9nXPLAtdM3pPdZvxO6cwhzj8n0+iG6vwWbYDlgec/BBLxLX
WHctT/f5nHWIUcvgQ6Mqx2pC9ZDrJvR8LfbXe/jb9snS7/O0b7HajbqT5+p5
Uy74sp/7cxr1S/uwmmXhzxrUCrk3RpdqaO9ayON0fJR9VRFntL09UfLbrOcj
tkNa/5aeD5bEnX0FOzuVuHOK2gX432fS8S3T7/62+Y5gtWCV4CdqaK6lOVZb
k47Y1HiN/4DrdWrfToeuuXX/ynTU3bz2O9d/0lEfcFw3h3ZaOr7VWze3H6ev
nWjdv5s5u3n395cL+AZzIc/m7xjOMY0zzUame+n3uHViA/5oGv2mZWlJ7L+l
JHxxfv8fcvGd6cdc0D4NuvtTx3Y9e1I2an7+D1H+bNapg8h6Xy7oWQCP/d+D
j47zY/Zpls+hbNy3fdnglXHNBKxjs+Cpefsy97YGcv83fZb9U+ig7W0H8hHH
FuXoq2mbwVlGwdNv4H+34sj57hScLahwHujYJRf9G9QeyMX4fs7Xm3nbqaEs
wY/lfbVj+mHYROcrdbCbsziX7ezXJSGfdSVhX21jbK83IS/fK9d3X6XG7e/8
nws+SIdOv4JdsG+1v7I/tp70EfQtjlr4LmKkvsSALaC9D2ftxjmcT7ckns0/
e47zg3NZ25v1O8HbjblnMs/zu4L3LPD2ILdwDv4O/DGf7mS8Gzm3cTimdc3G
tZuDgOvc76WjFpL/tv8t/YeAw/Sdxd6m/SDr/N8G101cPynIho20vXT+775P
WOuc0/f7d9RV/D+RZvxnoBX/G+gDD/pyzr7cw56csT5yuqD42LcIt37fiX5+
jJ18F1tsW+n6qmuaT2GvPGc/PN4JvoHc9wG8Ow88tSzimVploX+voQ9tyyJ2
aVMW8jo/TzP/efBZbH/3EQ91pc//c+jH3N7Ya8v+IN91e3Du1pzZ+Ugf+G2+
98Cn27c7B3Xe6PzVfsp15Xx9eQc82M7zu/ixHczx9/kK5vrZPLqcc/flPAeR
rfWlPz7E96SYWohrIrbb72LPt8Nr47Pv/RD/+wv5Sr5W1JKz9eTZZ/4nOus1
DbjL9kfm3SF8mWs4HnNd53xkZ1l5738J1qbDXn2Oj7mdmo+/oazCv3zI+AbO
VrdW1Ppc87MNqcHe69AZn+eRbPjqx7KxxxrOa59/Bv61IXWT2gVBy3vcn73Z
4NePatvk4tus/wNlf1tM/ONz1iQOsC44n+zHvT0Tu9mbfNQ5aG9a55H2t46Z
nP/6vyf+PuRv8H72/y793Wwq3+X9ff7EXPTv9/db/vfr//82pEZiW7qYWMU1
llrIupj4Ncs5i5G/v8HXoy7m8f3ZONMP2fj/gXPf6dbxJHTB9a0B1Oscc44n
53XuW+s4fuzDZ/2UjW/AluER+P8RMqgBv2vB89XwvRMxrn1+EeOedxS/aLvu
b2b+zuhv2XvxofbZtk89qLFtw+e6fxF+333pbPg0+3b7iY3oUwPkeCo8yrJv
CTVEv3+LPfyMe5X/X9hq9PI9xj9ljutmjkOL0PHP0PMN7Lse3/wBuv8BePzs
eCMfNzlmd+3RcUIWmZq2X/kfoP8PWAf9N/9fBsdq8LzDPX+X51XEBX527FCX
mnmG2G8vvv9lcHjeZuJn+13HXEug7W1wrABWMv97+JG/z/9i37Xwx/vVhmbf
v63IaRvja+FXGXUPxwaOX82vk0Tn/wN5ZmdT
           "]], 
          PolygonBox[CompressedData["
1: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
i5qW6JuvRW2P9kpjk1n/P4TIw40=
           "]]}]}, {
        RGBColor[
        0.47329389930946386`, 0.5007481621950014, 0.5113863185555463], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
+tWEymUytqIcKafJOdIHxjlLfSautI6wrYtlS/0YCujpvXnE92nyPaFA8ohC
tV/tPqk8xR6MQbrm6ezj+k5YL453kP+iH1sS6Yzl3tB/N3m/LsopkC4dTaqu
t+v5HrXdcflx/yZt2leZ72knPQ/70fd08d2NuLPLV3iNXSw33iW43q3O2zN/
T55Oee561NXYlnpF0uMW8FaT1LcDOSnlU3h3rUT7m875M/fP+Ip7zr3/70D3
2W2I6z5izgv1HweSGWXH+Gx1Um8Ka4HHguZZ+kvgg4Fy1vuZq8Hvb3nGhtK5
V30uft96TZtjHMOYhPFDo+3gWAf5gG7es17GPb1H7zinVWidHNoa3ziOYb+u
HnfS/TmONArtX45Z/txv2jPfN5hT3+49Ix+Fbeanvj5snxRYBpRFfaT56oC3
QI4rIM9TScmVuXp+Z/BBqL2cHynXvsE+N9NxXXvgyxxPMq7c5/wb93Ud5vwJ
4Clj8sT19vZarrVfGmF/283+ijZx3LLkWrKSykG1B+7rt2m+UdMPcI/aA38n
ofOzMCHbYGz+FeBO17P9HH6fBuyP67uUPH+b0smYv+mD29k3vu/81Uu+K/Ac
5rl9irEQ4CTgd847Mf/UZNqc45zL5I28NLep/8pl+mn6ePrqdva9nJe0m9xn
t89B+srSSP6I5xjffMlvjvNG7T32K6+dY5mHYR7kT52Ul1vnd5pz5uus+Wpx
/1ZZ0A4rkpqjKinaPJ/II9f+uflb4ZifufIc+Pdqxv7AKyLpcC3wnlBv6ntp
Z5Hi809D3V1acnR/mRIohzwkEC8fmuc3Q833FvATkfSiBni035H5nkwa5Iff
HvHs59hmxy4HHDc0ex725dzk4YtIvpjvavTNK5KS5ZqEzmfGFnzfOuv9osw6
WUd4L62OpKtrI8mCfJPXRsfDLcDjA+XhRwB/kVK+pCWluGiy87HbQ/FfBPxG
qBhyVKgzj3e8jx1v7bMOsEz9551xm7+5WpfS3bPZe0/ZnTRPo5xr5L43W7as
f8D6TL3ekVDu7pcJnbmc+6wx52eZ+kJ9bgD0Tihe7ZJQ28eWMWMZxqDVBp7X
rDvl9wW+J0yPxFtJJPslPZ7ljNfKvLYxCcWIRQn1uWA7753WG8UNaX17w+9u
+E0A3/WW+W2oR4G+I+L3RO1NnzRuTOsOeH1asqRsub77Ar1HzQiU46A/Z27o
5/4+6tfAUyOtZUqkOHyCY/mLtpqpeIpxSqPtlXbCvPBg35FoO/zN+9Bi30ky
7Gd4jzpuX9HkfS2zTA6Y3i7/5lqOua71nlEeyT/TT5OHbdaVH9sGaYv0MXc6
x009oY7wPPzUdFttkZi83JVQfP5fCe3jK95Lnpnllnc/56O4ntY8L/WOdI57
LZ+bbpN532/6xz1ng/dhb/xSPMe95n7xTYJvExlJxRRdHC8xLmOMsMrv+Hy/
Z758rd8H650755tzhdupG0vdxj58o+bdkGup8tsdY4ZF7rvYfT5x/PCRvztY
7LkWOa5jfLfIbwEX3wBdx3hvgd8HSJdnM/tz3O5A30A0An9g+pynyu+JpFNq
vvntB8fWe75n/H0F46cGfxPyd39fsdbfJDzqeTk/v/3jd3/VXmN/vyMsNW3O
cSYS318C1+XLh9f4be+0bbbOdeSDb5cVzrGwb63b4mmVc4FHhPIL7wD/2Tk3
5t72RroLMK+w13tPXW30uxXvcZ8lFdccAt4VKvb+K/BoxyHU93NJ2dzZpOTx
jOOVavtw+nK+CY3wtw3kucF8r3KcuTpb/ny1fz9nGjwLXvSZVuW11zu+etyY
8daLbq8xVHmPOO6A5bPUY9neOt/z3t8yy7/Ousz2xR633Dq03HnSKtez7ohz
+EcZ/0SKrdqllc/id3CMr76NFHudjzRfJ59Z3P+FzstMto0sti5QX0q9D0f9
9seYnLE34wLGaqS5Ol+2we+EeA9fmy+5lHvu9Y73+M3rxW9PQ9W3xoAv+22R
7wHPW2+poy97zmd9l5/r+/yz3hvGop/ZDvkd0NFA78iHAt1JeDdhbLvGsiTt
Q+5zLJC90e72BJqrzvPRhl42P3N9/5rv+XmPoe8h/QLfa9Z6rZQD7Z4+kbZb
ZzmsMa6zrlRaV2gbFyLJZ0Yov3lbxqWzoJ99aYe0aHwTyc8xz899yEgrjmI8
le8Yrd66Qx3iXZSxO2P4zSnVrbZsz0Xi+2ve8UFnFcqxtL5vqDRvHf07Oy1+
a1xf5zXR1qkDF/c/X/fcYt+Tf+I2xvQ15qn1W6vHbVPlHrfafTmG+rQn0rcI
/F6G/o+yXGFYYp840vELbTlm/v/XayI9/m4M9a7SECpPzjwyc11r7f8ohyd8
7+P97/VQZ+itwJWh7m+H+c7ub7h/FuhuT7nWA68IFS9WAz+U1F3oGHCvQN9W
/jTwmZyjc3mQv5nhtzO7XM+81v2O/Zj74jsW796ce7O/Id/kbyPHOWcWSynG
+Jp+Mak70afA/xro25lfBXpn6e13MeaSGHN1Ye49pe/d+X39R0m1V6H+/wEu
ZzeA
           "]], 
          PolygonBox[CompressedData["
1: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
ScXm8bzvon8e/fuoZ1fvrhzLMPd//BIUAQ==
           "]]}]}, {
        RGBColor[0.6401408737244774, 0.6544124453222315, 0.6472429909019313], 
        
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
wWeaA3KRZ2ou8n/uff0ifb+tMi7ORd09TKdPPB6MxQzbLLHVca57SRL2ul6Z
OMsZmwl9Hr0eO0k72+ewy2HTWVoSZ1QzrOOQZ69i2FlvKYRdlPI5E+raJHwr
v7XdBrscNiTiO1vWneEyrra9/knbZonnLJBzwE5Ojy55SSbsC6Mz4Sv6YxI6
yPBM1DkyE2PT3fTvmYlzhbMzYV+/17oqPgzcncDnAX8KfKcPMY2qPPZpz8FN
nttpx//otORh7671eeqUbNB5cjbqGGtdBr6V8rns/uY58KZTimFnOrUY7ab9
IzJhx0MvwJbXUB/2/d5Ks01t2PJ2rQ1bz7m236Fz/OJzqz30ryjoXhvjX+U5
0MVzdjfBU9n4/k825JxGuWlFLtbD07mQqUZZZrrOsiFyFXLUHMfDx/CjOD4V
3xMsi/3gc2HOh2dlI+7DXJQ3xXmXeu3sWxH5bnS5c1wH+fGr/9n+/40+hfgY
Ui7loGcckQ059Nxs+P3hc4fv32WW/S5ClsyFr//XuZCX19vfAv6LHy52MnyA
uAfJfUjsZVtb1uXfo5Z3SXNoRaQ7Lxd3Yc7PxZ27SfabIe8Sl/mIbW/kPTIb
5ZyTDZ9xfC/xwcS3Ez8k7JHMs088z2gHPJw68Z/EZ5B7fbvlg9d0M48nHXdp
N5kHkH+Q20hbCe/putZaBv/YvGedeccX/maOP54NPrskG33YfNenPOYKc+bR
bMyh3c0rH8kG/3wsG2tuL6+R7TSPWwkvzob/H36plEVcS0G7sojDP5R50LMs
+P+unqOUvXNZ0Jf6/5WLOqjrIdeVMY/r6Xwd3W7acEs29kPoB51I09Z193Ke
lq6jjf+9bV6++S6A94T2jn/d//ju4Hztjck7wjpPYzvaO76nvwmPtOyP3tHo
44vP7/UeQ8bybdff2PY1/l7pNkDDtW4LawfbJv6q2Pvzpmsb962tv/OOK3e4
1Z/StWtsZxI+qfijcoZzqfeFrH1s8WNt8PkdtknO4q5J4pyQ8751Po/jvPGq
JM4/sc195TNQzu0a05Lv5yTywLs/tj0JfwF89bErbZsuKXknHf5NlPuDz4t2
VtwH6fA5Ks2FzFkh/Kp9BfEZfCkb8vzOrLlc6NEzFX7Qc3cb5mYu5N52yFe5
4Mv75OIuK/dDf8YGkwvZtSoXsjvy3k254M+ceXDmsz4bPjh12TjzLPoMlH3p
pyT6VpLEGxu/JuFPtt5nc9j4J9o2/r+6sENz7oRv1Mxky9sNvNkxwWeDh/jc
inMP0v1qG3CDbcWchfzqdJxrclbLOSt+RtxZ5b7q5CT8cWkH55/42ZLuvx6H
xv2ZcimT8eQexKcuj/5RJvm4i/G5+3OfbYDfuqyuni+kZc7Q/6NSQY81vqe5
Tvhb35HkruSH2fBz/DgbPtTYy/Ct7pYJuf440X+HbPj9taCMbMhI04SvzAZ/
uzgbNh3k+z1zcT56maq9NBNnHpw3PC98USbsEpcq/R6ZKJOyD/UZAWcFfbNx
t3J/4d8y4Ze1bTZkHWSefYtxJsTZ0G2K64z9UOFOwsfXxx5+WjHO6TmvH6zw
57nw7fsiF/ey8OVqn41yKb9VNnzL8DHrJPymzwE5Dxzmtv2N8wvLNsg4Y3wu
fJTwGu/f7L1TrG/fLDw9G3LlRIXf8p7I3viybSDYQqZZR0BXWJ4N/6leCj+b
C/71PPG5sO28JnxaLvSuQfic5kKHw5/6gnzYSvB/nJGJ84CZmdj/2AfPxrbp
893Bwjvngwe2wXeyQfRtrnXZEOfw3KnhbP7pTLzhsVp4XiZ8BxYJX+hzOs7r
9s/EOfbFwvfbp4E3ae7OhI/CfZnwp+jrM2f867nDQxx3HYal4ixwbhI+h1UG
bDDYZfCLB6O/YsND92znNNyZnuvzS+6a41/PHdo21pE528THkfs1Gf9D59/Z
34QpC90Wm2CrJGwE2AawS6Lr8o/yOEelTHw/8fnE9/OGJN7Vwa+Q9na0zbhG
cU8kYU8iDzo7+njKevPvSfj8o4u/n8Q5Lbp5o35PX0m/i/tK2x5N4r4Vdlju
WHDnYW/bq7DjUi+20fb+Zt/q4r2etjzutHwjA7CXdXIbaTu+yvhF4gdMf7jX
Tv/wSz3Vvqm7ui3YX6mDb8LYZR913U9ZbqTuxrs0a11nd9eLvIjcCJ9hH2U/
5eyc+luYZyJHIYMh53Gnirt/yFUnuQ5kHHxtufvNPXTkO+57ILtxRy3lc8gP
tf4Pk2y+rBi+chPta8RdqC+T8OPAF4N/U+w/8Yb9KfABOTcJv4xJ9ttgrn+l
uF4q/8W62Ltn+xwUvwl8NvCdOCMJf4lGP44XHP+d4i5P4pwKP7v/JuF/x9kV
vnObfWXqwneF9I333Fg/7EvsV+xNP/n8nHj8i/E5Zr9iX8OH4hfvZ6Rlzzs7
iXsrlE39+B9TH3smPsbsPbSlTyr6/1RdtP14+4/Qf84Jue/C/RPi3veeg16J
7jjDei4+Afj8PVcSfieN9IOW3B1tpOPjpjk+htwNfMt0x6+GutCV8VugbPyz
PjSdoBG+VOivnyRx3oePA3EfOR7fFOjKeDLO+6WiXO7xIGsxbvg34Gc5QWm+
TeJOIn3Cd2ep5wrf+Jrxn/594DYgq6302NNXaEB/8cXALwKfPO6QcZ8HfWN6
IXTUXpqHPxTCT+7HQuiNNYIutXH+yZkzflNZn9VyZpvYJws5CF20k98cA7ax
foqev4t9A7ZzmtaOxw7AP8ob7rO0Guut+E+xT/5mn9R90GNrQ699xnfYF/kO
APfnuRNA2gfdTnw8EstnbTPhh/VcMfxy0v73VHGLv8aY+vDbeq1oe4fLwJ9r
pPag4YIW1qehyQh9b18b/xvc5qb2e6Bf+Gc8U4y0K7zWN7o87mrzRg1vONHm
363jfyl59uF03KFZJ7w4Hb7bXwg/lA6/5q+EH0nHvWja09lt6i3Yuzba1N3t
gZb7mGad7buQN213dVsZj1XFoO1bxcjb2Xk4/xzoNwLwPTjD5/1VW0c9ne33
0c6+NDUuu9b5m7od+7htPUw3aAA99/a/7Y07126hKXVAs/k+G+eMvK3nUrva
GO+lvgfydDHqZJw5951XE2ewlAGNDrNfDn3fzv1a6HJn+17ILfZb6WS63OVz
ZOrv4PlL3W8Ug9bvC68sRh/eLYbtlXTn1IevCHOi2daBc6ZDJ9fP+hjgM+P5
Pv9fYF+ERQ7TvvU+9+a8m7N02sW82s7jSD3/VH1Z1XN2fcy7dqbRJn1fJxqf
Vx/rZZHLLLo9jNOzXivPe21S3rYeux4ev+dM22eLUX+72i32O2jS2nUynxif
mcWg/y3FsEcxDnNsl+KbcCu3AdrMcxzpPta8vjcddpFdXRd1HlAMWp5eH3S7
w+nv8Dk/YWhHmDF7x/OZef21yvtPOt4X+EZ4STreBVgrfE86zm/7+J1D3jtc
a1/6rwrRB9r3Br4wfpOQ9xFnFMJHdZ9ivImADf0hxX1TCL+FL3kv0T42+Nrc
7zsU+JiMVfg88eATuHeZ97sh+XiLgTcZvs7HG1u8SXWQ8Gtq46x0+KguF56R
Dj/iFcIz0+HD+6rw9HTYcV8Wvjkd/vLLhKemw/ezYyHeuNpTuK3iPkzHHZpX
hKelw7f0eL+zx3t7Q/JxdjlU+E7feeTu4xH5sKsfLXyk5PJB2lOGCbcV/KH5
1qUhgHBX4X7F4LfYL3fQ90rFtxT+oj7CxP3ofedD/NYL4dvxs3B1MdZIU+E9
la5Wde0hXCOYq7y1whtUzpUK/yL8h+BahX+rjzt+3PUbJ5rvkY97P0fxXorf
teN9u0G+BzSCN05Eg5vScbegl++79ePNk3y8jbJK+NNC+Ix/L/wv34XhntZ7
+Xj3Y7Vwi3y843VAPvpAXzYIP80cTId/2RPC16bD57Gl8FaZuJ+4o8IVmbCj
dlc4k4n3xGoU/j4dPmxbC/+YDp/JRPjndPi+7i78WTret6gW/i4dvnBNhden
w5+wq3BdJu6O76bwp+l4r6KHcC4Td1cfZZ9Jh49PK+GqTLx51U7hmky8ZdRe
4dpMnFe2Vrg6E+9cdVK4WSbe++qs8NaZsGvtq3BR4YkK76NwIRPvEO6lcD4T
d127KNw8E3bdbgp/ko73OfYU/jwd721UCX+bDv+9j4QXpuPO2LvCd6Tj/t5b
wrel497JauFF6Tg/XCN8dzp8Lt4XvisdvgzPwA/S4W/4rPDEdPhpvi48Ox3+
5m8I35IOP/o3hW9Nx5nDSuE56fATf1t4bjp8UXcQLs/E/cq/KFyaiXdWt1O4
SSbePk0pvCEd/sZPCV+XjvvV2wj/kY43UQvCv6XDZ+xx4WvS4T/7GDJCOvxk
i8K/p+MOS054Uzru5mAz5E4rtl/KRVfhG98NbPXcfcT+gh0GexN2pt9sZ0LP
Qn9sYT0SexFh2vRgEt/I/+jkyPvYj7AjYfdBZ0Z3xjZF2eijlI/s/z/rCdiF
sPFhG9rsz5TEPUv8rCdbn4BeG9ymY2wrohz8VtN14ZPZoyF8WXsLlzs+Z1zn
MPyJ7EPpk/+RtoXo9F467nRyv5M+YJP7xfXQVsZpsv+hKyIvQ1dot8Q2/Vq3
BT9RbG7Y47C7oVMfmwpdnTuK3KvHX445wftsjXdwwdxF5Y4yZw34z3GeckcS
Z8PUucZjB19YncR/bKjYT7GdwjvmOz+2Vmyv2Fs5t7jTY82Y4WPMGx2MDzoZ
Y7TA5XEHFhss9kpslbypdkIq3jbinvUfSdwlpU/cyaRfEBabBG/j8fYZdgq+
N+u+SdwfpQzuglIOPKIsFeXxLklpKurhnTzieIuEO6OUx71R+A51FK0nPW/9
q7lpXmuA9jXWO793v7hrji819wPx5eUuIn44vLGBTzDvbGCjhN6cz+CTzfsd
vN0BjfDJ5p28gYrvLri1efgi8y4G99wHOu6O5uG3zvjh//hi80jP/7ebR9tm
NY++4d9NX5fWbbljxFsU+C5znxxfQGwD2B4Yb+wKrN+nrL/db9929DnC3CXi
/hpx2NF5j+MH647o/dSBzQx7Fr7tnKE+Zn2Yez+8p4Beyr2Q892ufRpi7RzU
EOsnIxjMOkWvbh59qXKf6Nt2DXF3pYX3/N8FJYqf3zzGhHsWffSvs8K7C/cS
zIYewj0bovz9GiI9dCPdbvouFe7UEHGkJ76/y6G8vi6H8obURZ3UTb4Kh3dq
iHbv2BBxW3ntl7o/jXFl7g+8ocpzq7GfW3luzXcbBjsf5eB/jgxD/9+rD/q0
aog+V3v8t3L6xjpIQzw2Gmw1jBP4JY8ZNolzbYvgDRneauGdFt6s4e0a3ovh
LRreyjnSwDsazF/eDONtEN4I4W0c3rshH3st/4jn3Rzel+AND2QL3kw5yHXg
J3+E6+DtnaONj3GYMyHOgTgDyop3vpSO93vSwi+k490R9nLen+IdC9484t0f
3vxBtuDdqIGun/+0gTd46A/tbqYynkvHeyeVwk+m4+2QjPCL6XjvpEF4VTru
r9cJP5+ON3WwV2KTxX6JnMHblXxTN+8O8W4V779go8Q+iX0R+yO2R9I22nSx
12K3xSaLHRd7Lv+w1WKzxebK+478z3j9sI5Yn8g92FgpG9shb8hgP0ROapIK
Gy5xnLERjy0SmyQ2SOyOnHNcY/si78Nsfmcm5bcpy+IeP7wV+yI2Wvra6D8F
buv24SuFXRi7Lf+I32iejf0YW2/K39hGsZFiM93ZfaNfyHmVqaivym2Hv2P7
xd6N/Re7LjbW9qYx7zlBZ96FanynBx7M+zC8B4LtC9si9i8Aux42Pex52CSx
RyK7cMcEHoZMw51K7FjYBLENYkvDrobNDZsXexW2QuyEyMHYE7ElcubFmRbn
VMhP3znPlS4PWyBnkZxfspdyT3ivVNg3qZ+1SBvIg12S+rHTsQ9dblssNkns
gmDstYS5Q0Z/sFMi252RbOkf7aKP2BexLb7lOrmzRr3I9NgN4dHcsXnRPOFr
x8G/15nXw+fZ4zmT42wNuqz3fOT9Ad7fadz3eF+Ou/AA9+K5T8948E4L/IC7
9dw5Gux1y5tB7HW8Y8ObNrxl0/gGE28UcXef9wSohzNh7t3s77SNb8LxbhNp
mQfUt9D18P9Vl7GD5zdz+3yP+XLvUYwx4/ua9yf2JtYYex77HfwRmy20hP8j
3x1WF3Zd7OPwUcYEGyvjhsyFHR95CxspNlzspJwnIO/yj7mGvZT5gW0VGyvf
7FGDXAf+E9jyOQfAtviz79kN9p7AnjnZ9zgvF7wueMnh/2mPuJE9ynsW7VVR
m/+Tbqnzve70Sx1eIdjULO453dQ89hf2kLts38HO87vwXpaHe3jfZM9a4HLm
uR2ElzUPOYX8810e38ubx566fUOE22Ui/QrnKTGtaTPt4b7rDO+B7IWE8fPk
jAh+VNkQ8lEz4TPrwyb8D+FJ7t9LrhdZiXomNg/aXe5232qZgDte03zPa7rr
WWWazHBck4Yo99f6oM0t7t8K05C7tXMcx78bbdOd6rr4h03hWtd1nWlzl/+P
tN2y8Y7v9rZRTnK7afNJ9fH/hPoYx1dd9zLTlr428uXN52+1YbvjTiZnUGvt
y0FdlEP/0KmQK5FVO9i2R3rybuP8Y227xob99/qw271ZjLGEftSL/Wxb2/jY
59gv2ScbGoJG9Q3RJ+yz2DdbuH/YZFdZxqFPNxhP9lyc6nHY23d7H89Emsmm
IzoPsj7vB1/pecicKG+IsTuxPmw3/NtYH3vvTt5fmWvIcaytf3j+nFYf84Zy
yPOMz005M53qMR3puq91Gxnrm/0PvQJ9Ap9t3vLhbRn0GXQbzut4Y3rVn/rK
2RQ8mv0B3QU9aDvn4x0b7uTc5Lqoh/+LXR5v4aDPoP9wdohegU5BnyosS6Ij
wf942wndutz69rauBz2E80rup+InxFqZ53VM3dwL4s4u/RvhPnKOe6z3ePRC
3t9BN7zO48J8Rd9D71tiH7fF9lNDZ6xNtvivoYNyZoveeYfzoK/CRzmTHep+
wCM5f0anrXS7oQH0RMcvdVvRt6iPuipdBvcvsQH85nQAfiSkx37Af3RydErO
ffOmKWOIXkm7eEuTtjInJpm3zPFav11Q1hA0OlrromlDxFU3xNyd6jmDjMY7
RI2yDjotss8clzHXvGCuedNcz+Vb/zTPpjo83XNwnvkb6Yaaf0KvOS4L/tLa
fg4VDbEnkA7V90XLAZzropugS6CTIC9wfojMgA59gvVo3pXkLSf+s96Igz7T
PO6MP3Ptbv/n/STsEsiXrAHmETIh6wAaMyfP9vnCWfWhjw6yPyGyIeOBfMhd
QNqR9dpiTTI2/w+2n7f6
           "]], 
          PolygonBox[CompressedData["
1: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
yF+dtazJR/4jfHjGd1vdge+F/x88sSKt
           "]]}]}, {
        RGBColor[0.7994155989502804, 0.8032928933531229, 0.7781127696379836], 
        
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
WYD0HwAXovxC4KYZ6X/St597E5SP3fYlGa3zlwE3z4qWi41Pdz7SRFrrAwZi
LPLAmwFpAZ/fB64bSyfXjkVjF0AFwGrU/W2h6Fhq+aCc8NsZrpt9r2pesY2K
Tif/agNOcVrW6VMhBxXR7uuhypxqnixGG9+772xjpWWeOo7jss/rymGvg7Vg
n9yNcj3R3/N8rsfzvSblVMcGQArjkAeojbRB9EXTzsvo3G+U15Ul1kOlvl+e
b9H/+6L3oO2c92Hnb4I2Hge+APiUcqq7cTmtZ2O8RpGGs0wHn1cW6p1+P5Z9
ynlL999NvfYVef3jM9Oe8t6c5c5GX5/3XuOp0nW8rPBTXhevyer7dVnVlY++
F5QXbU+7TfpzeF7Cs42nTcMYrytc317xWnuv3xvF6nuDWO087rbOtYxwTMdW
kr3GOnd57d+Ur/OdrV6v7jUPX3E6z3zW56tv5POLhsedttllmWeD5yXXvGvK
yW7gus6xDT2+r5pe9uNVr5UPeVy5FnCcz/fYcQzJu45uqz3eL0Udd2fU5g9u
ty3Si4GrAU9znaXrMN8XAzaaVuYfkRF9vVm/n0fYpqatRZuLbbCtocDPAZ6m
3ymj78zHvciZsWyci2K19ar7Rb4uMm/pN2Xe0jJ8p01Empa67/emtX7ck5Yu
pN6kLqseaH/KfWpH7xF4ntEB49cWQNcS1+4eXus7I+0064UhGcnoaYHma098
P0J9XV7yFpSXzqLOeD3WHK9hPbDS84FzM2udQTmin5dyWCOWzvnOupE6cqmf
ua/p5r0N29vpOX6GdR11XDXrHLbXzWdcPKth+ln+dobzUm55lkOfaOXy0mF1
XPZ71835S95wH0X/ad+s9HifrPLWKtVz+JYLOKm85ukS5G/ktk4zfSXmFetm
WjunT4l1RvB5JF3L8yTyfgDaaIDv/bKqi3OfdeeXU98PF6pP1eyD2GCerLTO
Zh2L/bzAOpz0NjyhDOk82/2u6nUq6zXrL51eTvOL43plVuUbZ2VfvGnbYrXH
h3Qz9qWr6y1x+6Tj90LpXtJc275orpGLzWPSx7Sk0wlF5ZU39Bpb32tFkWWJ
ZUu8ZlR0ncx/VVbfWwD/gW/bzBfqxbqWg/e9P6YsvRRL3i7O6Ftdy0mRx5R1
/mGZ4/jV8LiTh1WQVrlQdgnPzrf6XPyXHJ2F9c1R/A7P0nmmXuIz7bk+9z9S
oO/ZrHhXFTiP6xYglzZOVryslhVfG5m3r5WTPcY50dBjSXo4p+mbOpCruo+5
fvokawAuon0FqJ2rNObJc1tVTcMZgehcblrPtNyRfzVsr9F+qup9Mdsk5j6U
e+KRXgu4zuQUyh5OAJcplK5j2ruhzvXrQ+Zvzip2qigrer4/gSaWSbgt9qko
R3zea3tpos/xeZ7PsrmFx9vKNR9pX20CFOeqXsYYsMyLKPMi8AuZ42VIG/OQ
BuarbPqZzrGlLmXsA9/Le+zL28akDGyzrb7VNG5x3AJ1b8b57k+L9kfSes+c
UHaDy4cn1L3e+p7rTNJpbP8U8O7v3DeFoonPlL0H0+rvA8CPpsVn8nt3LHnd
FYu+9e7PFtufTPtXWnXd533JOttgq8w/7l1+sC1DW7XY39a7nu2u61LTQpoW
+3vpPmOV6+HYkP/k+/fuI/vKtXFlvvxnPKeqivcqgNsgH3dgqK4NFJvDGJvh
totpGzCu4qRyOscpLKdy1W1LhYCgnM51+H6yv1+X0dy+P9aax7WvE6BVRnVd
4zWctsaWfJULTA/bvj9fcWQVyyk/2+U85dyhTcTnxaVzyftQ6sPZjmlgPMId
kWIJezOeC3hNnvaWt/u9TyTfGv1qP+Wpf1VMRyvv3y+3r4Ln9VvLyv7jfO2V
VcwcY+cYM8bzSvqRhiPrmlh6aS3whkjltgDvjeR33Oc00sk4s9D6m32kHcB9
Atenc2LZx2fE4sl95kto25v2QA/QMQBtdsvKrrnf+bbZtttsG7TUnp2bke0+
22dxXD/Yfme8p4EHZ2RzV/c47nef2Df6VX52PxvbPq/rvHVtY/dw/T0zomG7
6ejiNbuCbR32r7Nt2u8tAwTKA9M6en3vbH5UsD3D9Sbfdv/ZgWSqY1bjxvGj
XD9om5j+rZ6xaLgN+HbQVA15umUkb/SLpT3eactwO8st5Ze+F/qy6ctg7MZG
y88myxJjRhgrQBliXMA6yx3H9VOfz6+2r/knyxljBBhjsB0wMBLuHym+YLf9
NfSXrHMMBn04D5yQfszxC8Mj1TkkUpvMT1/Lt7YNuO7vcDss285+BsYadrW9
Rz9Ul0ixKYxpmmc/CmNG6GOZYz9MRcfm0F6ra3uWNuCdPtPn2X5RoJinDpZt
zhfygWnzXBfP+hkbw3jI1m6fdDCNsSiM52wbCd8cKQ+/X18gW4jz/Fvbzl1c
fkAknvaLFBvxtc8jFrm9D90Htv+AfY6cz1sjxeKwr4yNWW1MXrSxr+56r1NV
vFZt99iRn91sNzNPXcc08byf7+Qx6xhnH9nzsWRlhGVnUiw7qXlGfps2LrPW
OoG8C6xLKZeUi1aOA53heiiXqx0HwtgWxlIzz8K0aKQ8lsoUcWm8CnnDuJZW
ji/dYzl+1HVucx9ZZrbnMuf0Rss029xtnyLzlri+Vfa/02dMnz/fF9gv383z
rmtGNv65tjd/t60des/zl3/a+8TN1ht/j7Uvaxlrjc6xrbPX5xqMyabd9Fw5
2U7cm83xvu6nWOnjUefn3rtxD/cP7zW453jZcd2l8d2sk3GQtAVecd08Z2J5
7ldfs21IG7f0/IB+k+9cP/Ptt47kt1uz0lHUVQPsA6cvfIPXVa6vf9iOph08
1Gsv1z7GB9EPw3jg5zPq/9iM9iuN7BsY6zWRdiH3sPTLr87XXOd+lPvSsc7P
NZPpzSxvLFPi+M7XnJ/f95qun7wn3mgbgvUuzFdc/i7rarb3br7OsJbni9+1
zbvvnLbC9hXTyNdN1vmsg/bIXOchLLOdckOsuMFWsdKX+xvty5RtyRf9zDS2
X+J8Jc673Hv1BZYJ0rrQ/ZjufRb3WzdbxihrrZKQA8C/wZsemEsv4Htv4J6c
V7CRC9Kqo8R9vsc+X/o5O2W1Xg0Evj3W+tcjFg1TLXtsl7HZU3N1Z4Ex54z9
edcyVGw81/I01/TzeYF9qvQz06f4tNf6W2xT0baiDG3w3o12QpHX5oq2Mbhn
GxlrX/5NRrJFGaNvLvB+lOUqeM/NfRrlgL5CysUdae1N+6fVl6nmY57LBAaW
o9+C/i76iIbkC4Z6XS7yd+brZhumC3Amq/jtBoHsoUpen6vbvsjaLqlm32DW
6/jJtt2q+rl/kfwT/0A9zW1HNYy1lp1U6pewvcC68s0f7qUrem/KfEM9F0lz
GadVMOS6r6fZtqFd0/gEm+gl+91Lxzzp2Pk5GdX1RUZlO9pnQRuZfqL2xlUS
el5o2aXMMfazp899uLfrYhuY6UyjT2max4VtprOKvd5TpP7ttAzssH6iDttq
XbvXY8S+ctzog03ZB9jU/KfPM7Ddz/Fpbzrb0Lfh/Sb3ndN9DsIY/gb2c54N
vCAj3lMGd1pXkpbK5i35UtF1k95SvrAdymVd25390upn97S+xeYh+/2CZbK7
8/RhnqxobAfcy/Oa87tNVrLfGvhorDVkXEYxLDMdl3I99ni82NQKeCLgIJ4n
MO6C5y+oJ8szeqT9wjgNwHvgx0eATxI6Kw9ylY93ISK/8/ycdw14hv4b9Eot
+w6mutwDjOlhvArqezHU3SbG4RwCnIx8Mfd51iHn5Op7Od+/KL13QZwBPhX0
1QRuCBzzbIJ0mHbSQRpJQ57rpI+FcVYHLbO8J8I7Ev/n/rGfgcuxHb6XR/4K
Oeof08Jc9YP9+Syh9JPdd9axIyWeBU4/PVdnJjy/YF3lcvQ9lSNesK5XE+r/
Ip7TAYrps8jRnZZ3/Z18v9pxAowvmJQ4Hg/Fet4ATGF8LOBNwLSE7rHwHgjv
gCzC+1uAhc7/qssUu52NjA0LlNYpUP+mua5HHT/ZJ6m9QrHtyVNy5GcpzNEz
cTXzq7z7/In5RNn5xbzht9hjw3HpFyhP30B9mGoa67v+U+w34jt9Rjs8jjtz
lHeKaX0bMN08eNlp/06o/+wj+TE+1Hg/CXwMOJMjH1Ff10cZqQQZ2gu8C3nG
Aj/PfuQozpXxroyTPYBv/0LafuCfAVNJI/Ao4HsBvycVm8S4pBDtfJqjPOMB
jwEezzmel3FNdwKGAZ4FvOZvD/v7hByVH+/0Z/1tD/rWAbA7obbYDuMUB/K8
DnCH+TPfY8D2P3M9z7q9h03PKNN8E315jPsAHmy67vI30sK0Hinhu9zGTrdJ
3N/PjN1bAvgD8CVgMeArj8c0j9lg9+9Oy8lHlstiy2NJjuy5670n4ZxhvArn
UOT5XpTWnKE+4Z2/Xozbpt8A+BDyPUc/YI7GmrF2Ccspx5xjT98nv/F9luWG
NO5D2v88Tw+4HsrBXr/v91zOs6xTto+kJFtXOVaHcTcTrFefD6XDqMsaeE5u
tFzyrPu/KcVrMm2h+/6wZYM8GmS+j3Rf2BbLHHW/jrltprOP74Wai++E4sMB
0865ecS6jv7Ro+57OffjL92V1rxMp0Uf7UPeKSuwrZgPXDYtHZUHfFKoWD7G
F2+N5UNeD3yBY5YZl83YzNAxhBti7TsZ+/Cc7/E9T79jqBjVCsC/hJLhlaFi
dRmz2z6huL6/YvqQdqFjeC8BFDkmkLGBbPMCf9vN2Oek4yNdjuWf97w64Dma
cvxoF6/fvYDn+k4c78YxPpqxpYwfvSjlGGzHhhY79rB9Wj4z3kPNCRX/eCzQ
/Rb69sfwTmKoO4APR/Ln0v85mjFX9sHSFzsirXPzYWn1hf1mXPt/3R/2ZbPb
ZNt7Q+mMX4FPIh/xXJF89difnFbZXS4/+YR5fDBQjGVT4Or41sX8vMT8u8Dx
01cApgP+5buj7McixxB+F6vchS73mmPRHwmU1s91/RnqLOH0tOKNJwBuBLxh
fwL9ClUte5TBRwPJzseB+k9dx3rLe6wzlruU5Yqxy4zf5littxxuiRWDX+y4
UMb2MiaZsapZ2wo10pKrw45XrWIZY4wr7yPRBm2dkRxyLDgmhWnN0zAtOaI8
cT2Y7bvbvMPNsec4pUKtSdO9nnI9Y7xJfc9PztNBab1znStd86o5X1Xrq0Lr
rGOe+2+5zrcN1F3UYRnrE+oVnrUccJ0vOx9p+cw6bLx1NnU310DK6a4c3W+f
yDPdhGyQam6fdXaynXBLoLYq+9tOrwdcn2dYz7PN3sj3MXCPQDqetgDfV+RI
VscB9hnvsZ7a7zTqq0ruz38cB8J4kP9a1/H7vx1fzThr2jnrbeu8i7RVgNUp
xbkznmk4x9WxxIwp3mL9ttnrFnmxyzpjt2PY+zitE/VgUvJEWZpsuaX8Xp/R
/qM9z4ZCydvRQPHjlCvGUqesE5oF+ncAedwceHwsv9wzwBNi+c0mxor93uS2
XojlU3sZeIjj1hi/NjjWPZ57Y9G8w3Hj2yzrjCXf7Xd+u8cxXeTFHbH2v7z3
lvT9grxQbS50PxnjvdXx3tVzZW9XAzQO1F5hqDLMwzsK3bwH4V5kfyz/y0sZ
6RzaJmNOGG+OMeVwjtNe9V2YyeRPVue3V3Ofh3pHg95uwA8CDwPMBcz0+HKc
2/jbLaHyMX8XxtWn9LwyoXsSfB8F+MJpd6cUR8kzL5679fYdCt6lmO07W/R3
z3WZwYDIe3nu6efZ9vjdeyDuD+rlagzIb/Kf84F3O2iz3kv7Cmn30X6M5V+t
XqQ9ULH3AATuB5g2wnc9Hg51Ftvc83Orx5nj8ii+TUGeJ0LtNyp7P0KZHWC5
Zlzg5+774+7Lk4bStKZZneNfDtwuFJ8vC2XDHUnoHgbvtfB+C+//8R4T7zDx
G+/70a/XPas653qc6Ct4y/6dDo5PYJzC0FCy2Al4lsfw7ZT2NZzDvP/R1ed3
PMe7NKu9cNus7gkz3urGrPpNfq4B1At0Jtc5ezym7ZKsfFDL7X8aGcguHQ58
bVZn963YTlb+x5pZ+UboL2Cc4nLTw30TddMK22YDUpId6hPGPpK/vHfxoGVk
SEq2TGi7YoDT7jYM9hjcY71E/TQkLZ9bh1A24lneB/M8bq1lognyXIi0BsAH
3O/pKclePe+fp3tecH6wfBXvpeunJUNN0zrb5768loFzm/Uy/aC/xU7nPi12
/XwfE+ouD+/0nJmWzNdJi6fk7TDgh5BnBfI8EB6vl+1ckJb+aAR8se+k8G5K
1SLdqawG/Le06G1seinvpOmOQGtHf96PQ71LKbvAdwcan4GB5IbjxXE7P+2+
p+WLamtfygKUew/wDeBrwLKU6uIcreP+13K/q7vP1cwf8nyK+f625Xa1YYXT
VlkmmVbPOrO6/RaV7BtZ4e8lHr81LjfK/bqX94lMP/txln0afH/bbZHuKpYR
fq9sOaG8NDKfzwCuZTuHfp2x/j/G4VB7G9r79FlwreEdI+p++jky1mXcu9Cv
wb0FbSLaR1wT6qaV5xT6TVPaK7EfrJPPPzttn9P3+dsOPxNThkbnaC/8ZI74
esDpB5yPz8+Gyj+W932y8mHPCTTnnvS8e9LziXrnpyLFK8ZZ2STUu794nVnh
teaAbR+uQWNQ1zrIy9OB5jjn925AblryQLuVvgDaJZXTsl24n51oG6bYZS5I
iX/kI+/AMOahP89bqcu4J6VcOj/L8XmL35Np2U7/QzvfAfrheVmoO2QN7K+j
Hl5qXcz+7LK9tsz5V4SyQ7lXpb9igO0W2v6jncZ9Qnv0cwLqaBkct/lYvrH3
arRv33O7Y5LaV7DcplB0zzHtLV1Ph0C0/OJ5mkrr+yHaBaH8C1tC+TPb2Ke5
xenbgK+wz4G+B8oBfS6kd1+o9/WhgM8/cg/hfeIe95f5aXv/YT/MwVD2Bm0N
+i3Ge7xpp3eyHqA+eNayx7YquM5Kpovlxphfn5in9weyh1sHshPJM9qEPYt0
l6sX7z+lpUcSjM/P6Hy5H9L/G+qO4pmhyvZ1+TXIuto+Eu7JJrvtUabtWcPo
E2gZ7T6/YpuKa8wgP3NPx7t/nBPDQtmupJH7ncmo9xXAS0ndHS22fUEduMD6
cJGfv/b7Mj/TFqFuoV5e5m/UQzf5nyf7inR/qaXvLl3ge0lNsorNLo0J+th+
IM4f6uBZrmeY144BgdpbYlrmed3j+3z7BrmH4l0I2jOMD6K9RhuGaZOMh1oX
DPaaPMd5WIZ2H3UFbZ75Tqf+GOZ99xD6pRMamy9Nbxc//2FalpovS/3+tnny
nnV5ifU5fTHcp3DPttq+U57Xl8bA0ZfLMdrm/ca3ocZqYSj9W/OEdf1k25gT
7Sv72Hii92jFLss6Onnu97fcc37QhzgR/O2O9CWB2t1tv8DRUPP6t1D6sdQ2
32ddTB2+zXshtjEq0Bo7KNBd2JleC+8MxYNBocav2PK02PzjPB8Qas24I9T4
MbaL43O6+8j9fyufTXRNy77iHZP5poNtvWW5mOf17l3LEmmZ5D1gqc/7bdtv
jCljvBxj0P6DvrQEtEgqHnKJ4xYH2pYYAvxzoLOSA8ArAe/i+adAayXvqPIu
a2Ovm62Af6FdQn0b6P9uPE/uCPykfSj0n+zGt1e5NwjkUyENpKVFqDr+Huo7
5ynrOptzjjKcVPpL/jbd5WYYT7ePhu+8+/8a3x2Lzpj07aaNNE53vneSuifN
fpHGVvbHUE9cHCtu/ZJYd96Z3jqpd6ZfTf9YpH/tfMOYllhn3h3c3+mue7/9
SwfdbmmbX2Z0Vrooo7VmptebeRmdxS0EbucY+stjlZvhfr1xQr85frQHpnhs
2Je9gd7f8HfKEe+K805TSaS7+J9E0g20xWmX8+yZexTmaZ7SvxXOdLn+zsN/
IvDuWBb4vFDj0jxU2YHOy39KnO3x+tb/LOK/iyiP6yyPw06wWdZ6XlC/vBPp
Ptm7wOvQh27cgwf6jwz/zTI0Uv/e83iNMc94N/02QGf2FdAD0Mvvpfkof/+I
dZeiKX0Mse5EDI3Fp1JeTrGMMY3jfpPHfpn/5cJ/ujwEem4BvS2A7wqkl/sA
94oUP9Y3UvwW47h2R6Kb9A+LROtTpukKPz9hOt9zOvdU3BNxz7TIcrIM+Cvf
k+J9qc6x7lwMiMXzv6X0L4x/B/o3CP8R0txjtBHPYwP9M+B54BYeI/7343q8
j0H6DYH+73E4oT3tslj/APs21vzmXG/lcaXf9/yUyrBsm0D+Etp+tAH7mCeD
qQcCnSfcGkhXsCzzvBRo/zwpUHnWcyN5mNH5dG/gNXgfgjzLgRfYP/sW8NxA
Mk9beBmeeyN9FW0oQE88rw4ku3ymLDcwbxq53w3d9y6Wl65J6XHq83sC9a2h
+9ovo5jEm4HPD8XnxqHq7ZvUmWBPyxvTLgrtHw9VD/vbBPBMoH87PAncyPWw
PuqyNuRDUvGgjGdgXMNky+EU67vJztfa8khdtdC6Yj7w/EDfvqHPNZTttj1U
uRtd9pxId04bR5JfnpvRp3y9Y3IYm0PZoRzwHy8NzLM+TqNc8B8MnBOl/6f5
0u2y/St9X7UF/+HjOfKQx72JeUGeXuTnCy0LfL7I3yiv3XyG1RO4U0ZxILcB
dwy0znenvFkeKBesZ6Flb16gebsVuF6kuOrakfj7gnm5MdTZ385Q/33g/x/4
T4k3A/1zhv+emRaIB9MDjVVDy/xIj/kDSfn2u1h+hhhTniaY3+T7l7Zvue63
ixSH2Z5x6IHSHwikr7q5zsYeo6si2bOTbdNy7XvdMtHIOpp08AxypPOwnu6u
i7Yb910TPJ8Pe9/UNZD92CWQzuxhPdkp0r/d+I+3JwL51R+3f4Lz9Ih1N3X4
z4bpTpvk/rLftzrmirFXa7zvIx1PBSrzmPUT6WlrfnU2/w7bx8a2+npOkb46
Hp/ang+tPB9oLx+zr2yk+ce+XxrqfT3a2hTo/H5toDXzDfORMjzeNG/wnL8A
5f4Z6f8Y50Uaz34e5/8hzzjgfYFoaeu5MMh6mvr62kjxqLdEGgfSTh7Tf00/
OO2mFrZnzrbd1NhzoKV9cfTJ8d9tjJu9NRJ946wf3vD4k/7e5ht5VGyblrYt
/xOTMi9fD3Qe9QHw54FsrdmBeMa99CHbzostn11Mb3/Lz1qP3wCv7bQByOO+
7ltz69mzQ+05ufdkLMB400zam4Sa++cAT4t1947/zKA98Kvl6QvTRhpJQ3XT
scr0kbbyafkkKgCPDqS7/hXojI1nYg8G0mXcw7f3Osf1blwgfhxyn3mOerHH
lTLyqOdzZ/N0iOWoj/v5ayCb68dAthL3TsNtt3QxfzgXezk/25lkufx/G+sX
yQ==
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        RGBColor[0.917794, 0.920966, 0.881936], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNm3mYVsWxxr9hBphhGED4tplBATEYjUuUgCuLgCwqaqImN8rmxg4DAkJi
XBBmQBQUZEdQBIKIGwKC7CqLgSgiqCyucWGiqBH1RuWK932t3zzyRz11Tnd1
dXV1VXV1nz5Nbij7w+BqiUTib9UTiVzh9sKtBa0EX6ngR8ERwRbBKsF8wXjB
Nt57lQrqJRI9hf8q/BdBeb2gN+2zgh6q66aybsLV04nEAZW9k0ok5qnsEcEs
wUP1gmaO4L+q/1ZQKVio95mCyYIz1fZNlZ0qPLAkkbhCZY3Fs6vwZYKTixKJ
6cKToP9JtGfkJRKn50Vfs6izjGXI2VbQStBO0AE+lwtuFXQUdDEv8VnNuFcI
PslJJJ4T3icYK/gmN2Rw//VrJxKvoJv9gotUPgL+neHXRHRDhfsI2teLtl3o
+8SioDNNv0SMvb/w8tzo07zfEuxER5bpNeZjB/K8Rv/bkGE/z5b3JvG7S3Cn
ICG91MmLOR6g936CIYLtuaHnVwV7c4Omel7odjLz8Shz1zcR8zabuVuIvKY5
S21yZUft8gLOYS4mqO4eaOfAa4H1kQh87PvDwufS9jzBTzU0HhnsjzWCd3uV
nS+okD39IPx/2JXneX69aD8Xfs1lNy+r7ThoZiD/I/RZJYvL3Lf5m/f/1Yi6
Bdhpe8bl8Z2LXObrOb5Y8GLdkM/tDuVFu7m0nSIYVy900EJwn22YsvG8G+6l
bArlfj5L8ueLX6N0jG86YzwL/drW3Y+qExriz/54BfY+WH5yv/Ag4TuY/4nW
QaH4CF7Mj/pJ+ElL8TqcG2OtQJ7mgkvhY34PQH8/czkZeech1wzqH6CuA35w
rL/ZP24sDX+4QXgrtmcb3w5+E7vehx3naYA1Jdcp6V/o9mPbY7Fv+1Z/zyXv
d3vs0skYnm3rg10mGFgvfGknvuz6MdCPwEcvRlbHhuHo1LodVS/63kf7ncjs
sgP44njet+O/P6WizrGwN/wt71Ceb8EP+9QNv/RzGX1WKvZ8IfhU8B/BZ4Iv
Bfso+4jY5Bjl+FtJ+SFBfirqawkfwT5t3x9BY777BW8L3ssJHd1N/9/Rz4uC
q9R+nOz9mlTIOApdvlQ34ukg3q1Xyz9btFME06vFnAxOxLy4/mZoBvBcNS8D
GL95mt/mumGTP8cU4oHjgH3vqMb5PeuUY/Bl2FYHbO1SQWtBjTrxbL2MZm3q
yJy6TS3Nx0cqy01HzHf97bkxJ72xgd7M1c3I35vnr6WLlaI9nIrYu4V5dyx3
TG9UFDb/IjoawTyb93LswvbhdaAj8nit+Vz6PpwTfDrVi/qVrEPLwa73fNtf
raNCQb10rAf109HPCOz3L9isdev1sYC4Yfvfiu2ORZ/fsAZ/y/MQ2rtt37ox
T+aVo/a1BXmCH2j7n9zQVzv6Nh/P03+p+yI3aG9BruHow3iYoElJjPeq0iiz
TqrW5OHM2Tf42z5kNG/HhR30UTWOsbw7Jjlmel1tiR0VkhtUrQNLZFNPCJYK
TstoHuQjpwrfp/fJgknY8dxqYdeu7yG4WnCNoJtgOO8nqM81eZFTNcqNvKoj
uVUnwdOqW+b1Ab7mX86z8QTBNMEswWOCqYJFgvnUT6ZsAfWLwQto94BgvOBB
eNx/TJvJvM/BN2fT33jaWV7L3Tg3ZF2fF7I/nw48NRU+2I610HpMVA8bnJ6O
52nCd0gPwwRDBE/lhW6fEX5U7S8UzXLRfKC6A4IK1nT7tXkPSTGOVMQpr0VH
8mKdP5/nPWrzhmCG41lu+K9t0f2NqhFy21Y3Y69HWNcSzMm6vJgXy+K5eJr6
I/Tnuo3CGwSdZQfTxPOSTMy55/uPNWIuHhY8gl1MR4ePovdpzMFcymdRZ/2X
qf0tghE1wsZmMTf9U9Gmdyp09jQ26bmfSX+PQX8f5Q8ztxXYh+UZzVowhrXA
68Bteh6ZG9jrx0xo3b4NsbIVsWog8dz68Tiso4fhX2WPUxlLD+z/GsYyHRlX
qM1zeTHvFdhZObqYjvyDaoQuetUI+59AfZVNm+63meB/Ribq7sNXzspEuzOF
h+l9LDqw7XnuPEdzmYPZjHUYNFfjv/bVxfQzhXHNQ69n0O/pmZiHOczF0FTM
Y1kq2rqdbXwg5a7/IzKYfzflWPNqyj8FTwsmCJ4SDEtFf82TkYvvJVY6f2sp
uK1evFces845dtreTyd+2w+PUF9Vtxt/+BF+R+DxDXS7ofuB2HmUvr0uFOXF
2jCG9dq5UDnyWK4BicjhnRt6H+G9Yq28yL+ch5UDfr6dfKovvGqxXhRCX0ae
0ZD81nnuD6wRu+GbizyO3zOJ4TnwqE1ecAZ0uTyb/h5k7Q84T3WZ82/n1M5r
nTN7n5BmDXCu7/3MEfTjsWXTsQdKCzdIx1qXSsea+S3rjsd6B+NNsK9yW++f
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
Yx49hz7LMH/vj3xGMgeayZyZ+LzZ587v8rwP+v20GcRZvcuKsAf39xb9vwGu
kv1rzg98juB7iL7b5zt8b1H/GvR7afMf7o34/sgW9tzeOztfOxM/9RrSnbXH
e+ZrCyJfb4YdHg+dn112Aeu2aZ5Ixlw8noy1xT5t37ZPn45fX8882p/qw68h
YP3aXx/jXOjVbPB1/msexzPvzaBtSPvO7HW95/V66fXW69yX2ZB/nvBLx9hU
peDf2NXzeXHvvDF3O30O2ZJcvhlraw1yip+/26XiX5RPUvHd+nbuGvoOrvek
V3Dvs4J7h/4W5+92/mbXAv5uN4g7g85H/H+E/0vyP0juqyb/xXQujX/ROpbG
PtC8vC/03e3l+JXL53On3P+3rIaP/0N5jjOct/lWvg/Zt7CP9X8Y2+i7XyL+
D/M/Gbex93Rf1pm/g9svR3I/3fcS/GzscwTL8ywyGXxn3+eoHZG/U2n0fzt8
Xb+As9ZVyDmf+tHQ/Pz/TE6M+Rn4mt7yj2cMb3F+vif1yx16t63Dt9TdxL3N
xETfFy3n/qX143uupruNsVYSr1agW8vo+/W+z1p1Hm2/egWZLbtpFjOWFek4
+1jJnZEXuTP5CHcJlqZCjs3co/WZnO/6+Fwuh3k13fh0xO/ydNyXdZ6Z9T95
6dDzglTc4fUd3HV8TzW/u9Nhz6uw79b81+JzGP8T/BB5m+P/SvSyFvt/Hl9Y
Tft1lK+ln42UraPNGmKzx+M1x+eR/k/R97WfTcf/Cf6nxPxeIqZ7jJb/OXRc
nzFXsm59jNxrkcVrzErWqcbcq/aZ+wrWsBewteXY32RsyLY2mru3votrmTei
j2HpkOmWdPTnfq1rx801yFLJ+CyLz7Ha8N9NOfNyD2vuQXRVCT7I88fwWwsP
8/qKtcP7sMXsPTdk4huF162d5BkNiI+rfN/Ra34ycgrnFv4u4b2Cc7MC8sK6
5Bz55GDeTziXrU3+ZvpalP2tOM6nRqn/MYKmKrs7G7G0iLXm1IIoP4G2LWjf
itzE68T/FMcZ5YPZyFtc7vqZer9C5ZOF/8q3jJudD2YjN56QjTFcXhDnqo1Y
SxzPnfudxhjPYK1wTt2Zs0Kf4/n9N9AVsZfJIW92X963uN576/o8H2avbb5u
57x+PLq1jj3ek8nVkuxxvXc6kTLXXY5c3g/N0BguE17kPTTjuIK1sg3rZVfK
20Bn+mnZ0F0Dxuz5vBK+XmudJ7pP58Y+p/Qa1ppnl11GP5blTHRuXj7nqzob
Nn1H2niPZ9yBMXg+TePc/jxsqPsxfZrmVOhasf6fx/NJ0J2L3bmt59U69zcr
5wCXMvbZ6GVWNtbGlsTcjsjXhTFcyZgu4d1j8z6pGvtUl5+BfnwW7O92/jY6
Hru1/TqPct7lXGpnMvYWnyXjbNdnqv0l29Rs9HljcXyPtq85t/PZkM80ji8J
3/O+z77oOF/1/fBl9oPbspFrODfx/qHqm6Jp/R3R77uYl1/hC7vg8Sq8X4L/
/wMDyd3x
           "]], 
          PolygonBox[CompressedData["
1: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
KnTuVc8zF35d4reL3hx6e/wProd6Sg==
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          GrayLevel[0], 
          Opacity[0.5], 
          CapForm["Butt"], 
          LineBox[CompressedData["
1:eJwV00lsTVEcwOFT85DYoIMhykJCJIJQMdsooVSJmIm5xWurbKiFUMOCqLkk
NK2hxtK5iRoWlLbmDcLC1lAJiQhp+e7ie7//Pfec+25e2sFrsjNicSGEZB9D
+4Swqn8IqxllXqHLWUkuy8hhKzFms4XNdGYWqcxgJnNJJ415ZJJNcnSuXwhZ
uoiv5lYSzd80QZMY4R3i9bO1L8SYbe15kncwN2p+YgiP9R73WU8DD7jLBjaR
SRZznN+o61jLCeePs9h8TJdrOmksYz5LWcI89tiToQvZZV6gJXqYYi5yipNc
4jSFnKGIs5znO21coD064zmt0X79FJ3X49H7Re9FIec4SxFneGXfa17SRDMt
vEgI4Zk+5Tll3OC+9et6javsjn43a1fMl2kw36WaGpqppYoKKrlDObfJ4xb5
5LCVXGJkk8U0pvAoPoTJOpWH5knaoON1InXmE31DqNdaaqimigrrdyhnm+s8
dnDN9VWuU8wVyigl1/0cKilxXaFH9Cg5ZEd72MJ2djDG30Ze9B3sZDP57KKA
rhyI9nlWCkMYx2gGMphk+jOIUQygD/EkkkA/khhGJ/565nAdSaAncfyw/pM3
9KI7vUnxnj20G3F0oTO/rHfSjvwzd9CJGrRd2/jNH/4yIbrPZCYxlil8cG+a
TuWj+S3Tze/1XfT/RwtFPKOJJzRyk1KqqeUgddRTwgH2coj9FLCPVP4DdD6p
2A==
           "]], 
          LineBox[CompressedData["
1:eJwV0kdsj3EcB+BXxMUu3VaHUntcJJyaOCCxWiLRaPXfvdFpU0pbW604I9bB
0bjYxcXBDi5Gi9oqIiE87+F5P9/3/c33977JkerMql5BEMS6zI0OghrKKKKa
KiqpoI5yasknwm52sZc29rGfA+zhIO0c5ggnOMpJTnGaM5zlPMc5xzG+8oXZ
MUHwQH6mm/v85AM9vKOLTt7zljf84Buv+c5HXvGJX8wkytyD+K2Ol3EkEkN/
EojmEQ95wlMe85xnvKCTbnp4SZ/YIPgnh8jBdKmjZL9wPTmQ/gygN32JYSiH
OMwR2vljzI5QXBD8lc2y3vNsdSM5rCCXpWSxknwKiLCMPIopooxCSiilispw
PvM2sI0mtrOVnbTSTAsX9E23j7Gkkcp4JlKrfZKczFQmMIVpTGcGc5nHHDIo
oZBSKiimnEi4hm9TIPPJ4TrXuMkNrnKbW3RwkTtc4SGXuMdd4uL96yQQzzCG
c1lbohxFMmmkMI5UkhjJaMYwiwV0cIfFZLKI+WSwkCyyWU5DgvOlQL2ERja4
X0+Zeq0slOvkLtlGLqtYTXXYhzXsppwKaqhnI5vC8dRRy+Zw3XBPznCL3E4z
rTSxjRbSte8MzyIxCEZQYw87wndWjyKJpcPsmyyS3ZfIYlLUhbKIAiLkk8cC
8/4HLhmZ1A==
           "]]}, "0.9`"], Annotation[#, 0.9, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          GrayLevel[0], 
          Opacity[0.5], 
          CapForm["Butt"], 
          LineBox[CompressedData["
1:eJwV0stTTXEAwPFjxtqK0EtFQpjQ6CkVMWOsbDwWHi28GkVTec1gZEYGQxnv
QmNYsWLaMEJFV8XtrbexQMk/YCx87uJzv7/fOeee3++ecxOLy7aVzgiCYJaP
otlB0EQHg3QTpp8QfQywZk4Q5OkqTSeNtWQw4nimZrGaHvPNuokiWmkjmRTi
+OeaWI0hingSSCQpci/nF2uITj7RTgefCUfW4XqUPes1zSGXPJaQTTpZLCeT
NFJJYQUrWUgyi4ingYtzg6CGS+wyr9ZavaB1Wm/N+9zjDGep5gLnI3P7P6c1
XInsL/JsHKvVOm5wi7vc4Sa3ucpTnvOCJzyjKfKMfP+ytV8aN/OA1+ZdvOIN
bwnxgVY+0kwLFfberuVaSYL7ndCTHOc0p6hikt9MM8UfxvnGCBOMMcownQzS
TZh+euhlgC6GIuN53hm9NM73G3jEQ/odG+QrfQzxjWEmGGOUEepd/0Un+ckv
fvCX33xnmin+0OD6fAqpN8/TBl2vjZqr2Tw2XqdHyaGM/dHen+OlxkfYTgHl
HGMreylhDxXsZh9VLPWci7WSd7TTShvLnHuvIcK00EUn43RzwPoHOUQJh5kZ
439LEpPmiRrPdqKJIZZU91+gcRRSRAYb2UomWWSzgRxy2UIe68mngB3sYif/
AVeMp1Y=
           "]], 
          LineBox[CompressedData["
1:eJwV0rdP1UEAB/CfDpbBxMEWjQNqrBQLoBARpQuo8GjvwaN3FVAHkCo6ODi7
2Sdjr5O98kc4UCyJGutgHYyfd8nnvneXu8vd5eKaekLd0wJFVTgvCCooJ0Qp
VYSpoYBqIhwjj1EqyaGMo7RSSztR6qinkQay6KCFTnbQy0H6GOYQIxzmAP0M
MMRJBrlLJqc5w1lOcY7zXOAi17nBbe5wk1tMcI/7POAhj8ngUewMS4LgiXzO
GC94xiRPeckU4yTMD4J4klhBIt+Zyxw+spwPvOMt47xhgkmmeM8rPvGaz3zl
B1/4xi/+8oef/OM30xcEwQxmMovZdNDOPlrpYj97aaOTFlLdoVv2ELJXin6z
dol2KZVEKSeLCP1kU00fvbExawYZYoARhjnCKMcJx95oYRAsYyVriCOfXPJI
ZxMnzM+RyaSSQjFZFJFNCaXsYg9pRNlNDYtj/1ZGqKWREA3UU0kVYSoop4xL
XOMyV2LnWRQEV+UWmUYqyWwmhQwSWcVq1pLANtaxkQ3Es550ithKIdvJJJsI
xSSxlDA5jJFLBZXUkkUdUXZSQB5VNNBMPm2000gHnTTRTRf/AXnTho8=
           "]]}, "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          GrayLevel[0], 
          Opacity[0.5], 
          CapForm["Butt"], 
          LineBox[CompressedData["
1:eJwV0ElsTlEYgOFTpbNE6KCtRARVtaA1xE4oOrciUSxsLKxEzWPUsCRsjYmQ
riSmmBWhC5KWllKzhg7UsGhNbRX1/Isn78mX77/3v2fcyqrFa6JCCD2MTw5h
ZmYIM5hODnnkMosJTGQSrzNCyNIYsokjngSSSGQ4sfy220cv/USZBf4672CA
PwwyxPyfrkgPITryHn3DE17xjBae85KnrLVfr+u0QDdog1bpejayic1sZRtb
2E6TvWZWk0+mWYkuYZH7qNRiyqllGunkkhfZp8JehqYyijQGRvsmTjmnkMxU
RtBhfps++unlFz9pp5UffKebHr7RSfD7IQw6R2sC8QwlhkSGEUsSjWkh7NJq
2p07eMF72uhODeGjdrKKLj7wxfwzX2mnhU+RXdro4h2tnEjxPK3nAW9poJlG
HtNEHY+4av8W17nGGPd3WW9yg7vc4SS13KaGOqr9t326M/Jd7GE3+832aqJ7
SeC091zUyxx3vqKXiOMq58zi9YLWcJ5jnOUMyzlKBcsopZI5LCWLIxxiIYcp
ooRCClhAPmWUM5+5zPa9D/3feZF70XuUUUIp9ymmkCLGksMURpJNBeVM5oDn
HIy8y3P/A+mik80=
           "]]}, "0.7`"], Annotation[#, 0.7, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          GrayLevel[0], 
          Opacity[0.5], 
          CapForm["Butt"], 
          LineBox[CompressedData["
1:eJwV0tdOVFEUBuCNLd6o0YBiF6RoFDRR1BsSL9SoV9JsWHkAfQELAxKjAr6B
NbZYQOy8hkYRh2BhBmwzzAyD4Ub9zsWXf60ze6+crDklLafrTxWEEOKUFoaw
dmkIGymklirWsZ4NVFNEHfElIQwxSY6BxSHk5QRZBunmKhfpJEYbXVygg3Za
OcNZznOOlHlZvpAjzVe+UeVdh+UICYYYJckYP/jJL75Hd80bJ8FnfUaOkWSU
PZ4dlodo5oX+Obt5TXdxCK/kS/rZwRuesZNd9LGNp/TSQ4NZ1bJRNlGs3i8P
skB9QJbJ+ZSwmlI2U8MWNrGGraxiBZUUsJJ5zKGcZVQwm+XRM3uaK/8uDOEf
YZF7TGNKP11OyDLnJmWeNFkypPhNjhnOzmIm/fphkgzwgRHe8o73fCLBIB+J
c8XdTi7TRY+9PiGl7pWPmVIHmZd/yJGN3pM0GcapsLsHZvY5W6kuj3YZfVfR
HuWlIt8THfq26H9xrl3GaOWRuzG/P5T3ucd17nKbO9zgJtfYzi1aqOUkTRzn
KEc4xglqaKaOvdTTSAP7oln2/R+Jd41g
           "]]}, "0.6`"], Annotation[#, 0.6, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          GrayLevel[0], 
          Opacity[0.5], 
          CapForm["Butt"], 
          LineBox[CompressedData["
1:eJwV0clOFFEYgNHbzKjQiCiTTDtG9zyAQRFQe42iDFt4CwJiVCYVAYeIikLY
mTiGRNS1KC7YAC9gIokI0gyeWpx8f1XfVN2+VdXZl+iNhRBeU1UQwonSEBLk
c5xvJSFsEDfnsWZeZ5Uf/OQ7Kyzzic8scYOvfKGfIQYZYJwxMsgmi0wCW8Uh
xHRT9zhklyQH/GOH32yTZu0oI9xhmD/up2g6qfTw171u7eKX+bpeoZNrNLp3
VTtoZ7IohPN6jsvR71ziLM20cIFWLtJGgibmPWuOV7zkGS+Y5SnPmaGGBT56
V4PWUsei63r9oG94zzveUlwYwmlKKaGIQnKJc4yj7J9ypprFEZKuH+uePtEc
ysiP6ttXaDmVbFtzV0cZY5x7jHCL2yycdN46zBSTPGSCB9E+7DWHR+bpaH/m
+5qncWJkMu05GZpOGimkkrR2l5v2cqgH0d6j/8UO9c65Ifqu5iXPOGOuo5pa
avgPkwZn1A==
           "]]}, "0.5`"], Annotation[#, 0.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          GrayLevel[0], 
          Opacity[0.5], 
          CapForm["Butt"], 
          LineBox[CompressedData["
1:eJwV0TdOHUAQBuChJPN4iVAgTmAwGBA5iQNwBA4APQcATHRlbJLgESWyxAEI
piDZHaYlHAIhWfL3ik//TLGj3Z36kbHh0YKIGKcuFfG3JuKeR574zR8euOWO
fW445YgG587kIQccc8I639lkm7LaiC25yw4b5FhmhR8s8pMlVkmwxr/qiBpZ
TDUVlFBOJaX5+RSRJEWaDC8880qWN/oZYpAqBuiljy/00E0XnXTQTgvNtNFK
E435t7vf5/xf8IkF/TfmmGSGaeb5yizXVRG/mFJPcKW+4JKPTMS5TFJJghRp
ctmIPXbYZZstKtgkTYYk7+akZIJCOu3qPx1iRBY=
           "]]}, "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          GrayLevel[0], 
          Opacity[0.5], 
          CapForm["Butt"], 
          
          LineBox[{5147, 6849, 5166, 6848, 6846, 6845, 6847, 6844, 6843, 6841,
            6842, 6826, 6840, 6839, 6837, 5167, 6855, 6838, 6856, 6824, 6835, 
           6834, 6825, 6815, 5172}]}, "0.3`"], 
        Annotation[#, 0.3, "Tooltip"]& ], {}, {}}}], AspectRatio -> 1, 
    AxesOrigin -> {Automatic, Automatic}, DisplayFunction -> Identity, 
    Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
       FormBox[
        StyleBox[
        "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> \
FormBox[StyleBox[\\\"d\\\", \\\"TI\\\"], TraditionalForm], \\\"errors\\\" -> \
{}, \\\"input\\\" -> \\\"d\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", 15, StripOnInput -> 
         False], TraditionalForm], None}, {
       FormBox[
        StyleBox[
        "\"\\!\\(\\*TemplateBox[<|\\\"boxes\\\" -> FormBox[\\\"\[Delta]\\\", \
TraditionalForm], \\\"errors\\\" -> {}, \\\"input\\\" -> \
\\\"\\\\\\\\delta\\\", \\\"state\\\" -> \
\\\"Boxes\\\"|>,\\\"TeXAssistantTemplate\\\"]\\)\"", 15, StripOnInput -> 
         False], TraditionalForm], None}}, FrameStyle -> Directive[
      GrayLevel[0]], 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "GridLinesInFront" -> True}, 
    PlotRange -> {{0., 0.7921194353361727}, {7.566618020106311*^-7, 
     0.19999898131264263`}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.1, 0.1, 0.1}}, {{0.16233343978375236`, 
              0.1730407530265452, 0.1839017169353866}}, {{0.2527944579765259, 
              0.2775792280242203, 0.29986953818051504`}}, {{
              0.3353680134705382, 0.3696359429342178, 
              0.39307855874286407`}}, {{0.47329389930946386`, 
              0.5007481621950014, 0.5113863185555463}}, {{0.6401408737244775, 
              0.6544124453222316, 0.6472429909019312}}, {{0.7994155989502804, 
              0.803292893353123, 0.7781127696379837}}, {{0.917794, 0.920966, 
              0.881936}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -84.375}, {
                    Rational[15, 2], -84.375}}, {{-7.5, -84.375}, {
                  7.5, -84.375}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -56.25}, {
                    Rational[15, 2], -56.25}}, {{-7.5, -56.25}, {
                  7.5, -56.25}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -28.125}, {
                    Rational[15, 2], -28.125}}, {{-7.5, -28.125}, {
                  7.5, -28.125}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 2.842170943040401*^-14}, {
                    Rational[15, 2], 2.842170943040401*^-14}}, {{-7.5, 
                  2.842170943040401*^-14}, {7.5, 2.842170943040401*^-14}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 28.12500000000003}, {
                    Rational[15, 2], 28.12500000000003}}, {{-7.5, 
                  28.12500000000003}, {7.5, 28.12500000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 56.25000000000003}, {
                    Rational[15, 2], 56.25000000000003}}, {{-7.5, 
                  56.25000000000003}, {7.5, 56.25000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 84.37499999999997}, {
                    Rational[15, 2], 84.37499999999997}}, {{-7.5, 
                  84.37499999999997}, {7.5, 84.37499999999997}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.499999999999998, -112.5}, {7.499999999999998, 
                 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.499999999999998, -84.37499999999999}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -84.37499999999999}]}, {{
                    7.499999999999998, -28.124999999999968`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -28.124999999999968`}]}, {{
                    7.499999999999998, 28.125000000000053`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    28.125000000000053`}]}, {{7.499999999999998, 
                    84.37499999999999}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    84.37499999999999}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.3\"", ShowStringCharacters -> False], 0.3, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999998, -84.37499999999999}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -28.124999999999968`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.7\"", ShowStringCharacters -> False], 0.7, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999998, 
                    28.125000000000053`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.9\"", ShowStringCharacters -> False], 0.9, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999998, 84.37499999999999}], 
                    
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GrayTones\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GrayTones\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "GrayTones", "Gradients", {0, 1}, Blend[
                    "GrayTones", #]& ], Selectable -> False, Editable -> 
                    False, SelectWithContents -> True], "[", "#1", "]"}], 
                 "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.2842536455422249`", ",", "0.9453514477813619`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.3`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.4`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.6`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.7`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.8`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.9`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.927651906822381*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"12d22453-3985-4c8d-a501-2d5d9670ad0b"]
}, Open  ]],

Cell[TextData[{
 "Numerically, we see that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Rho]", "2"], "<", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\rho_2<1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "83fc1847-fd14-44d4-b29d-023a9bca479a"],
 "."
}], "Text",
 CellChangeTimes->{{3.921087021933504*^9, 
  3.92108704557452*^9}},ExpressionUUID->"785ee34f-48cd-4f92-8a35-\
1c10c17245d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get region of stability", "Chapter",
 CellChangeTimes->{{3.927653085484041*^9, 
  3.9276531116301947`*^9}},ExpressionUUID->"3963143b-6093-48ae-8984-\
55000d2b75fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<stability_lam1_data.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.922877554996562*^9, 3.922877634205591*^9}, {
   3.922877668079815*^9, 3.9228776851524773`*^9}, {3.9228777932776537`*^9, 
   3.922877825930727*^9}, 3.9228799322873793`*^9, 3.9228808457518167`*^9, {
   3.923484612659189*^9, 3.923484622311644*^9}, 3.927653129406378*^9, {
   3.927653165419704*^9, 3.927653173760578*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"0c0a6f2c-4dfc-4337-99bc-d0b339d57b16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"InterpolationOrder", "->", "2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Contours", "->", 
      RowBox[{"{", "0", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ContourShading", "->", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ContourStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", "Red"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*TemplateBox[<|\"boxes\" -> FormBox[
StyleBox[\"d\", \"TI\"], TraditionalForm], \"errors\" -> {}, \"input\" -> \"d\
\", \"state\" -> \"Boxes\"|>,\"TeXAssistantTemplate\"]\)\>\"", ",", "15"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*TemplateBox[<|\"boxes\" -> FormBox[\"\[Delta]\", \
TraditionalForm], \"errors\" -> {}, \"input\" -> \"\\\\delta\", \"state\" -> \
\"Boxes\"|>,\"TeXAssistantTemplate\"]\)\>\"", ",", "15"}], "]"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", "Black", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8982697335655622`*^9, 3.898269789914734*^9}, 
   3.898777742170157*^9, {3.9054366924869947`*^9, 3.9054366930121098`*^9}, {
   3.922877529388042*^9, 3.922877532671835*^9}, {3.9228776372647963`*^9, 
   3.922877659574909*^9}, {3.9228778315487843`*^9, 3.9228778667182207`*^9}, 
   3.9276531828431053`*^9},
 CellLabel->
  "In[401]:=",ExpressionUUID->"5c243ee0-fa73-4808-9429-96f1326253d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"line1", "=", 
   RowBox[{"First", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "temp", "]"}], ",", "_Line", ",", "Infinity"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line2", "=", 
   RowBox[{"Last", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "temp", "]"}], ",", "_Line", ",", "Infinity"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8982696531729918`*^9, 3.898269670184786*^9}, {
   3.898269796085441*^9, 3.898269796403455*^9}, {3.8982714261294613`*^9, 
   3.8982714295222683`*^9}, {3.8982715885093317`*^9, 3.898271589202756*^9}, 
   3.898777780306946*^9, 3.922877888396612*^9, {3.9228780236072474`*^9, 
   3.9228780319599657`*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"754f530a-337e-4136-850e-32508e2dedd4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tval1", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<LeeInterpolatingNodes\>\"", "]"}], 
    "[", 
    RowBox[{"line1", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tval2", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<LeeInterpolatingNodes\>\"", "]"}], 
    "[", 
    RowBox[{"line2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8983512302676563`*^9, 3.898351254516094*^9}, {
  3.922878034182742*^9, 3.9228780392883167`*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"35b01235-a9ad-475a-ab5a-609ea2813dfd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cc1", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"tval1", ",", 
        RowBox[{"line1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Method", "->", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cc2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"tval2", ",", 
        RowBox[{"line2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Method", "->", "\"\<Spline\>\""}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.89835127559306*^9, 3.898351282837576*^9}, 
   3.898777764841052*^9, {3.922878043102173*^9, 3.9228780489609013`*^9}, {
   3.922878088631555*^9, 3.922878097359796*^9}},
 CellLabel->
  "In[406]:=",ExpressionUUID->"0fe81842-f1dd-420d-9ce6-6ebbc4df3c6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lin1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"cc1", "[", "s", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "1.03", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lin2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"cc2", "[", "s", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "1.03", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.922890329410366*^9, 3.9228903817009363`*^9}, {
  3.922890432932632*^9, 3.9228904510006323`*^9}, {3.92348466093544*^9, 
  3.9234846623341722`*^9}, {3.923484737296269*^9, 3.9234847505955276`*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"53582df2-d065-4b1d-9c1a-d70b45b76730"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mr", "=", 
   RowBox[{"MeshRegion", "[", 
    RowBox[{"DiscretizeRegion", "[", 
     RowBox[{"Region", "[", 
      RowBox[{"Polygon", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"lin2", ",", "lin1"}], "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.922890463504925*^9, 3.922890499948929*^9}, 
   3.927653232445971*^9},
 CellLabel->
  "In[412]:=",ExpressionUUID->"cbb50a7f-6db0-4d54-9879-e58dab86939c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polymorphism approximation for island-mainland model", "Title",
 CellChangeTimes->{{3.9254770092395906`*^9, 
  3.9254770201860323`*^9}},ExpressionUUID->"4e7edd04-db1f-4967-b67a-\
c15782bab892"],

Cell[CellGroupData[{

Cell[TextData[{
 "Assume ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["p", "TI"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[TildeTilde]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\frac{dp}{dt} \\approx 0", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6995d8c8-8d95-4b1c-9c3b-91ad89817b2a"],
 " "
}], "Chapter",
 CellChangeTimes->{{3.925477082873558*^9, 3.925477102348382*^9}, 
   3.925477132473303*^9},ExpressionUUID->"9ac09928-0373-4e62-8788-\
37b9a07558b7"],

Cell[TextData[{
 "Solve for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["p", "TI"], "(", 
         StyleBox["N", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "p(N)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f1beaa3b-4154-4977-b6ee-d30ec226b3c2"]
}], "Text",
 CellChangeTimes->{{3.92547713811298*^9, 
  3.9254771435456877`*^9}},ExpressionUUID->"3948c390-a5c6-4b7b-8169-\
ce14d8a5b51d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f1", "[", 
     RowBox[{"p", ",", "n"}], "]"}], "==", "0"}], ",", "p"}], "]"}]], "Input",\

 CellChangeTimes->{{3.9210736366819897`*^9, 3.921073645083959*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"532d587b-53bf-45e7-bfcb-f0c99450c210"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"bA", " ", 
        SuperscriptBox["n", "2"], " ", "Xa"}], "-", 
       RowBox[{"ba", " ", 
        SuperscriptBox["n", "2"], " ", "XA"}], "+", 
       RowBox[{"M", " ", "Xa", " ", "XA"}], "+", 
       RowBox[{"ba", " ", "n", " ", "Xa", " ", "XA"}], "-", 
       RowBox[{"bA", " ", "n", " ", "Xa", " ", "XA"}]}], 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bA", " ", "n", " ", "Xa"}], "-", 
         RowBox[{"ba", " ", "n", " ", "XA"}], "+", 
         RowBox[{"ba", " ", "Xa", " ", "XA"}], "-", 
         RowBox[{"bA", " ", "Xa", " ", "XA"}]}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.92547711341992*^9, 3.925477117683313*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"c8136239-416e-47a1-8931-f77750552dd3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Approximate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{N}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9e75322b-8049-471d-ada4-51c261d7fb76"]
}], "Chapter",
 CellChangeTimes->{{3.925477547891366*^9, 
  3.9254775511776752`*^9}},ExpressionUUID->"d60aa3b4-552b-42c0-b10c-\
50aa986c6905"],

Cell[TextData[{
 "Plug ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["p", "TI"], "(", 
         StyleBox["N", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "p(N)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "228f9a37-53ec-4021-9315-9080b19b6081"],
 " into ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["f", "TI"], "2"], "(", 
         RowBox[{
           StyleBox["p", "TI"], ",", 
           StyleBox["N", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "f_2(p,N)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9524e61f-6c69-41c0-a24a-2069924b168e"],
 " and solve the resulting differential equation for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["N", "TI"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["f", "TI"], "2"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["p", "TI"], 
             RowBox[{"(", 
               StyleBox["N", "TI"], ")"}], ",", 
             StyleBox["N", "TI"]}], ")"}]}], TraditionalForm], "errors" -> {},
      "input" -> "\\frac{dN}{dt} = f_2(p(N),N)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d2ed6561-08cc-404d-9e1a-0901f7f340cc"],
 " to get ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{N}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0a8dd54c-178b-47f5-84aa-30753e9533d8"],
 "."
}], "Text",
 CellChangeTimes->{
  3.9254771569154367`*^9},ExpressionUUID->"f336feb5-aa7a-4d2e-a1e1-\
6aee2fe772bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", 
    RowBox[{"p", ",", "n"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"p", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"bA", " ", 
        SuperscriptBox["n", "2"], " ", "Xa"}], "-", 
       RowBox[{"ba", " ", 
        SuperscriptBox["n", "2"], " ", "XA"}], "+", 
       RowBox[{"M", " ", "Xa", " ", "XA"}], "+", 
       RowBox[{"ba", " ", "n", " ", "Xa", " ", "XA"}], "-", 
       RowBox[{"bA", " ", "n", " ", "Xa", " ", "XA"}]}], 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bA", " ", "n", " ", "Xa"}], "-", 
         RowBox[{"ba", " ", "n", " ", "XA"}], "+", 
         RowBox[{"ba", " ", "Xa", " ", "XA"}], "-", 
         RowBox[{"bA", " ", "Xa", " ", "XA"}]}], ")"}]}]]}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.921073660788661*^9, 3.921073673453148*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"3ac7e2fd-ca34-4d94-86e6-cbc7ee6268e6"],

Cell[BoxData[
 RowBox[{"n", " ", 
  RowBox[{"(", 
   RowBox[{"bA", "-", "d", "-", 
    FractionBox[
     RowBox[{"bA", " ", "n"}], "XA"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.925477162959703*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"3efaea14-9c67-48c0-8843-2da54e590782"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"n", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{"n", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"bA", "-", "d", "-", 
          FractionBox[
           RowBox[{"bA", " ", 
            RowBox[{"n", "[", "t", "]"}]}], "XA"]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"n", "[", "0", "]"}], "==", "n0"}]}], "}"}], ",", 
    RowBox[{"n", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.921073676474909*^9, 3.9210737124394903`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"d9633f1c-d154-420a-b99d-106a9cd23a04"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 85, 2, 22563442871104250444, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.925477169259437*^9},
 CellLabel->
  "During evaluation of \
In[85]:=",ExpressionUUID->"739d9c24-f5b3-4557-bc1f-a52570e91119"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"bA", "-", "d"}], ")"}], " ", "n0", " ", "XA"}], 
     RowBox[{
      RowBox[{"bA", " ", "n0"}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bA", " ", 
          RowBox[{"(", 
           RowBox[{"n0", "-", "XA"}], ")"}]}], "+", 
         RowBox[{"d", " ", "XA"}]}], ")"}]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9254771695357103`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"d04465af-f9e3-40d1-8298-885b042bc247"]
}, Open  ]],

Cell[TextData[{
 "Solve for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["N", "TI"], "0"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{N}(0)=N_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "91c0114a-8461-47bb-b46c-74fa041fffe3"],
 " based on the requirement that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         RowBox[{"(", 
           RowBox[{"1", "-", "\[Delta]"}], ")"}], 
         OverscriptBox[
          StyleBox["N", "TI"], "^"], 
         RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["N", "TI"], "0"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "(1-\\delta)\\hat{N}(2\\pi)=N_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fedafe20-9627-45c8-ba4e-0e4ca49d9c83"]
}], "Text",
 CellChangeTimes->{{3.9254772337314672`*^9, 
  3.925477250017755*^9}},ExpressionUUID->"4ebf24a1-aaf2-476d-a267-\
47ca946d6628"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Delta]"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"bA", "-", "d"}], ")"}], " ", "n0", " ", "XA"}], 
      RowBox[{
       RowBox[{"bA", " ", "n0"}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "2", "\[Pi]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bA", " ", 
           RowBox[{"(", 
            RowBox[{"n0", "-", "XA"}], ")"}]}], "+", 
          RowBox[{"d", " ", "XA"}]}], ")"}]}]}]], "==", "n0"}], ",", "n0"}], 
   "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.921073954089911*^9, 3.9210740283203983`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"e4bda48d-02e8-4e03-9d76-2fc602067225"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n0", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n0", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
         "\[Delta]"}], ")"}]}], 
      RowBox[{"bA", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]]}], 
        ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.925477182989729*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"8ae40e45-01ab-44f4-a8a2-966264cd35ad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"N0", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
        "\[Delta]"}], ")"}]}], 
     RowBox[{"bA", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]]}], 
       ")"}]}]], "//", "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92316313742692*^9, 3.923163155933086*^9}, {
   3.923163214293013*^9, 3.923163248200265*^9}, 3.925477274626343*^9, {
   3.9276521229849997`*^9, 3.9276521382413893`*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"e3615ba9-5edf-4b0e-bd69-2a66116326a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nf", "=", 
   RowBox[{
    FractionBox["N0", 
     RowBox[{"1", "-", "\[Delta]"}]], "//", "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.923163235453*^9, 3.9231632510307207`*^9}, 
   3.925477286811907*^9, {3.92765214604263*^9, 3.9276521495662603`*^9}},
 CellLabel->
  "In[452]:=",ExpressionUUID->"8c5ce7db-2139-4234-adab-bb50c7032a50"],

Cell[TextData[{
 "Thus ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{N}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d75db10b-f8ac-4f6a-a1e3-f7c0270db23c"],
 " is given by:"
}], "Text",
 CellChangeTimes->{{3.925477402854454*^9, 
  3.925477412825748*^9}},ExpressionUUID->"bd91b361-6ead-4749-854a-\
c8620b033419"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"bA", "-", "d"}], ")"}], " ", "n0", " ", "XA"}], 
    RowBox[{
     RowBox[{"bA", " ", "n0"}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bA", " ", 
         RowBox[{"(", 
          RowBox[{"n0", "-", "XA"}], ")"}]}], "+", 
        RowBox[{"d", " ", "XA"}]}], ")"}]}]}]], "/.", 
   RowBox[{"{", 
    RowBox[{"n0", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
         "\[Delta]"}], ")"}]}], 
      RowBox[{"bA", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]]}], 
        ")"}]}]]}], "}"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9210740180398483`*^9, 3.9210740337854137`*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"a59ecabc-d7d4-4693-a0d7-b04ffb462350"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
     "\[Delta]"}], ")"}]}], 
  RowBox[{"bA", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
     "\[Delta]", "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
      "\[Delta]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.927652168336814*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"2f0e0c21-ab6e-4320-832e-f9d15556b444"]
}, Open  ]],

Cell[TextData[{
 "Determine when ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{N}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "47e372f6-dcaf-48ca-bc0e-bf86e77217e3"],
 " is a biologically valid solution, that it, when ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[GreaterEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "\\hat{N}(t)\\geq 0", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5bd3e6ac-636d-4004-9fa7-3a083610bc08"],
 "."
}], "Text",
 CellChangeTimes->{{3.9254773016502457`*^9, 
  3.925477362193972*^9}},ExpressionUUID->"bfd1fa85-17dd-431f-9dab-\
c6b6f6138e81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
         "\[Delta]"}], ")"}]}], 
      RowBox[{"bA", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]]}], 
        ")"}]}]], ">", "0"}], ",", 
    RowBox[{"0", "<", "\[Delta]", "<", "1"}], ",", 
    RowBox[{"XA", ">", "0"}], ",", 
    RowBox[{"bA", ">", "d", ">", "0"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9228768820355473`*^9, 3.922876917879637*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"fc18d966-c95b-4a25-925a-1f9b1bf75dbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bA", ">", "0"}], "&&", 
  RowBox[{"0", "<", "d", "<", "bA"}], "&&", 
  RowBox[{"XA", ">", "0"}], "&&", 
  RowBox[{"0", "<", "\[Delta]", "<", 
   RowBox[{"1", "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", 
      "\[Pi]"}]]}]}]}]], "Output",
 CellChangeTimes->{3.9228769201682673`*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"43a95490-da70-40c2-8951-ed71b3f556a8"]
}, Open  ]],

Cell[TextData[{
 "This is the same as the criteria for a population of exclusively ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["A", "TI"], TraditionalForm], "errors" -> {}, "input" -> "A", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bb3d509c-72c2-4cb6-85b7-2b3d4d16281c"],
 " allele individuals to be viable."
}], "Text",
 CellChangeTimes->{{3.925477454968075*^9, 
  3.925477480827744*^9}},ExpressionUUID->"64fac204-9f53-47d4-b504-\
11f07b710e61"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Approximate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["p", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{p}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "110933bc-13b9-4a87-8cbc-d3ff13e21ea6"]
}], "Chapter",
 CellChangeTimes->{{3.925477563724265*^9, 
  3.925477566243116*^9}},ExpressionUUID->"0f29d4ae-2dc4-4028-826e-\
c029a5a56013"],

Cell[TextData[{
 "Plug ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["N", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{N}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f3c989c2-5c1a-4a0a-b65c-58c409118afc"],
 " back into ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["f", "TI"], "1"], "(", 
         RowBox[{
           StyleBox["p", "TI"], ",", 
           StyleBox["N", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "f_1(p,N)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c0730006-bc93-440e-8670-8ebbd8a57e12"],
 " and solve the resulting differential equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["p", "TI"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["f", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["p", "TI"], ",", 
             OverscriptBox[
              StyleBox["N", "TI"], "^"]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\frac{dp}{dt} = f_1(p,\\hat{N})", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "35467e51-7eb7-4fcf-bd08-b2badaa62502"],
 " to get ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["p", "TI"], "^"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{p}(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e05da3fd-550b-4360-b707-6b7abe93c779"],
 "."
}], "Text",
 CellChangeTimes->{{3.9228139488292522`*^9, 3.922813994854341*^9}, {
  3.925477503485332*^9, 
  3.9254775238522263`*^9}},ExpressionUUID->"01c319df-90d7-494a-b0f1-\
c7393c6595ab"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["p", "TI"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["f", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["p", "TI"], ",", 
             OverscriptBox[
              StyleBox["N", "TI"], "^"]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\frac{dp}{dt}=f_1(p,\\hat{N})", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "53ee9133-0752-4758-883c-8a87b626426e"],
 " takes the form ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["p", "TI"]}], 
          RowBox[{
            StyleBox["d", "TI"], 
            StyleBox["t", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["a", "TI"], "1"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         StyleBox["p", "TI"], "+", 
         SubscriptBox[
          StyleBox["a", "TI"], "2"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], 
         SuperscriptBox[
          StyleBox["p", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\frac{dp}{dt}=a_1(t)p + a_2(t) p^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9f7609fb-cad3-4c2b-a344-7ef090737e6e"],
 ", where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["a", "TI"], "1"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "a_1(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b7e1929f-79ff-4a00-b3b5-87d94e5d0a12"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["a", "TI"], "2"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "a_2(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "acbbefdf-b86b-4ff7-8635-9a14e668c255"],
 " are given by:"
}], "Text",
 CellChangeTimes->{{3.925477577310734*^9, 
  3.925477640864594*^9}},ExpressionUUID->"4b3e6644-ccd0-49f7-bfe7-\
e003772203e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"p", ",", "n"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"n", "->", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
           "\[Delta]"}], ")"}]}], 
        RowBox[{"bA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
           "\[Delta]", "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
            "\[Delta]"}]}], ")"}]}]]}], "}"}]}], ",", "p"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9210744780350037`*^9, 3.921074496497714*^9}, {
  3.921074632474927*^9, 3.9210746497701483`*^9}, {3.921074883623969*^9, 
  3.92107488392518*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"3d2b1cb8-4f4e-4dc4-85bd-0ceb105eb8f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{"-", "ba"}], "+", "bA", "-", 
    FractionBox[
     RowBox[{"bA", " ", "M"}], 
     RowBox[{
      RowBox[{"bA", " ", "XA"}], "-", 
      RowBox[{"d", " ", "XA"}]}]], "+", 
    FractionBox[
     RowBox[{"bA", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", "M", " ", 
      "\[Delta]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
        "\[Delta]"}], ")"}]}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"bA", "-", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bA", " ", "Xa"}], "-", 
        RowBox[{"ba", " ", "XA"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
        "\[Delta]"}], ")"}]}], 
     RowBox[{"bA", " ", "Xa", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
        "\[Delta]", "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
         "\[Delta]"}]}], ")"}]}]]}], ",", 
   RowBox[{"ba", "-", "bA", "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"bA", "-", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bA", " ", "Xa"}], "-", 
        RowBox[{"ba", " ", "XA"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
        "\[Delta]"}], ")"}]}], 
     RowBox[{"bA", " ", "Xa", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
        "\[Delta]", "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
         "\[Delta]"}]}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9254776661008463`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"53599b59-65da-48b3-8052-3a07184e5ae8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "ba"}], "+", "bA", "-", 
   FractionBox[
    RowBox[{"bA", " ", "M"}], 
    RowBox[{
     RowBox[{"bA", " ", "XA"}], "-", 
     RowBox[{"d", " ", "XA"}]}]], "+", 
   FractionBox[
    RowBox[{"bA", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", "M", " ", 
     "\[Delta]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"bA", "-", "d"}], ")"}], " ", "XA", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
       "\[Delta]"}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"bA", "-", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bA", " ", "Xa"}], "-", 
       RowBox[{"ba", " ", "XA"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
       "\[Delta]"}], ")"}]}], 
    RowBox[{"bA", " ", "Xa", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
       "\[Delta]", "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
        "\[Delta]"}]}], ")"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", "[", "t_", "]"}], ":=", 
  RowBox[{"ba", "-", "bA", "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"bA", "-", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"bA", " ", "Xa"}], "-", 
       RowBox[{"ba", " ", "XA"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
       "\[Delta]"}], ")"}]}], 
    RowBox[{"bA", " ", "Xa", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "\[Pi]"}]], "+", 
       "\[Delta]", "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
        "\[Delta]"}]}], ")"}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.922814255390058*^9, 3.922814284123145*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"70f96839-df6a-4d81-81cd-8098ad69401e"],

Cell[TextData[{
 "We know that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["p", "TI"], "^"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         FractionBox[
          RowBox[{
            StyleBox["C", "TI"], 
            StyleBox["b", "TI"], 
            RowBox[{"(", 
              StyleBox["t", "TI"], ")"}]}], 
          RowBox[{"1", "-", 
            StyleBox["C", "TI"], 
            SubsuperscriptBox["\[Integral]", "0", 
             StyleBox["t", "TI"]], 
            SubscriptBox[
             StyleBox["a", "TI"], "2"], 
            RowBox[{"(", 
              StyleBox["s", "TI"], ")"}], 
            StyleBox["b", "TI"], 
            RowBox[{"(", 
              StyleBox["s", "TI"], ")"}], 
            StyleBox["d", "TI"], 
            StyleBox["s", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{p}(t) =\\frac{C b(t)}{1 - C \\int^t_0 a_2(s) b(s) ds}",
      "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fd13d6f9-df8e-47de-9b1a-9b468dad46c6"],
 ", where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["b", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", "exp", 
         RowBox[{"[", 
           RowBox[{"\[Integral]", 
             SubscriptBox[
              StyleBox["a", "TI"], "1"], 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}]}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "b(t) = \\exp{\\left [ \\int a_1(t) \\right ]}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1135409c-961d-457a-b30d-35daf4b4bcf6"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["C", "TI"], "\[LongEqual]", "-", 
         FractionBox[
          RowBox[{
            OverscriptBox[
             StyleBox["p", "TI"], "^"], "(", "0", ")"}], 
          RowBox[{
            StyleBox["b", "TI"], "(", "0", ")"}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> "C = -\\frac{\\hat{p}(0)}{b(0)}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b6d29d8e-d47a-4a71-880c-42f93b8db5ff"]
}], "Text",
 CellChangeTimes->{{3.92281459732296*^9, 3.922814697570169*^9}, {
  3.922814734713111*^9, 3.922814772504735*^9}, {3.925477852623703*^9, 
  3.925477853346266*^9}},ExpressionUUID->"1ccdb5dd-fd0c-44c1-811c-\
35b466aaaa54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"a1", "[", "t", "]"}], ",", "t"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9210830077057753`*^9, 3.921083025314918*^9}, {
  3.922814291415669*^9, 3.9228142967240677`*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"57ab2a70-946c-491b-9308-30c2bbc691a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "ba"}], " ", "t"}], "+", 
  RowBox[{"bA", " ", 
   RowBox[{"(", 
    RowBox[{"t", "-", 
     FractionBox[
      RowBox[{"M", " ", "t"}], 
      RowBox[{
       RowBox[{"bA", " ", "XA"}], "-", 
       RowBox[{"d", " ", "XA"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "bA", " ", "\[Pi]"}], "-", 
         RowBox[{"bA", " ", "t"}], "+", 
         RowBox[{"d", " ", "t"}]}]], " ", "M", " ", "\[Delta]"}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"bA", "-", "d"}], ")"}], "2"], " ", "XA", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "d", " ", "\[Pi]"}]], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "bA", " ", "\[Pi]"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}]}], ")"}]}]]}], 
    ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"ba", " ", "XA"}], 
      RowBox[{"bA", " ", "Xa"}]]}], ")"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bA", "-", "d"}], ")"}], " ", "t"}]], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bA", "-", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]"}], "+", "t"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"bA", "-", "d"}], ")"}], " ", "\[Pi]"}]], " ", 
      "\[Delta]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.92108301754578*^9, 3.921083026356758*^9}, 
   3.922814299624755*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"4ed45a74-0c25-440f-bcdc-01a6661d9d69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "ba"}], " ", "t"}], "+", 
    RowBox[{"bA", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", 
       FractionBox[
        RowBox[{"M", " ", "t"}], 
        RowBox[{
         RowBox[{"bA", " ", "XA"}], "-", 
         RowBox[{"d", " ", "XA"}]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", "bA", " ", "\[Pi]"}], "-", 
           RowBox[{"bA", " ", "t"}], "+", 
           RowBox[{"d", " ", "t"}]}]], " ", "M", " ", "\[Delta]"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"bA", "-", "d"}], ")"}], "2"], " ", "XA", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "d", " ", "\[Pi]"}]], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "bA", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}]}], ")"}]}]]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"ba", " ", "XA"}], 
        RowBox[{"bA", " ", "Xa"}]]}], ")"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bA", "-", "d"}], ")"}], " ", "t"}]], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"bA", "-", "d"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Pi]"}], "+", "t"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"bA", "-", "d"}], ")"}], " ", "\[Pi]"}]], " ", 
        "\[Delta]"}]}], "]"}]}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.922814305573236*^9, 3.9228143094074383`*^9}, {
  3.9228151590938187`*^9, 3.922815162662722*^9}, {3.922815208186575*^9, 
  3.9228152096218157`*^9}, {3.922815256953095*^9, 3.922815283933979*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"7bec63d8-1697-426a-a45d-6da347ea334b"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "ba"}], " ", "t"}], "+", 
    RowBox[{"bA", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", 
       FractionBox[
        RowBox[{"M", " ", "t"}], 
        RowBox[{
         RowBox[{"bA", " ", "XA"}], "-", 
         RowBox[{"d", " ", "XA"}]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", "bA", " ", "\[Pi]"}], "-", 
           RowBox[{"bA", " ", "t"}], "+", 
           RowBox[{"d", " ", "t"}]}]], " ", "M", " ", "\[Delta]"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"bA", "-", "d"}], ")"}], "2"], " ", "XA", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "d", " ", "\[Pi]"}]], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "bA", " ", "\[Pi]"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}]}], ")"}]}]]}], 
      ")"}]}]}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bA", "-", "d"}], ")"}], " ", "t"}]], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bA", "-", "d"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]"}], "+", "t"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"bA", "-", "d"}], ")"}], " ", "\[Pi]"}]], " ", 
      "\[Delta]"}]}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     RowBox[{"ba", " ", "XA"}], 
     RowBox[{"bA", " ", "Xa"}]]}]]}]], "Output",
 CellChangeTimes->{3.922815298613253*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"a1cd5dfb-f413-43bd-a5ca-71a9ef3492ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "[", "t_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "ba"}], " ", "t"}], "+", 
     RowBox[{"bA", " ", 
      RowBox[{"(", 
       RowBox[{"t", "-", 
        FractionBox[
         RowBox[{"M", " ", "t"}], 
         RowBox[{
          RowBox[{"bA", " ", "XA"}], "-", 
          RowBox[{"d", " ", "XA"}]}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", "bA", " ", "\[Pi]"}], "-", 
            RowBox[{"bA", " ", "t"}], "+", 
            RowBox[{"d", " ", "t"}]}]], " ", "M", " ", "\[Delta]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"bA", "-", "d"}], ")"}], "2"], " ", "XA", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}]], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"2", " ", "bA", " ", "\[Pi]"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}]}], ")"}]}]]}], 
       ")"}]}]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bA", "-", "d"}], ")"}], " ", "t"}]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"bA", "-", "d"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Pi]"}], "+", "t"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Delta]"}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"bA", "-", "d"}], ")"}], " ", "\[Pi]"}]], " ", 
       "\[Delta]"}]}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox[
      RowBox[{"ba", " ", "XA"}], 
      RowBox[{"bA", " ", "Xa"}]]}]]}]}]], "Input",
 CellChangeTimes->{{3.92281526283062*^9, 3.9228152638463783`*^9}, {
  3.922815310036031*^9, 3.9228153119434347`*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"e0471890-80c6-440f-81f0-27c4fed27ce7"],

Cell[TextData[{
 "Setting ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["p", "TI"], "^"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", 
         OverscriptBox[
          StyleBox["p", "TI"], "^"], 
         RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat{p}(0) = \\hat{p}(2\\pi)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f0d49137-c88d-4d7e-b892-a2d82bbf7333"],
 ", we solve for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["p", "TI"], "^"], "(", "0", ")"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\hat{p}(0)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b43ec42a-685d-4e36-930e-61ddbde9dbf4"],
 ":"
}], "Text",
 CellChangeTimes->{
  3.9254778623096523`*^9},ExpressionUUID->"53145f3b-580f-42c1-9e3a-\
fbf3ce3ccca1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       FractionBox["p0", "b0"]}], "b2\[Pi]"}], 
     RowBox[{"1", "+", 
      RowBox[{
       FractionBox["p0", "b0"], "int"}]}]], "==", "p0"}], ",", "p0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.922814370116049*^9, 3.922814415605567*^9}, {
  3.922814484573628*^9, 3.922814569302595*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"d3d891cd-e3ce-486e-abe2-7b17dc3db348"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p0", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p0", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b0"}], "-", "b2\[Pi]"}], "int"]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.922814547736817*^9, 3.922814570551168*^9}},
 CellLabel->
  "Out[281]=",ExpressionUUID->"d80ba33f-e5da-4084-b531-54bcb2f20178"]
}, Open  ]],

Cell[TextData[{
 "Hence ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox[
          StyleBox["p", "TI"], "^"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", 
         OverscriptBox[
          StyleBox["p", "TI"], "^"], 
         RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}], "\[LongEqual]", 
         FractionBox[
          RowBox[{
            StyleBox["b", "TI"], 
            RowBox[{"(", "0", ")"}], "-", 
            StyleBox["b", "TI"], 
            RowBox[{"(", 
              RowBox[{"2", "\[Pi]"}], ")"}]}], 
          RowBox[{
            SubsuperscriptBox["\[Integral]", "0", 
             RowBox[{"2", "\[Pi]"}]], 
            SubscriptBox[
             StyleBox["a", "TI"], "2"], 
            RowBox[{"(", 
              StyleBox["s", "TI"], ")"}], 
            StyleBox["b", "TI"], 
            RowBox[{"(", 
              StyleBox["s", "TI"], ")"}], 
            StyleBox["d", "TI"], 
            StyleBox["s", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\hat{p}(0)=\\hat{p}(2\\pi) = \\frac{b(0) - b(2 \\pi)}{\\int^{2 \\pi}_0 \
a_2(s) b(s) ds}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "14a4f754-7153-4cdc-abe1-fa7653fe5645"],
 "."
}], "Text",
 CellChangeTimes->{{3.922814775791005*^9, 3.922814779698634*^9}, 
   3.922814824540621*^9},ExpressionUUID->"7a4892dc-fcb6-4514-807f-\
42f433ffe42e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bA", "\[Rule]", "0.25"}], ",", 
     RowBox[{"ba", "\[Rule]", "0.2"}], ",", 
     RowBox[{"XA", "\[Rule]", "500"}], ",", 
     RowBox[{"Xa", "\[Rule]", "1000"}], ",", 
     RowBox[{"M", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.65"}], ",", 
     RowBox[{"d", "\[Rule]", "0.05"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.922814899194559*^9, 3.922814899777233*^9}, {
  3.9228149394463778`*^9, 3.9228149719027243`*^9}, {3.922815055672736*^9, 
  3.922815059597011*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"a962267d-1b1b-4b85-88e1-7242f66f77f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0", "[", "pars_", "]"}], " ", ":=", " ", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"b", "[", "0", "]"}], "-", 
       RowBox[{"b", "[", 
        RowBox[{"2", "\[Pi]"}], "]"}]}], "/.", "pars"}], ")"}], "/", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"a2", "[", "s", "]"}], 
        RowBox[{"b", "[", "s", "]"}]}], "/.", "pars"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9228148340945187`*^9, 3.9228148912323017`*^9}, {
   3.922877316772533*^9, 3.922877343678944*^9}, 3.922877380105207*^9, {
   3.9228790347793617`*^9, 3.922879041078904*^9}, {3.922881077394082*^9, 
   3.922881099313192*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"63707e25-7b7a-4f32-b351-0a71501ba447"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0", "[", "pars", "]"}]], "Input",
 CellChangeTimes->{{3.922877386703103*^9, 3.922877392969976*^9}, {
  3.922879042902912*^9, 3.9228790436995897`*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"1a646547-e230-45d1-af70-15d48ede0f8f"],

Cell[BoxData["0.45123120445644194`"], "Output",
 CellChangeTimes->{3.927654327312368*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"27fdae9b-7983-4c2d-94b7-ab5b28d4d24c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate frequencies", "Subsection",
 CellChangeTimes->{{3.927654219187976*^9, 
  3.927654225504312*^9}},ExpressionUUID->"ae6a29bd-b7b4-4ea6-b3d7-\
2b7ee6a7391f"],

Cell[TextData[{
 "Parameters: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "0.25"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_A = 0.25", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c48d7692-44e9-43a1-80b5-144d14548684"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "0.2"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_a = 0.2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "96b6e407-6ca1-449f-8ccc-1837c71b7e6b"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "500"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_A = 500", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3197478d-b854-4205-87bd-e31cdd250699"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "1000"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_a = 1000", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "eba02894-b99b-44b2-b873-ec3bdec4196f"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "M=1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f96f9a40-e987-4b81-bd7d-7ba6238b2491"]
}], "Text",
 CellChangeTimes->{{3.922539592980373*^9, 3.922539624226914*^9}, {
  3.927651206430498*^9, 
  3.927651209208054*^9}},ExpressionUUID->"71d5801d-00bb-427d-a262-\
d9d99985eff5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BA", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coords", "=", 
   RowBox[{"MeshCoordinates", "[", 
    RowBox[{"DiscretizeRegion", "[", 
     RowBox[{
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0", "<", "d", "<", "Ba"}], "&&", 
         RowBox[{"0", "<", "delt", "<", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], "\[Pi]", 
             RowBox[{"(", 
              RowBox[{"BA", "-", "d"}], ")"}]}], "]"}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "delt"}], "}"}]}], "]"}], ",", 
      RowBox[{"AccuracyGoal", "->", "5"}], ",", " ", 
      RowBox[{"MaxCellMeasure", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Length\>\"", "->", ".005"}], "}"}]}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.921167243622669*^9, 3.921167249249854*^9}, {
   3.92133630950488*^9, 3.9213363107910748`*^9}, 3.922539527650947*^9, {
   3.922539636340589*^9, 3.9225396591996*^9}, {3.922539755858296*^9, 
   3.922539774891981*^9}, 3.922879241437992*^9, {3.922880816927641*^9, 
   3.9228808172506437`*^9}, {3.922891137727654*^9, 3.922891138548608*^9}, {
   3.922891234062602*^9, 3.9228912396653013`*^9}, {3.92315972288584*^9, 
   3.923159726577981*^9}, {3.923160895125621*^9, 3.923160896606633*^9}, {
   3.92340286720326*^9, 3.9234028801531982`*^9}, {3.923404774023793*^9, 
   3.923404774666256*^9}},
 CellLabel->
  "In[459]:=",ExpressionUUID->"16a3fbe7-ed6e-451d-a5a5-77b4db83982a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<fine_coords.csv\>\"", ",", "coords", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.927654239384026*^9, 3.927654247000546*^9}, {
  3.9276542812083483`*^9, 3.927654284673972*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"853fdb21-ac93-4c96-be71-e467b9b3ca93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#2", ",", "#", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#2", ",", "#"}], "}"}], "\[Element]", "mr"}], ",", 
         RowBox[{"p0", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bA", "\[Rule]", "BA"}], ",", 
            RowBox[{"ba", "\[Rule]", "Ba"}], ",", 
            RowBox[{"XA", "\[Rule]", "5000"}], ",", 
            RowBox[{"Xa", "\[Rule]", "10000"}], ",", 
            RowBox[{"M", "\[Rule]", "1"}], ",", 
            RowBox[{"\[Delta]", "\[Rule]", "#2"}], ",", 
            RowBox[{"d", "\[Rule]", "#"}]}], "}"}], "]"}], ",", "0"}], 
        "]"}]}], "}"}], "&"}], "@@@", "coords"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9210922158519583`*^9, 3.921092263485045*^9}, {
   3.921156976430944*^9, 3.92115698286734*^9}, 3.92115791622745*^9, {
   3.921166458682123*^9, 3.921166460313891*^9}, {3.922539672444496*^9, 
   3.9225396912225237`*^9}, {3.922878719508583*^9, 3.9228788128614273`*^9}, {
   3.922882281463125*^9, 3.922882281793762*^9}, {3.923161137505706*^9, 
   3.923161139047852*^9}, {3.923161384228094*^9, 3.923161385702442*^9}, {
   3.923163580252631*^9, 3.9231635815624638`*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"2a265df7-5ec0-45e3-880d-b54d6fe47663"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<frequency_data.csv\>\"", ",", "temp2", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.927654239384026*^9, 3.927654247000546*^9}, {
  3.9276542812083483`*^9, 3.927654284673972*^9}, {3.9276544336863317`*^9, 
  3.9276544389389753`*^9}},
 CellLabel->
  "In[463]:=",ExpressionUUID->"b7237d81-d95a-44ff-816b-ba3b8de7032c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Measuring local adaptation", "Title",
 CellChangeTimes->{{3.927652382678782*^9, 
  3.927652387097363*^9}},ExpressionUUID->"8842fe14-9478-424e-87d0-\
0e2ed6667cd3"],

Cell[TextData[{
 "We define local adaptation generally by:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[CapitalDelta]", 
          RowBox[{
            StyleBox["L", "TI"], 
            StyleBox["F", "TI"]}]], "\[LongEqual]", "E", 
         RowBox[{"[", 
           SubscriptBox[
            StyleBox["W", "TI"], 
            RowBox[{
              StyleBox["i", "TI"], 
              StyleBox["i", "TI"]}]], "]"}], "-", 
         SubscriptBox["E", 
          StyleBox["j", "TI"]], 
         RowBox[{"[", 
           SubscriptBox[
            StyleBox["W", "TI"], 
            RowBox[{
              StyleBox["i", "TI"], 
              StyleBox["j", "TI"]}]], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\Delta_{LF} = \\textrm{E}[W_{ii}] - \\textrm{E}_j[W_{ij}]", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "dd53b7d7-351b-419c-9395-79e327bd12ea"],
 "\nWhich is the difference between the expected fitness of the population of \
interest in its own habitat and its expected fitness in all possible \
fitnesses. \nIn the case of the island-mainland model, this becomes:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[CapitalDelta]", 
          RowBox[{
            StyleBox["L", "TI"], 
            StyleBox["F", "TI"]}]], "\[LongEqual]", 
         SubscriptBox[
          OverscriptBox[
           StyleBox["W", "TI"], "_"], 
          RowBox[{
            StyleBox["I", "TI"], "\[Rule]", 
            StyleBox["I", "TI"]}]], "-", 
         FractionBox["1", "2"], 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              OverscriptBox[
               StyleBox["W", "TI"], "_"], 
              RowBox[{
                StyleBox["I", "TI"], "\[Rule]", 
                StyleBox["I", "TI"]}]], "+", 
             SubscriptBox[
              OverscriptBox[
               StyleBox["W", "TI"], "_"], 
              RowBox[{
                StyleBox["I", "TI"], "\[Rule]", 
                StyleBox["M", "TI"]}]]}], ")"}], "\[LongEqual]", 
         FractionBox["1", "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["W", "TI"], "_"], 
          RowBox[{
            StyleBox["I", "TI"], "\[Rule]", 
            StyleBox["I", "TI"]}]], "-", 
         FractionBox["1", "2"], 
         SubscriptBox[
          OverscriptBox[
           StyleBox["W", "TI"], "_"], 
          RowBox[{
            StyleBox["I", "TI"], "\[Rule]", 
            StyleBox["M", "TI"]}]], "\n", "\[LongEqual]", 
         FractionBox["1", "2"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["p", "TI"], 
             SubscriptBox[
              StyleBox["W", "TI"], 
              StyleBox["A", "TI"]], "+", 
             RowBox[{"(", 
               RowBox[{"1", "-", 
                 StyleBox["p", "TI"]}], ")"}], 
             SubscriptBox[
              StyleBox["W", "TI"], 
              StyleBox["a", "TI"]]}], ")"}], "-", 
         FractionBox["1", "2"], 
         SubscriptBox[
          StyleBox["W", "TI"], 
          StyleBox["a", "TI"]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\Delta_{LF} & = \\bar{W}_{I\\gets I} - \\frac{1}{2}(\\bar{W}_{I\\gets \
I} + \\bar{W}_{I\\gets M}) = \\frac{1}{2} \\bar{W}_{I\\gets I} - \\frac{1}{2} \
\\bar{W}_{I \\gets M} \\\\ &= \\frac{1}{2}(p W_A + (1-p)W_a) - \\frac{1}{2} \
W_a", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "28dcb19e-a083-4927-9149-b99ba6e3bb15"],
 "\nFitness is given by:\n",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["W", "TI"], 
          StyleBox["i", "TI"]], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["i", "TI"]], "-", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["d", "TI"], "+", 
             FractionBox[
              StyleBox["N", "TI"], 
              SubscriptBox[
               StyleBox["X", "TI"], 
               StyleBox["i", "TI"]]]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "W_i = b_i - (d+ \\frac{N}{X_i})", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "82bd4da7-4339-462d-944d-a5a2da90d161"],
 ".\nNote that since ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["p", "TI"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "p(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fa85a6fa-2533-4c60-82df-c728c655994f"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["N", "TI"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "N(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0dc60130-22f2-421c-bfe8-827e0c7a5ccd"],
 " are time dependent, there are different ways to define local adaptation \
throughout the cycle. We start by considering the local adaptation at the \
beginning and end of the cycle."
}], "Text",
 CellChangeTimes->{{3.895583622269495*^9, 3.895583628805211*^9}, {
  3.895583699759357*^9, 3.895583705593032*^9}, {3.895583738205805*^9, 
  3.8955837415619917`*^9}, {3.8955838569892273`*^9, 3.895583869182891*^9}, {
  3.895593368732243*^9, 3.8955934222323093`*^9}, {3.895593504538959*^9, 
  3.8955935187978697`*^9}, {3.895593552262238*^9, 
  3.895593622896955*^9}},ExpressionUUID->"a0481a32-8e45-4f8b-92b5-\
4ae5350d12a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WA", "[", 
   RowBox[{"N_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"bA", "-", 
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"N", " ", 
       RowBox[{"bA", "/", "XA"}]}]}], ")"}]}], "/.", 
   "pars"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Wa", "[", 
   RowBox[{"N_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ba", "-", 
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"N", " ", 
       RowBox[{"ba", "/", "Xa"}]}]}], ")"}]}], "/.", "pars"}]}]}], "Input",
 CellChangeTimes->{{3.895584352609373*^9, 3.89558436899305*^9}, {
  3.8955844885726833`*^9, 3.895584498499145*^9}, {3.895589215349205*^9, 
  3.895589231742661*^9}, {3.895589282523644*^9, 3.895589351215926*^9}, {
  3.895592855676806*^9, 3.895592875681238*^9}, {3.895593626998094*^9, 
  3.895593629690218*^9}, {3.923163356957368*^9, 3.923163377956699*^9}, {
  3.923399812082245*^9, 3.9233998158712273`*^9}, {3.923485888993907*^9, 
  3.923485889299748*^9}},
 CellLabel->
  "In[414]:=",ExpressionUUID->"4e050a83-e3c6-495c-bcac-ae494b0763d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LF", "[", 
   RowBox[{"p_", ",", "N_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"p", "/", "2"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"WA", "[", 
      RowBox[{"N", ",", "pars"}], "]"}], "-", 
     RowBox[{"Wa", "[", 
      RowBox[{"N", ",", "pars"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.923163449719574*^9, 3.9231634610622683`*^9}, {
  3.923484794062826*^9, 3.923484795383904*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"5510bd28-8cce-47c3-9f85-abad3e0aa9af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"frequencies", "=", 
   RowBox[{"Import", "[", "\"\<frequency_data.csv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.927654444901108*^9, 3.927654486742579*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"95a69808-ff15-4f81-ad8c-fff6caf7e644"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LFinit", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", "#2", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "#2"}], "}"}], "\[Element]", "mr"}], ",", 
         RowBox[{"LF", "[", 
          RowBox[{"#3", ",", 
           RowBox[{"N0", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"bA", "\[Rule]", "BA"}], ",", 
              RowBox[{"ba", "\[Rule]", "Ba"}], ",", 
              RowBox[{"XA", "\[Rule]", "5000"}], ",", 
              RowBox[{"Xa", "\[Rule]", "10000"}], ",", 
              RowBox[{"M", "\[Rule]", "1"}], ",", 
              RowBox[{"\[Delta]", "\[Rule]", "#"}], ",", 
              RowBox[{"d", "\[Rule]", "#2"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"bA", "->", "BA"}], ",", 
             RowBox[{"ba", "->", "Ba"}], ",", 
             RowBox[{"XA", "\[Rule]", "5000"}], ",", 
             RowBox[{"Xa", "\[Rule]", "10000"}], ",", 
             RowBox[{"d", "\[Rule]", "#2"}]}], "}"}]}], "]"}], ",", "0"}], 
        "]"}]}], "}"}], "&"}], "@@@", "frequencies"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9210922158519583`*^9, 3.921092263485045*^9}, {
   3.921156976430944*^9, 3.92115698286734*^9}, 3.92115791622745*^9, {
   3.921166458682123*^9, 3.921166460313891*^9}, {3.922539672444496*^9, 
   3.9225396912225237`*^9}, {3.922878719508583*^9, 3.9228788128614273`*^9}, {
   3.922882281463125*^9, 3.922882281793762*^9}, {3.923161137505706*^9, 
   3.923161139047852*^9}, {3.923161384228094*^9, 3.923161385702442*^9}, 
   3.923163431619154*^9, {3.923163477786278*^9, 3.92316357282858*^9}, {
   3.9231636134338293`*^9, 3.923163652598246*^9}, {3.9231638818273897`*^9, 
   3.923163883205638*^9}, {3.923165097961725*^9, 3.923165099115608*^9}, {
   3.923165279885721*^9, 3.923165280834598*^9}, {3.9276545015047894`*^9, 
   3.927654504133017*^9}, {3.927654543966239*^9, 3.927654553537965*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"5d4182fb-26e0-45dd-aae7-3341e030682e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<local_adaptation_init.csv\>\"", ",", "LFinit", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.927654239384026*^9, 3.927654247000546*^9}, {
  3.9276542812083483`*^9, 3.927654284673972*^9}, {3.9276544336863317`*^9, 
  3.9276544389389753`*^9}, {3.92765461876943*^9, 3.927654628720045*^9}},
 CellLabel->
  "In[468]:=",ExpressionUUID->"90194000-1064-465d-9804-16713085a949"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LFfinal", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", "#2", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "#2"}], "}"}], "\[Element]", "mr"}], ",", 
         RowBox[{"LF", "[", 
          RowBox[{"#3", ",", 
           RowBox[{"Nf", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"bA", "\[Rule]", "BA"}], ",", 
              RowBox[{"ba", "\[Rule]", "Ba"}], ",", 
              RowBox[{"XA", "\[Rule]", "5000"}], ",", 
              RowBox[{"Xa", "\[Rule]", "10000"}], ",", 
              RowBox[{"M", "\[Rule]", "1"}], ",", 
              RowBox[{"\[Delta]", "\[Rule]", "#"}], ",", 
              RowBox[{"d", "\[Rule]", "#2"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"bA", "->", "BA"}], ",", 
             RowBox[{"ba", "->", "Ba"}], ",", 
             RowBox[{"XA", "\[Rule]", "5000"}], ",", 
             RowBox[{"Xa", "\[Rule]", "10000"}], ",", 
             RowBox[{"d", "\[Rule]", "#2"}]}], "}"}]}], "]"}], ",", "0"}], 
        "]"}]}], "}"}], "&"}], "@@@", "frequencies"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.923163716574584*^9, 3.923163716794702*^9}, {
  3.9231637553814497`*^9, 3.923163755509989*^9}, {3.923163866989946*^9, 
  3.923163875916521*^9}, {3.9276545664702797`*^9, 3.92765458087568*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"3376b471-d0b1-4fef-bc2e-72126fb8d67f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<local_adaptation_final.csv\>\"", ",", "LFfinal", ",", "\"\<CSV\>\""}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.927654239384026*^9, 3.927654247000546*^9}, {
  3.9276542812083483`*^9, 3.927654284673972*^9}, {3.9276544336863317`*^9, 
  3.9276544389389753`*^9}, {3.92765461876943*^9, 3.927654640453236*^9}},
 CellLabel->
  "In[470]:=",ExpressionUUID->"3388f9dd-be82-45e7-af1f-84de113369e7"],

Cell[CellGroupData[{

Cell["Stochastic data", "Subsection",
 CellChangeTimes->{{3.927657866084485*^9, 
  3.927657867987073*^9}},ExpressionUUID->"863c12ce-f9a6-4f42-bbd8-\
ef5d9eff1fd9"],

Cell[TextData[{
 "Parameters: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "0.25"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_A = 0.25", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f9318c22-8f75-44c7-b1ec-3fef7d054eda"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "0.2"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_a = 0.2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e1cd291b-f0f2-4eb2-acbd-9e834934faf7"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "500"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_A = 500", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7693273c-f629-4241-a107-3c7d6ccf1f1c"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "1000"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_a = 1000", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d8e786b9-b70d-4f2f-8ac9-b58a7a9cd1bf"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "M=1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0a56d53f-9c35-4c14-8322-44b54c174291"]
}], "Text",
 CellChangeTimes->{{3.922539592980373*^9, 3.922539624226914*^9}, {
  3.927651206430498*^9, 
  3.927651209208054*^9}},ExpressionUUID->"3d78ad32-5ddc-44ac-90b4-\
39131b2acdef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BA", " ", "=", " ", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xA", " ", "=", " ", "5000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xa", " ", "=", " ", "10000"}], ";"}]}], "Input",
 CellChangeTimes->{{3.923584011818815*^9, 3.923584039912627*^9}, {
  3.927658231106286*^9, 
  3.927658231270246*^9}},ExpressionUUID->"a1c58fa9-c425-41ae-b333-\
3e1cb9647b9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"Import", "[", "\"\<stoch_data.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.923159319437299*^9, 3.923159342347156*^9}, {
  3.9231625823796673`*^9, 3.923162583126219*^9}, {3.923395649240817*^9, 
  3.923395649574589*^9}, {3.92340004266958*^9, 3.9234000513741407`*^9}, {
  3.9276579765587263`*^9, 3.927657998442569*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"3bbd80fa-fb66-424f-8500-7dfe0959d8ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stodata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"temp", ",", "1", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9276580055674057`*^9, 3.92765801537558*^9}, {
  3.9276580619350977`*^9, 3.927658063381271*^9}},
 CellLabel->
  "In[523]:=",ExpressionUUID->"457888cc-7727-4639-afab-337c137ae73b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stolf0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#2", ",", "#", ",", 
       RowBox[{"Chop", "[", 
        RowBox[{"LF", "[", 
         RowBox[{
          RowBox[{"Chop", "[", "#3", "]"}], ",", "#4", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bA", "->", "BA"}], ",", 
            RowBox[{"ba", "->", "Ba"}], ",", 
            RowBox[{"XA", "->", "xA"}], ",", 
            RowBox[{"Xa", "->", "xa"}], ",", 
            RowBox[{"d", "->", "#"}]}], "}"}]}], "]"}], "]"}]}], "}"}], "&"}],
     "@@@", "stodata"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9231659638661833`*^9, 3.9231660646767597`*^9}, {
   3.923166298739077*^9, 3.923166305699518*^9}, {3.923395993315218*^9, 
   3.923395997425426*^9}, {3.923396050754898*^9, 3.923396064657881*^9}, {
   3.923396096000269*^9, 3.923396097664248*^9}, {3.92340007407864*^9, 
   3.923400074951273*^9}, {3.923400253283403*^9, 3.923400255942222*^9}, 
   3.923494058221386*^9, {3.927658077300384*^9, 3.927658107672476*^9}, 
   3.927658157840811*^9},
 CellLabel->
  "In[527]:=",ExpressionUUID->"799f9e7b-aeb3-43b8-9eae-ae421a5ad6a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<stoch_local_adaptation_init.csv\>\"", ",", "stolf0", ",", 
    "\"\<CSV\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.927658165794714*^9, 3.9276581919541903`*^9}, 
   3.92765823811208*^9},
 CellLabel->
  "In[529]:=",ExpressionUUID->"cc1a983d-8d53-4f7b-bc42-ffa3974f43f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stolff", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#2", ",", "#", ",", 
       RowBox[{"Chop", "[", 
        RowBox[{"LF", "[", 
         RowBox[{
          RowBox[{"Chop", "[", "#5", "]"}], ",", "#6", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bA", "->", "BA"}], ",", 
            RowBox[{"ba", "->", "Ba"}], ",", 
            RowBox[{"XA", "->", "xA"}], ",", 
            RowBox[{"Xa", "->", "xa"}], ",", 
            RowBox[{"d", "->", "#"}]}], "}"}]}], "]"}], "]"}]}], "}"}], "&"}],
     "@@@", "stodata"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.923166072322654*^9, 3.923166079133616*^9}, {
   3.92316616927282*^9, 3.923166171828504*^9}, {3.923166290462661*^9, 
   3.923166295073353*^9}, {3.923400080363719*^9, 3.923400081134288*^9}, {
   3.92340025820089*^9, 3.923400261450396*^9}, 3.9234940550700417`*^9, {
   3.927658211137849*^9, 3.927658245022622*^9}},
 CellLabel->
  "In[531]:=",ExpressionUUID->"733ce1cd-a44d-44bc-b396-5527b3200592"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<stoch_local_adaptation_final.csv\>\"", ",", "stolff", ",", 
    "\"\<CSV\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9276582514233027`*^9, 3.927658255729579*^9}},
 CellLabel->
  "In[532]:=",ExpressionUUID->"d4134a7b-5b11-450c-b664-ef35d0475eb6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Measuring strength of genetic drift", "Title",
 CellChangeTimes->{{3.927655361963208*^9, 
  3.927655366886612*^9}},ExpressionUUID->"f2ce165f-5f26-47cb-a10d-\
4e8041192a7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Scoeff", "[", 
   RowBox[{"n_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"WA", "[", 
    RowBox[{"n", ",", "pars"}], "]"}], "-", 
   RowBox[{"Wa", "[", 
    RowBox[{"n", ",", "pars"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.923401497167952*^9, 3.923401518928276*^9}},
 CellLabel->
  "In[476]:=",ExpressionUUID->"b91b99a5-43ea-4402-ad28-e4a021689974"],

Cell[CellGroupData[{

Cell["When p > 0:", "Subsubsection",
 CellChangeTimes->{{3.923401419175096*^9, 
  3.92340142441343*^9}},ExpressionUUID->"e9bf1ebe-e859-4542-9003-\
40856ba3b5ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nhat", "[", "t_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"bA", "-", "d"}], ")"}], " ", "n0", " ", "XA"}], 
    RowBox[{
     RowBox[{"bA", " ", "n0"}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "bA"}], "+", "d"}], ")"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bA", " ", 
         RowBox[{"(", 
          RowBox[{"n0", "-", "XA"}], ")"}]}], "+", 
        RowBox[{"d", " ", "XA"}]}], ")"}]}]}]], "/.", 
   RowBox[{"{", 
    RowBox[{"n0", "->", "N0"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.923401428400923*^9, 3.9234014458762703`*^9}, {
   3.9276553995430393`*^9, 3.927655402410891*^9}, 3.9276554692135983`*^9},
 CellLabel->
  "In[503]:=",ExpressionUUID->"8cb90150-a13b-44ec-98d6-862b65c60c79"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1neff", "[", "pars_", "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]"}], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"nhat", "[", "t", "]"}], "/.", "pars"}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.9234011272358*^9, 3.923401134859408*^9}, {
  3.9234015375017776`*^9, 3.923401608479411*^9}, {3.927657131609495*^9, 
  3.927657131839656*^9}},
 CellLabel->
  "In[506]:=",ExpressionUUID->"12d54822-1fe6-47da-88bb-ded486dbb944"]
}, Open  ]],

Cell[CellGroupData[{

Cell["When  p = 0:", "Subsubsection",
 CellChangeTimes->{{3.92340162154465*^9, 
  3.9234016331850357`*^9}},ExpressionUUID->"09f86afd-e6a0-43d6-9dd6-\
a057f8d45b6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0neff", "[", "pars_", "]"}], ":=", 
  FractionBox[
   RowBox[{"2", "\[Pi]"}], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"nsol", "[", "t", "]"}], "/.", "pars"}]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.920136474513955*^9, 3.920136521954537*^9}, 
   3.920136763400322*^9, {3.927656921967306*^9, 3.927656945715971*^9}, {
   3.927657141169817*^9, 3.9276571447625923`*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"f5811a5b-8873-4f00-ad24-5dd2f6381530"],

Cell[TextData[{
 "Parameters: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "0.25"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_A = 0.25", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "85a4e6aa-a000-4f97-a960-b41599715d53"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["b", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "0.2"}], TraditionalForm], 
     "errors" -> {}, "input" -> "b_a = 0.2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "886619ce-de41-4432-86c1-f6901d9616f2"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["A", "TI"]], "\[LongEqual]", "500"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_A = 500", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "741617c9-9596-427c-8568-7fd02bec7605"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["X", "TI"], 
          StyleBox["a", "TI"]], "\[LongEqual]", "1000"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X_a = 1000", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "dfd03340-d176-48c9-870b-2719d569fc48"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "M=1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "28704b49-e361-474a-9922-265358b19cd3"]
}], "Text",
 CellChangeTimes->{{3.922539592980373*^9, 3.922539624226914*^9}, {
  3.927651206430498*^9, 
  3.927651209208054*^9}},ExpressionUUID->"b38dc7b9-cd7b-4229-abd6-\
09078c8b1f2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BA", " ", "=", " ", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xA", " ", "=", " ", "5000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xa", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.923584011818815*^9, 3.923584039912627*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"2ba71c25-606b-407e-8292-29730c72524e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"neffdata", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#2", ",", "#", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#2", ",", "#"}], "}"}], "\[Element]", "mr"}], ",", 
         RowBox[{"p1neff", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bA", "->", "BA"}], ",", 
            RowBox[{"ba", "->", "Ba"}], ",", 
            RowBox[{"XA", "->", "xA"}], ",", 
            RowBox[{"Xa", "->", "xa"}], ",", 
            RowBox[{"M", "->", "m"}], ",", 
            RowBox[{"\[Delta]", "->", "#2"}], ",", 
            RowBox[{"d", "->", "#"}]}], "}"}], "]"}], ",", 
         RowBox[{"p0neff", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bA", "->", "BA"}], ",", 
            RowBox[{"ba", "->", "Ba"}], ",", 
            RowBox[{"XA", "->", "xA"}], ",", 
            RowBox[{"Xa", "->", "xa"}], ",", 
            RowBox[{"M", "->", "m"}], ",", 
            RowBox[{"\[Delta]", "->", "#2"}], ",", 
            RowBox[{"d", "->", "#"}]}], "}"}], "]"}]}], "]"}]}], "}"}], "&"}],
     "@@@", "coords"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.923584136141231*^9, {3.923584167558105*^9, 3.923584250730878*^9}, {
   3.9276571766461554`*^9, 3.927657178568612*^9}},
 CellLabel->
  "In[507]:=",ExpressionUUID->"b3f0f3bf-0abe-4d72-957e-6ae6a6fdbffe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nesdata", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", "#2", ",", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Scoeff", "[", 
          RowBox[{"#3", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"bA", "->", "BA"}], ",", 
             RowBox[{"ba", "->", "Ba"}], ",", 
             RowBox[{"XA", "->", "xA"}], ",", 
             RowBox[{"Xa", "->", "xa"}]}], "}"}]}], "]"}], "]"}], " ", 
        "#3"}]}], "}"}], "&"}], "@@@", "neffdata"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.923585423100214*^9, 3.9235854917883053`*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"4c51e80e-0763-4cf3-b91f-d6f410cf2678"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<nes_data.csv\>\"", ",", "nesdata", ",", "\"\<CSV\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9276574888025703`*^9, 3.927657527629767*^9}},
 CellLabel->
  "In[511]:=",ExpressionUUID->"e8bbb7e5-0527-4740-a8b2-7a711e8d9f41"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 676},
WindowMargins->{{7, Automatic}, {34, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e2eaaea1-4035-4afd-ba69-00fbbc87066e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 206, 5, 46, "Input",ExpressionUUID->"b439fc87-7e7f-426f-925f-dfb43408fe62"],
Cell[CellGroupData[{
Cell[789, 29, 191, 3, 238, "Title",ExpressionUUID->"d837a55e-5704-4434-aafb-ca2c834ea3d5"],
Cell[CellGroupData[{
Cell[1005, 36, 152, 3, 103, "Chapter",ExpressionUUID->"fc62509c-5876-420f-8cca-3626f42208c5"],
Cell[1160, 41, 1163, 40, 125, "Input",ExpressionUUID->"fd486219-eb59-4648-b03c-c545fe441dba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2360, 86, 919, 25, 105, "Chapter",ExpressionUUID->"92ce7847-7f0a-47f2-91a7-443e53e2c257"],
Cell[CellGroupData[{
Cell[3304, 115, 811, 22, 109, "Input",ExpressionUUID->"e7a16314-d3f6-4161-8422-7a01534baf6e"],
Cell[4118, 139, 545, 12, 70, "Message",ExpressionUUID->"9f9733dd-ee98-452f-9f94-27a4cbe51c8a"],
Cell[4666, 153, 1767, 53, 229, "Output",ExpressionUUID->"21e35bea-c6df-438a-a766-7ef23577f371"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6470, 211, 455, 10, 46, "Input",ExpressionUUID->"c479251f-6be7-4547-86c0-70c198aa1ebd"],
Cell[6928, 223, 3667, 124, 494, "Output",ExpressionUUID->"7a5c9ff2-bc7c-4f5f-9bb3-4f2ef7ef40d2"]
}, Open  ]],
Cell[10610, 350, 507, 14, 56, "Text",ExpressionUUID->"a3359c16-c447-4993-a1fd-98b695702811"],
Cell[11120, 366, 875, 28, 97, "Input",ExpressionUUID->"8423208b-071b-4fa0-a29d-cd59fd0ac818"],
Cell[11998, 396, 1840, 58, 185, "Input",ExpressionUUID->"8539b252-8a54-41f8-921a-7a6038872157"],
Cell[13841, 456, 815, 23, 56, "Text",ExpressionUUID->"e4c94ac5-855d-4800-9e2a-8419c0996cfd"],
Cell[14659, 481, 713, 19, 140, "Input",ExpressionUUID->"04b38e2c-d3cf-415c-bd02-a21de5888c8e"],
Cell[15375, 502, 4790, 151, 742, "Input",ExpressionUUID->"9f9cf0fb-1b23-431c-8667-a3eb5af5d883"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20202, 658, 167, 3, 103, "Chapter",ExpressionUUID->"fed83916-2527-4b55-b2ed-f9fe2bb888fd"],
Cell[20372, 663, 3835, 95, 269, "Text",ExpressionUUID->"49457624-eb07-45e2-9b99-8381f7aec87c"],
Cell[24210, 760, 854, 25, 193, "Input",ExpressionUUID->"47a899ff-c173-423c-b615-9813e5eeaacc"],
Cell[25067, 787, 1194, 23, 78, "Input",ExpressionUUID->"a14fc6e2-69ef-455f-b28f-2b721527da8e"],
Cell[CellGroupData[{
Cell[26286, 814, 211, 4, 46, "Input",ExpressionUUID->"f4029505-9acc-4f26-8afe-c884d6ee9f46"],
Cell[26500, 820, 414, 6, 52, "Output",ExpressionUUID->"35a4be88-da31-49f8-8ed5-1016f44644be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26951, 831, 162, 3, 81, "Subsection",ExpressionUUID->"8240f7f9-062e-4ea4-85dd-8e8de27a9fb6"],
Cell[27116, 836, 2105, 58, 55, "Text",ExpressionUUID->"6244888f-b148-4114-8d88-5f0a1f3753aa"],
Cell[29224, 896, 1344, 33, 264, "Input",ExpressionUUID->"0e0d031f-13d8-4a61-9188-59e7ffaeeb5d"],
Cell[30571, 931, 379, 8, 46, "Input",ExpressionUUID->"5f8a0f98-0ee9-4b70-ae25-5b7857458135"],
Cell[30953, 941, 945, 22, 109, "Input",ExpressionUUID->"91ba99f9-4812-4fb1-90bc-cd0fa0aeb335"],
Cell[31901, 965, 608, 12, 46, "Input",ExpressionUUID->"c52b0590-4e37-4be0-abb1-2c3939a337c3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32558, 983, 165, 3, 103, "Chapter",ExpressionUUID->"e0e23302-d7d9-411c-b7e8-6b9fd817765e"],
Cell[32726, 988, 1558, 39, 111, "Text",ExpressionUUID->"b734ab4d-ef39-4933-b064-6b24acca97b5"],
Cell[34287, 1029, 892, 25, 178, "Input",ExpressionUUID->"3fc1c102-814d-40a0-bb01-1f2ab1464c6d"],
Cell[CellGroupData[{
Cell[35204, 1058, 662, 17, 78, "Input",ExpressionUUID->"0e9df3c1-fb40-47e3-8d61-e51112b3745e"],
Cell[35869, 1077, 1710, 35, 191, "Output",ExpressionUUID->"ccfe818a-4231-41a3-bb00-06597b4a66c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37616, 1117, 691, 17, 109, "Input",ExpressionUUID->"98a9dbdd-5e01-44e0-950d-5af1b08dbb2e"],
Cell[38310, 1136, 1716, 36, 191, "Output",ExpressionUUID->"acb993d4-b616-4aa1-bb05-17895aefd27c"]
}, Open  ]],
Cell[40041, 1175, 651, 18, 109, "Input",ExpressionUUID->"c4989769-fd74-4340-a1b4-d81b6e4cb2b5"],
Cell[40695, 1195, 336, 8, 46, "Input",ExpressionUUID->"dcbf21bd-c9a0-4507-bc54-72bad6f3ffbb"],
Cell[CellGroupData[{
Cell[41056, 1207, 1895, 47, 243, "Input",ExpressionUUID->"88ff2ffb-e033-4c14-94aa-59adf406c6e0"],
Cell[42954, 1256, 270280, 4612, 551, "Output",ExpressionUUID->"12d22453-3985-4c8d-a501-2d5d9670ad0b"]
}, Open  ]],
Cell[313249, 5871, 509, 14, 55, "Text",ExpressionUUID->"785ee34f-48cd-4f92-8a35-1c10c17245d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313795, 5890, 170, 3, 103, "Chapter",ExpressionUUID->"3963143b-6093-48ae-8984-55000d2b75fb"],
Cell[313968, 5895, 570, 11, 46, "Input",ExpressionUUID->"0c0a6f2c-4dfc-4337-99bc-d0b339d57b16"],
Cell[314541, 5908, 2191, 50, 274, "Input",ExpressionUUID->"5c243ee0-fa73-4808-9429-96f1326253d0"],
Cell[316735, 5960, 859, 21, 78, "Input",ExpressionUUID->"754f530a-337e-4136-850e-32508e2dedd4"],
Cell[317597, 5983, 681, 18, 140, "Input",ExpressionUUID->"35b01235-a9ad-475a-ab5a-609ea2813dfd"],
Cell[318281, 6003, 970, 26, 140, "Input",ExpressionUUID->"0fe81842-f1dd-420d-9ce6-6ebbc4df3c6b"],
Cell[319254, 6031, 789, 21, 78, "Input",ExpressionUUID->"53582df2-d065-4b1d-9c1a-d70b45b76730"],
Cell[320046, 6054, 474, 13, 78, "Input",ExpressionUUID->"cbb50a7f-6db0-4d54-9879-e58dab86939c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[320569, 6073, 199, 3, 330, "Title",ExpressionUUID->"4e7edd04-db1f-4967-b67a-c15782bab892"],
Cell[CellGroupData[{
Cell[320793, 6080, 714, 21, 152, "Chapter",ExpressionUUID->"9ac09928-0373-4e62-8788-37b9a07558b7"],
Cell[321510, 6103, 508, 14, 55, "Text",ExpressionUUID->"3948c390-a5c6-4b7b-8169-ce14d8a5b51d"],
Cell[CellGroupData[{
Cell[322043, 6121, 312, 8, 46, "Input",ExpressionUUID->"532d587b-53bf-45e7-bfcb-f0c99450c210"],
Cell[322358, 6131, 967, 25, 121, "Output",ExpressionUUID->"c8136239-416e-47a1-8931-f77750552dd3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[323374, 6162, 552, 15, 105, "Chapter",ExpressionUUID->"d60aa3b4-552b-42c0-b10c-50aa986c6905"],
Cell[323929, 6179, 2146, 62, 114, "Text",ExpressionUUID->"f336feb5-aa7a-4d2e-a1e1-6aee2fe772bb"],
Cell[CellGroupData[{
Cell[326100, 6245, 976, 25, 147, "Input",ExpressionUUID->"3ac7e2fd-ca34-4d94-86e6-cbc7ee6268e6"],
Cell[327079, 6272, 280, 7, 72, "Output",ExpressionUUID->"3efaea14-9c67-48c0-8843-2da54e590782"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327396, 6284, 739, 21, 113, "Input",ExpressionUUID->"d9633f1c-d154-420a-b99d-106a9cd23a04"],
Cell[328138, 6307, 451, 11, 70, "Message",ExpressionUUID->"739d9c24-f5b3-4557-bc1f-a52570e91119"],
Cell[328592, 6320, 800, 24, 76, "Output",ExpressionUUID->"d04465af-f9e3-40d1-8298-885b042bc247"]
}, Open  ]],
Cell[329407, 6347, 1231, 33, 89, "Text",ExpressionUUID->"4ebf24a1-aaf2-476d-a267-47ca946d6628"],
Cell[CellGroupData[{
Cell[330663, 6384, 932, 27, 112, "Input",ExpressionUUID->"e4bda48d-02e8-4e03-9d76-2fc602067225"],
Cell[331598, 6413, 1024, 31, 88, "Output",ExpressionUUID->"8ae40e45-01ab-44f4-a8a2-966264cd35ad"]
}, Open  ]],
Cell[332637, 6447, 1069, 31, 87, "Input",ExpressionUUID->"e3615ba9-5edf-4b0e-bd69-2a66116326a6"],
Cell[333709, 6480, 378, 9, 69, "Input",ExpressionUUID->"8c5ce7db-2139-4234-adab-bb50c7032a50"],
Cell[334090, 6491, 558, 16, 56, "Text",ExpressionUUID->"bd91b361-6ead-4749-854a-c8620b033419"],
Cell[CellGroupData[{
Cell[334673, 6511, 1538, 48, 156, "Input",ExpressionUUID->"a59ecabc-d7d4-4693-a0d7-b04ffb462350"],
Cell[336214, 6561, 1003, 33, 88, "Output",ExpressionUUID->"2f0e0c21-ab6e-4320-832e-f9d15556b444"]
}, Open  ]],
Cell[337232, 6597, 1051, 29, 94, "Text",ExpressionUUID->"bfd1fa85-17dd-431f-9dab-c6b6f6138e81"],
Cell[CellGroupData[{
Cell[338308, 6630, 1124, 33, 134, "Input",ExpressionUUID->"fc18d966-c95b-4a25-925a-1f9b1bf75dbb"],
Cell[339435, 6665, 513, 15, 52, "Output",ExpressionUUID->"43a95490-da70-40c2-8951-ed71b3f556a8"]
}, Open  ]],
Cell[339963, 6683, 536, 13, 89, "Text",ExpressionUUID->"64fac204-9f53-47d4-b504-11f07b710e61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340536, 6701, 550, 15, 105, "Chapter",ExpressionUUID->"0f29d4ae-2dc4-4028-826e-c029a5a56013"],
Cell[341089, 6718, 2234, 64, 115, "Text",ExpressionUUID->"01c319df-90d7-494a-b0f1-c7393c6595ab"],
Cell[343326, 6784, 2562, 75, 114, "Text",ExpressionUUID->"4b3e6644-ccd0-49f7-bfe7-e003772203e1"],
Cell[CellGroupData[{
Cell[345913, 6863, 1545, 43, 170, "Input",ExpressionUUID->"3d2b1cb8-4f4e-4dc4-85bd-0ceb105eb8f4"],
Cell[347461, 6908, 3203, 100, 235, "Output",ExpressionUUID->"53599b59-65da-48b3-8052-3a07184e5ae8"]
}, Open  ]],
Cell[350679, 7011, 3213, 103, 309, "Input",ExpressionUUID->"70f96839-df6a-4d81-81cd-8098ad69401e"],
Cell[353895, 7116, 2585, 71, 157, "Text",ExpressionUUID->"1ccdb5dd-fd0c-44c1-811c-35b466aaaa54"],
Cell[CellGroupData[{
Cell[356505, 7191, 357, 9, 46, "Input",ExpressionUUID->"57ab2a70-946c-491b-9308-30c2bbc691a6"],
Cell[356865, 7202, 2140, 67, 178, "Output",ExpressionUUID->"4ed45a74-0c25-440f-bcdc-01a6661d9d69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359042, 7274, 2454, 70, 330, "Input",ExpressionUUID->"7bec63d8-1697-426a-a45d-6da347ea334b"],
Cell[361499, 7346, 2172, 67, 138, "Output",ExpressionUUID->"a1cd5dfb-f413-43bd-a5ca-71a9ef3492ab"]
}, Open  ]],
Cell[363686, 7416, 2363, 70, 134, "Input",ExpressionUUID->"e0471890-80c6-440f-81f0-27c4fed27ce7"],
Cell[366052, 7488, 1055, 30, 55, "Text",ExpressionUUID->"53145f3b-580f-42c1-9e3a-fbf3ce3ccca1"],
Cell[CellGroupData[{
Cell[367132, 7522, 487, 15, 99, "Input",ExpressionUUID->"d3d891cd-e3ce-486e-abe2-7b17dc3db348"],
Cell[367622, 7539, 420, 13, 71, "Output",ExpressionUUID->"d80ba33f-e5da-4084-b531-54bcb2f20178"]
}, Open  ]],
Cell[368057, 7555, 1453, 41, 92, "Text",ExpressionUUID->"7a4892dc-fcb6-4514-807f-42f433ffe42e"],
Cell[369513, 7598, 671, 16, 78, "Input",ExpressionUUID->"a962267d-1b1b-4b85-88e1-7242f66f77f4"],
Cell[370187, 7616, 930, 25, 109, "Input",ExpressionUUID->"63707e25-7b7a-4f32-b351-0a71501ba447"],
Cell[CellGroupData[{
Cell[371142, 7645, 258, 5, 46, "Input",ExpressionUUID->"1a646547-e230-45d1-af70-15d48ede0f8f"],
Cell[371403, 7652, 172, 3, 52, "Output",ExpressionUUID->"27fdae9b-7983-4c2d-94b7-ab5b28d4d24c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371612, 7660, 169, 3, 81, "Subsection",ExpressionUUID->"ae6a29bd-b7b4-4ea6-b3d7-2b7ee6a7391f"],
Cell[371784, 7665, 2105, 58, 55, "Text",ExpressionUUID->"71d5801d-00bb-427d-a262-d9d99985eff5"],
Cell[373892, 7725, 1646, 38, 264, "Input",ExpressionUUID->"16a3fbe7-ed6e-451d-a5a5-77b4db83982a"],
Cell[375541, 7765, 352, 8, 46, "Input",ExpressionUUID->"853fdb21-ac93-4c96-be71-e467b9b3ca93"],
Cell[375896, 7775, 1384, 31, 140, "Input",ExpressionUUID->"2a265df7-5ec0-45e3-880d-b54d6fe47663"],
Cell[377283, 7808, 407, 9, 46, "Input",ExpressionUUID->"b7237d81-d95a-44ff-816b-ba3b8de7032c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377751, 7824, 169, 3, 238, "Title",ExpressionUUID->"8842fe14-9478-424e-87d0-0e2ed6667cd3"],
Cell[377923, 7829, 5726, 151, 541, "Text",ExpressionUUID->"a0481a32-8e45-4f8b-92b5-4ae5350d12a5"],
Cell[383652, 7982, 1081, 28, 78, "Input",ExpressionUUID->"4e050a83-e3c6-495c-bcac-ae494b0763d0"],
Cell[384736, 8012, 559, 16, 46, "Input",ExpressionUUID->"5510bd28-8cce-47c3-9f85-abad3e0aa9af"],
Cell[385298, 8030, 288, 7, 46, "Input",ExpressionUUID->"95a69808-ff15-4f81-ad8c-fff6caf7e644"],
Cell[385589, 8039, 2100, 44, 202, "Input",ExpressionUUID->"5d4182fb-26e0-45dd-aae7-3341e030682e"],
Cell[387692, 8085, 464, 10, 46, "Input",ExpressionUUID->"90194000-1064-465d-9804-16713085a949"],
Cell[388159, 8097, 1511, 36, 202, "Input",ExpressionUUID->"3376b471-d0b1-4fef-bc2e-72126fb8d67f"],
Cell[389673, 8135, 466, 10, 46, "Input",ExpressionUUID->"3388f9dd-be82-45e7-af1f-84de113369e7"],
Cell[CellGroupData[{
Cell[390164, 8149, 163, 3, 81, "Subsection",ExpressionUUID->"863c12ce-f9a6-4f42-bbd8-ef5d9eff1fd9"],
Cell[390330, 8154, 2105, 58, 55, "Text",ExpressionUUID->"3d78ad32-5ddc-44ac-90b4-39131b2acdef"],
Cell[392438, 8214, 504, 12, 140, "Input",ExpressionUUID->"a1c58fa9-c425-41ae-b333-3e1cb9647b9f"],
Cell[392945, 8228, 472, 9, 46, "Input",ExpressionUUID->"3bbd80fa-fb66-424f-8500-7dfe0959d8ca"],
Cell[393420, 8239, 344, 8, 46, "Input",ExpressionUUID->"457888cc-7727-4639-afab-337c137ae73b"],
Cell[393767, 8249, 1158, 27, 171, "Input",ExpressionUUID->"799f9e7b-aeb3-43b8-9eae-ae421a5ad6a9"],
Cell[394928, 8278, 349, 9, 78, "Input",ExpressionUUID->"cc1a983d-8d53-4f7b-bc42-ffa3974f43f7"],
Cell[395280, 8289, 1033, 25, 171, "Input",ExpressionUUID->"733ce1cd-a44d-44bc-b396-5527b3200592"],
Cell[396316, 8316, 325, 8, 78, "Input",ExpressionUUID->"d4134a7b-5b11-450c-b664-ef35d0475eb6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396690, 8330, 178, 3, 238, "Title",ExpressionUUID->"f2ce165f-5f26-47cb-a10d-4e8041192a7a"],
Cell[396871, 8335, 400, 11, 46, "Input",ExpressionUUID->"b91b99a5-43ea-4402-ad28-e4a021689974"],
Cell[CellGroupData[{
Cell[397296, 8350, 161, 3, 67, "Subsubsection",ExpressionUUID->"e9bf1ebe-e859-4542-9003-40856ba3b5ce"],
Cell[397460, 8355, 911, 27, 76, "Input",ExpressionUUID->"8cb90150-a13b-44ec-98d6-862b65c60c79"],
Cell[398374, 8384, 622, 17, 89, "Input",ExpressionUUID->"12d54822-1fe6-47da-88bb-ded486dbb944"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399033, 8406, 164, 3, 67, "Subsubsection",ExpressionUUID->"09f86afd-e6a0-43d6-9dd6-a057f8d45b6b"],
Cell[399200, 8411, 648, 17, 89, "Input",ExpressionUUID->"f5811a5b-8873-4f00-ad24-5dd2f6381530"],
Cell[399851, 8430, 2105, 58, 55, "Text",ExpressionUUID->"b38dc7b9-cd7b-4229-abd6-09078c8b1f2a"],
Cell[401959, 8490, 556, 13, 171, "Input",ExpressionUUID->"2ba71c25-606b-407e-8292-29730c72524e"],
Cell[402518, 8505, 1411, 37, 202, "Input",ExpressionUUID->"b3f0f3bf-0abe-4d72-957e-6ae6a6fdbffe"],
Cell[403932, 8544, 720, 20, 140, "Input",ExpressionUUID->"4c51e80e-0763-4cf3-b91f-d6f410cf2678"],
Cell[404655, 8566, 301, 7, 46, "Input",ExpressionUUID->"e8bbb7e5-0527-4740-a8b2-7a711e8d9f41"]
}, Open  ]]
}, Open  ]]
}
]
*)

